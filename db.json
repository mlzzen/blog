{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/indigo/README.md","hash":"cfc7d09fc2ce26003954d647e3bbf98f71574eb7","modified":1551971945273},{"_id":"themes/indigo/package.json","hash":"3ad9b9ccb1ddaad3136f179a7ebff7d7b1c193f7","modified":1551971945311},{"_id":"themes/indigo/LICENSE","hash":"9dd0f70bc72c9d575447655526aded395bb93754","modified":1551971945273},{"_id":"themes/indigo/_config.yml","hash":"e90a37ca91838e910bf44c271c47a36074d2e909","modified":1553076459568},{"_id":"themes/indigo/languages/ja.yml","hash":"65a32717335211a45771a21fb7d7778808c6f0aa","modified":1551971945275},{"_id":"themes/indigo/languages/nl-NL","hash":"b540b76af76c1a180c517089ed2ad770cbded170","modified":1551971945276},{"_id":"themes/indigo/languages/en.yml","hash":"ba78def0453d08172248e220a1f9e145e99b4f23","modified":1551971945275},{"_id":"themes/indigo/languages/zh-CN.yml","hash":"6806e4c305facf19cbe4e37ccc5d6b00cb56e199","modified":1551971945277},{"_id":"themes/indigo/languages/zh-TW.yml","hash":"9b8bdd9c8b68716f364503926dca6ba8571ee5ff","modified":1551971945277},{"_id":"themes/indigo/layout/category.ejs","hash":"e5ba5cc2e092c199285b8097ef12ffe70bf84c91","modified":1551971945301},{"_id":"themes/indigo/layout/categories.ejs","hash":"efae06b4d83aaf73ab93260381e891825bf404ac","modified":1551971945301},{"_id":"themes/indigo/layout/index.ejs","hash":"772c1985c7743e101598b4eddc253f9174c5605b","modified":1551971945301},{"_id":"themes/indigo/layout/archive.ejs","hash":"6897178ba358379d6a4b7c0ba1bc2ab97ad5303a","modified":1551971945301},{"_id":"themes/indigo/layout/layout.ejs","hash":"770af84fff104c398ce8b6c995130cddd3e9a1e9","modified":1551971945301},{"_id":"themes/indigo/layout/tag.ejs","hash":"90a231dea3a364b329a740e5d6c49c8cf5664fe9","modified":1551971945301},{"_id":"themes/indigo/scripts/plugins.js","hash":"00ea278ea77733f546439aed507ce69a298da362","modified":1551971945311},{"_id":"source/categories/index.md","hash":"ce9ded8214b00d233ccd848ef90fdddb16db5894","modified":1551971945271},{"_id":"source/_posts/2018年总结.md","hash":"c0f25632a7d995b0621a75b9b7832b762cff0e2c","modified":1551971945262},{"_id":"themes/indigo/layout/tags.ejs","hash":"1fc0461e9602b53899ec756e4361beb8cce74740","modified":1551971945301},{"_id":"source/_posts/letsencrypt的免费https证书申请与nginx部署.md","hash":"f6b7dab309228806412ac63eba7925141e660af6","modified":1552143498755},{"_id":"source/_posts/GET与POST的区别.md","hash":"e00000c03c5eda9b021d85a7049a5f3776064df4","modified":1552573148693},{"_id":"source/_posts/new和字面量的区别.md","hash":"428b866644d291cc0e0631129aae2c88b356ece3","modified":1552658342437},{"_id":"source/_posts/win10系统UWP应用自启动设置.md","hash":"859c2e8b81f91a9c079b556b9843e93d924db236","modified":1552483284455},{"_id":"source/_posts/vscode-vue-ts项目-prettier配置.md","hash":"82f565a454dfa1dd60f597d7ee57bbf5da51fa1e","modified":1552145238997},{"_id":"source/_posts/react-native小知识.md","hash":"bda0b4af56d1b740c76d4fd607dab95c5aab1d77","modified":1551971945265},{"_id":"source/_posts/前端推荐书籍.md","hash":"483c4ae2157e385aa328780e492e119b9940c78c","modified":1551971945267},{"_id":"themes/indigo/layout/post.ejs","hash":"efc3352828351f8574c51e8a93dc56c66660c3b1","modified":1551971945301},{"_id":"source/_posts/vscode常用插件.md","hash":"fff1383035c5ead7ee4990138220660ca7a91d03","modified":1551971945267},{"_id":"source/_posts/关于盆骨前倾与睡眠.md","hash":"3f6e1792ac39a94782a3787d0e90925e1416084e","modified":1553435777399},{"_id":"source/_posts/博客的更新与脚本.md","hash":"3fd7dcf3ae70a29669dfb206461b2ec85d7abc9f","modified":1551971945268},{"_id":"source/_posts/子域名配置.md","hash":"a674b437699812e57a87dbd07957cf084765d722","modified":1551971945269},{"_id":"source/_posts/安装最新版powershell，把PWSH-Admin添加进shift右键文件夹的菜单里.md","hash":"1f29fc67b66b6a5424984727388ed89195391747","modified":1551971945269},{"_id":"source/tags/index.md","hash":"0e93e212c35b762e0f403b8a8a4b7a41bdf764af","modified":1551971945272},{"_id":"source/_posts/深夜排查小飞机故障.md","hash":"f8b0f262b27e2b85e53cc79092548c1ba9ed5e6e","modified":1552056588397},{"_id":"source/_posts/尝试使用eggjs-typescript-mysql.md","hash":"938d3296c38e9edbfcb41fca6ecceddbad164c5f","modified":1551971945270},{"_id":"source/_posts/组件之间的传值.md","hash":"37f844a0a99e8809378f2187e3c8c1a91b2c2778","modified":1552741496334},{"_id":"source/_posts/遇到的部分面试问题.md","hash":"e69e7831cb6366a8e25bbcaf9a7645da9cc8c0af","modified":1553183698320},{"_id":"themes/indigo/layout/page.ejs","hash":"567c42b978da4c39b8b4982df19b940c26bc32a4","modified":1551971945301},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"1351dbfca311f0d50a939f9e1a91c4f65bbcdf5f","modified":1551971945278},{"_id":"source/_posts/2019计划.md","hash":"09225eed5a57e51f533ccd60f9230a43579ba12e","modified":1551971945263},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"c78444f5b350ca79b260361bf3e5b6361d2661ba","modified":1551971945280},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"c294c98617ce14082f9b3d5eec83328f480f5597","modified":1551971945279},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"8b3e037dd5f3d4564012689c5cd6f63caf73df0f","modified":1551971945282},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"7208d4083ee3355aa969972a2ce249a67d56b3a6","modified":1551971945282},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"ea6aded24a68de0914f24b3760f766b5e1c9835a","modified":1551971945283},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"13952250463f70d1c1bbbfdd7f4ee8160dd6d99b","modified":1551971945283},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"648db446567a81371b8a29d719d13636aa157012","modified":1551971945281},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"9dfc591ec6c918c5b60b6ccbc5d1e18fea9faf8e","modified":1551971945280},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"667c6826732bfe2ea8a0fad2f5aad75f883eebe8","modified":1551971945301},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"20597ac0d547aea37680ecf195eb129fe5ee19d8","modified":1551971945291},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1551971945361},{"_id":"themes/indigo/source/img/favicon.ico","hash":"677be4a117cb0c1d4580f0b6007168f1e1c05869","modified":1553047372000},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1551971945361},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1551971945361},{"_id":"themes/indigo/source/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1551971945361},{"_id":"themes/indigo/source/css/style.less","hash":"97871594bc06c8999d62ddf4195e1233dbf184fa","modified":1551971945351},{"_id":"themes/indigo/source/js/search.js","hash":"a4d6c9c566ec1ca71ddacfd14c58f7ddaf9db24d","modified":1551971945361},{"_id":"themes/indigo/source/js/main.js","hash":"74e826cd197a6a0464a3cbe4911d1078905e71f1","modified":1551971945361},{"_id":"themes/indigo/source/js/main.min.js","hash":"9b51e378b7ec977e74b23485f354521becef8195","modified":1551971945361},{"_id":"themes/indigo/source/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1551971945361},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"752109904304fdb8e988ee1254df2af9c0701466","modified":1551971945301},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"30ec74f081cc4c273a7bcd5d57da99072e9f0755","modified":1551971945301},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"86fe837ab16cb60754b0a73bb9efa38b04f3023f","modified":1551971945285},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"3b877868c4a6fc217ea6f3314544830280a77472","modified":1551971945285},{"_id":"themes/indigo/layout/_partial/plugins/gitment.ejs","hash":"5f6ceb7f4b9b579e8e3f87894447f556a53f9385","modified":1551971945286},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"b5b87761751a897949e085a8f1ace78b0b8babd5","modified":1551971945286},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"da1355eea131952031e54c45560555e6d3aa5a33","modified":1551971945284},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"bb9deb32c54ea6820f622b923e62592915e9f21f","modified":1551971945288},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"ef9c77d8c6e004b014c83c5f9333e7174f8bafa3","modified":1551971945289},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"ddf290e90dc1c779f42a48e1bd852ca932148dfb","modified":1551971945290},{"_id":"themes/indigo/layout/_partial/plugins/valine.ejs","hash":"0a6245da90d54177441d32a6f1766b4f434660db","modified":1551971945290},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"a2c247c2e32016563dd6a22c21474072d93f4dbd","modified":1551971945289},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c08e44cbd7315dec7afb6054b04d3c7b82c3bde8","modified":1551971945292},{"_id":"themes/indigo/layout/_partial/plugins/hyper-comments.ejs","hash":"d0e6f1d713e7a1c0cc5fe25f3e574a4b791f938a","modified":1551971945287},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"3a5c9f7d22d30cd8ffa4e83a8d3976db22815994","modified":1551971945287},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"c5adcec8db1506c378d39855a697e1bb1165646c","modified":1551971945294},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"b1a6984e19d3493fb327383ee76e09fdee090426","modified":1551971945292},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"dd1dcc7776021ab3d68065f8532efead4c2b8051","modified":1551971945294},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"f137c126672769e9571be2bb0a70ea8dda644b0e","modified":1551971945294},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"b46160005224821a439dec9f1ff183e2f66d9f4b","modified":1551971945294},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"097c0276a61665e5ee96e5d5d85a7d6ae5ab2f49","modified":1551971945294},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"03719097851575a2c1bb95774058b224f6402a1f","modified":1551971945294},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"2ec7de870988cfbc8ea9872cddf7e4076ac64a57","modified":1551971945294},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"00fedf7971c0bda0623d968bc0614e512d19a985","modified":1551971945301},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"9f7fa74f95261e7e82cc2ba46db2a08eaee43543","modified":1551971945294},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"382fc22cd5cc073e881768a65600d97eba9f1d21","modified":1551971945311},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"bad63006b3bd4849bf53ad38482af0d9971061d3","modified":1551971945311},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"f047c8ca92f9e6a8e1299ace0cce91514631a21c","modified":1551971945311},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"880b4a28e97d556ed15b07642d25115f9b6ba4f6","modified":1551971945311},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"5f783f34bf093e654e8922ed4a2af8b7b2cd41c4","modified":1551971945311},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"d534b888d24df7703c632539d4bdd638fa764e98","modified":1551971945301},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"85157ddf3877b5c58e8f1d737dda3dfb1bfd540b","modified":1551971945311},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"99e48793dc0b4ffb66ecaf2d1315145872f9bb98","modified":1551971945311},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"38419aaf3c1832e84ade331f051f110fdc8b960f","modified":1551971945311},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"33b0a5edcedc26a4c592c812c5785bb20d3c93db","modified":1551971945311},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"516cded3c7f1db4cacfa898bcaf0adfae7f3a2e1","modified":1551971945320},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"f5e89ea5414e3096a28c8c96e86c3f669040a892","modified":1551971945320},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"dbc23e77e586ee682a21475f5eb568628ea6720f","modified":1551971945320},{"_id":"themes/indigo/source/css/_plugin/valine.less","hash":"b8f8d8037fb3c8525da12e580bd9e2ff9f298132","modified":1551971945320},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"a683c96a59470efd35722b763c55149a46e35156","modified":1551971945320},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"62b3891deb40bddd79624afbd59b49a26bde1312","modified":1551971945320},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"01eb7f84193180928a6ed4796ee8802f6c1628e7","modified":1551971945320},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"a02eaa601887f947257f6016679b62dc96a61c0c","modified":1551971945320},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"412894001b1ac6e63012b26b1109a0856651c076","modified":1551971945301},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"a3ecbd6ccf5b56ac39df710c34a149b82989a498","modified":1551971945311},{"_id":"themes/indigo/source/img/avatar.jpg","hash":"23ceafdd0d5e00a8b58e7bc9b45662b75db3447d","modified":1551971945351},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"eaad7af7888bddd7095243a43ff38f55ad8c494a","modified":1551971945301},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1551971945333},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1551971945333},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1551971945340},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1551971945333},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1551971945340},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1551971945340},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1551971945340},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1551971945340},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1551971945340},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1551971945351},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1551971945340},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1551971945351},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1551971945333},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1551971945333},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1551971945340},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1551971945351},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1551971945351},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1551971945351},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1551971945320},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1551971945333},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1551971945320},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1551971945333},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1551971945340},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1551971945340},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1551971945351},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1551971945330},{"_id":"public/atom.xml","hash":"fd714bff8ad58cd35546015d55565da2170b06c2","modified":1553436270343},{"_id":"public/content.json","hash":"f3220699fe7e6ab08cce0d8f7f51cebb1c35ff84","modified":1553436270503},{"_id":"public/categories/index.html","hash":"e8a0daac1f34f292fa8c55654456c377ae64e989","modified":1553076521849},{"_id":"public/2019/03/19/关于盆骨前倾与睡眠/index.html","hash":"9f2a6988c671856b8b25fae3f1c52008dd7a20a3","modified":1553436270608},{"_id":"public/2019/03/15/new和字面量的区别/index.html","hash":"51b986540ac1db1694614091aad1b5b5bded1a04","modified":1553076521857},{"_id":"public/2019/03/14/GET与POST的区别/index.html","hash":"571adb830c5e5e3127397657be129483b0aeb43f","modified":1553076521857},{"_id":"public/2019/03/13/win10系统UWP应用自启动设置/index.html","hash":"33389ef40224937fcf673a19f4b11084b41c2cd2","modified":1553076521857},{"_id":"public/2019/03/08/深夜排查小飞机故障/index.html","hash":"a6a6c44040312585ffbcb3b8f79e376e053cb1ec","modified":1553076521857},{"_id":"public/2019/01/01/2019计划/index.html","hash":"e087893e3e9fa04bafd5235dc8c367716b47922a","modified":1553076521857},{"_id":"public/2018/12/31/2018年总结/index.html","hash":"97cf3ba0cb4428bfa188272dfbb0e06ace3a89cb","modified":1553076521857},{"_id":"public/2018/06/08/博客的更新与脚本/index.html","hash":"acfaf7043365f9d01a5cad878a772e3bb5cab15d","modified":1553076521857},{"_id":"public/2018/08/17/安装最新版powershell，把PWSH-Admin添加进shift右键文件夹的菜单里/index.html","hash":"7cd7c5ad134696ed704ce49ad52fe81ed42e7402","modified":1553076521858},{"_id":"public/2018/06/07/子域名配置/index.html","hash":"53d0b3c2ea14167f6272d4a5601e0ecaa6d6658a","modified":1553076521858},{"_id":"public/2018/06/06/letsencrypt的免费https证书申请与nginx部署/index.html","hash":"afeb5c5bc649c30f207982a0a3f3d948365d43a2","modified":1553076521858},{"_id":"public/2018/05/13/react-native小知识/index.html","hash":"923f11a2a695316da096395c1677f4c763cec12a","modified":1553076521858},{"_id":"public/2018/05/13/前端推荐书籍/index.html","hash":"d5ca7a4412853ebc8a3d770f44b4c197f7852389","modified":1553076521858},{"_id":"public/archives/index.html","hash":"d19b7e8f6be341104adb87f50f3d8613b535335b","modified":1553076521858},{"_id":"public/archives/page/2/index.html","hash":"74b14b95808e6ca1f50018a71fcf80f29cfbf39e","modified":1553076521859},{"_id":"public/archives/2018/index.html","hash":"5bbfba40c23acbc4ee7763e24b66f614b294a0ec","modified":1553076521859},{"_id":"public/archives/2018/05/index.html","hash":"66e83017fbe3ff8dc9510a0d06116c7d7f33c64b","modified":1553076521859},{"_id":"public/archives/2018/06/index.html","hash":"2597074a9afb8946cefc0819069a77dbe089a984","modified":1553076521859},{"_id":"public/archives/2018/08/index.html","hash":"3208dc521042875143a07a263a2074b0c4e74030","modified":1553076521859},{"_id":"public/archives/2018/12/index.html","hash":"18829b0cd11f5fb9e92bcae7928eaf99754be735","modified":1553076521859},{"_id":"public/archives/2019/index.html","hash":"f340926fd117ca6ef3f590d1ded9aacf347af6e2","modified":1553076521859},{"_id":"public/archives/2019/01/index.html","hash":"8900b4397dce5b7b65e669429805e6be186e0262","modified":1553076521859},{"_id":"public/archives/2019/03/index.html","hash":"d90a14cac84de8126313db95ab35a98c2016031e","modified":1553076521860},{"_id":"public/tags/年末总结/index.html","hash":"141b99820749b01992dfa10219db37b3670c110d","modified":1553076521860},{"_id":"public/tags/nginx/index.html","hash":"97096680de9b6cc31205b8524b5f2fcd5322cc08","modified":1553076521860},{"_id":"public/tags/https/index.html","hash":"27cc935e3f69b9f033e566dca6a240da6a5f2ad3","modified":1553076521860},{"_id":"public/tags/HTTP/index.html","hash":"089f33d5001604cc2dff817671337cb9771b5d3b","modified":1553076521860},{"_id":"public/tags/GET/index.html","hash":"737dc9afba4f01f591daaaacc7e0d7fe1ee87518","modified":1553076521860},{"_id":"public/tags/POST/index.html","hash":"d48f16d3ab1c054e375f3af08cd083658355f2d5","modified":1553076521861},{"_id":"public/tags/网络通信/index.html","hash":"91c24394fc7c04e0b4fa7621be0256cc2fe89565","modified":1553076521861},{"_id":"public/tags/javascript/index.html","hash":"a004b0fd618aedce45cc339daef77d7b7b1d5e84","modified":1553076521861},{"_id":"public/tags/vscode/index.html","hash":"2ab4593311ef1cb95e0ef8fdb8c6c472cb83f83c","modified":1553076521861},{"_id":"public/tags/vue/index.html","hash":"77db2cf2c67d1aff38cbb77cc1cf86af8e7bee24","modified":1553076521861},{"_id":"public/tags/ts/index.html","hash":"8769ae5194bb102a4893afd0fcffa078d5c1b7bb","modified":1553076521861},{"_id":"public/tags/prettier/index.html","hash":"c5acf454fd055b61d18a09393dfd6e6739ef252a","modified":1553076521861},{"_id":"public/tags/react-native/index.html","hash":"74699ce0e153c816a8dcb63e0bdc34a7864b185b","modified":1553076521861},{"_id":"public/tags/react/index.html","hash":"4b6f7e4181f09ef1b75efcfeffd330ea125cda9b","modified":1553076521861},{"_id":"public/tags/开发工具/index.html","hash":"f7feebf4c93fe7bedf5faddc76015ba46aa88714","modified":1553076521861},{"_id":"public/tags/win10/index.html","hash":"1ac13f2fa3fb624508bfce2d20434e362f4194d6","modified":1553076521861},{"_id":"public/tags/自启动/index.html","hash":"fca0edcdc2ac0f417fca946fc3fb4d1b8131edb2","modified":1553076521861},{"_id":"public/tags/UWP/index.html","hash":"c3aa07418fda70a2e288d624b86eb2cdf6d68cf8","modified":1553076521861},{"_id":"public/tags/书/index.html","hash":"665c711336a81bae6628e1771d6fed35c0a5a358","modified":1553076521861},{"_id":"public/tags/vscode插件/index.html","hash":"337703611a704688e01dedf19733f5fbadd6ac5c","modified":1553076521861},{"_id":"public/tags/生活/index.html","hash":"a0d2f11b75157735b5ec6a2931b46de9202a1a40","modified":1553076521862},{"_id":"public/tags/ps1/index.html","hash":"732c18a75fb7d722abc4d919d5e2ac20f71b4b60","modified":1553076521862},{"_id":"public/tags/powershell/index.html","hash":"bb4f13a398ee72d583c5f5100417dbb034e30e90","modified":1553076521862},{"_id":"public/tags/脚本/index.html","hash":"67d58d8b8396a3b5818f2cf69863cae7984658f2","modified":1553076521862},{"_id":"public/tags/域名/index.html","hash":"9d097a0f5a1e95ff53b123a1ac916682b1934872","modified":1553076521862},{"_id":"public/tags/dns/index.html","hash":"985f92d887076cb99a583cbbaf858bbf096560a0","modified":1553076521862},{"_id":"public/tags/小飞机/index.html","hash":"c18874577311094e13deee1e502c4638e2525d79","modified":1553076521862},{"_id":"public/tags/搬瓦工/index.html","hash":"a8ca321c2ad5dd20a6a7a20e412707e89d962c7c","modified":1553076521862},{"_id":"public/tags/VPN/index.html","hash":"8f80e5f0715f5bd84fcd37fd269634729b5528dc","modified":1553076521862},{"_id":"public/tags/eggjs/index.html","hash":"bd82d88d94c1e7add2ccd1cb859a477d718febba","modified":1553076521862},{"_id":"public/tags/typescript/index.html","hash":"99dd0d7ca929a0917bd4b23e26cebb4f777134b0","modified":1553076521862},{"_id":"public/tags/mysql/index.html","hash":"1e2130886ee8413949dceb39e6094810f5e8a2e9","modified":1553076521862},{"_id":"public/tags/nodejs/index.html","hash":"a6ae2918b5197abf4ee4cf8afb3346c39093dc30","modified":1553076521862},{"_id":"public/tags/年初计划/index.html","hash":"9695e5d313a156cb9a2fc14ea248b1082aa42706","modified":1553076521863},{"_id":"public/tags/面试/index.html","hash":"266adfb98a418fbad3047d3472ec1bf149188b12","modified":1553076521863},{"_id":"public/tags/前端/index.html","hash":"17fb4495010650df6928332d7cae871cd8490506","modified":1553076521863},{"_id":"public/tags/面试题/index.html","hash":"84dfeb0c586b7ad356b9abc715d7ec0b3ea44b4a","modified":1553076521863},{"_id":"public/tags/index.html","hash":"4b275c5cb79807cda6ab145dcd6c981be57f2e61","modified":1553076521863},{"_id":"public/2019/03/16/组件之间的传值/index.html","hash":"75cd585b8afec0c6307fd7692da6c532717448f3","modified":1553076521863},{"_id":"public/2019/03/09/遇到的部分面试问题/index.html","hash":"26034e4c43d60dec884feeef43542707aa9477ee","modified":1553436270673},{"_id":"public/2018/06/13/尝试使用eggjs-typescript-mysql/index.html","hash":"c933177f04744e940146146fd71af8d8fb4d4344","modified":1553076521863},{"_id":"public/2018/05/24/vscode-vue-ts项目-prettier配置/index.html","hash":"5eae85acaa31c21db6ab0eeec03ca4f677cff6d6","modified":1553076521863},{"_id":"public/2018/05/14/vscode常用插件/index.html","hash":"fdbd4124a4439e763af2465f6634729e6885d90a","modified":1553076521863},{"_id":"public/index.html","hash":"30276047e31625a84c581dfc45e84a3b1a65e093","modified":1553436270675},{"_id":"public/page/2/index.html","hash":"29fc86b0e360fc06b271a20a98d4a423320fb3f6","modified":1553076521865},{"_id":"public/img/favicon.ico","hash":"677be4a117cb0c1d4580f0b6007168f1e1c05869","modified":1553076521866}],"Category":[],"Data":[],"Page":[{"layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\nlayout: categories\ncomments: false\n---\n","date":"2019-03-07T15:19:05.271Z","updated":"2019-03-07T15:19:05.271Z","path":"categories/index.html","title":"","_id":"cjth1jn9a0000n0v9uvcqas2z","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\nlayout: tags\ncomments: false\n---\n","date":"2019-03-07T15:19:05.272Z","updated":"2019-03-07T15:19:05.272Z","path":"tags/index.html","title":"","_id":"cjth1jn9h0002n0v9llp2witk","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2018年总结","date":"2018-12-31T14:07:26.000Z","_content":"\n一年又快结束了，回想这一年却并无太多成长。想做的几个小东西也因为后面觉得太过复杂而弃坑删了项目。\n\n作为一个伪软粉，还是很喜欢 typescript 的，今年在更多的项目使用了 ts，尝试了一下 uwp，.net core，flutter。还尝试学习了一下 java web 相关的之类的。个人还是更喜欢 uwp 和 flutter，不过 uwp 看情形是很难火的了，flutter 势头还不错。\n\n也在学习中思考了一下自己学习的的方向，是学习java web相关的还是学习更多客户端相关的。java虽然大学学过，不过几年没用，确实也基本忘了。\n\nreact native这两年热度不低，不过个人始终认为是一条歪路，就没怎么去学习过，也不打算去学习了，就算学也去学习flutter。\n\n\n","source":"_posts/2018年总结.md","raw":"---\ntitle: 2018年总结\ndate: 2018-12-31 22:07:26\ntags: [年末总结]\n---\n\n一年又快结束了，回想这一年却并无太多成长。想做的几个小东西也因为后面觉得太过复杂而弃坑删了项目。\n\n作为一个伪软粉，还是很喜欢 typescript 的，今年在更多的项目使用了 ts，尝试了一下 uwp，.net core，flutter。还尝试学习了一下 java web 相关的之类的。个人还是更喜欢 uwp 和 flutter，不过 uwp 看情形是很难火的了，flutter 势头还不错。\n\n也在学习中思考了一下自己学习的的方向，是学习java web相关的还是学习更多客户端相关的。java虽然大学学过，不过几年没用，确实也基本忘了。\n\nreact native这两年热度不低，不过个人始终认为是一条歪路，就没怎么去学习过，也不打算去学习了，就算学也去学习flutter。\n\n\n","slug":"2018年总结","published":1,"updated":"2019-03-07T15:19:05.262Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jn9b0001n0v9g81t8p18","content":"<p>一年又快结束了，回想这一年却并无太多成长。想做的几个小东西也因为后面觉得太过复杂而弃坑删了项目。</p>\n<p>作为一个伪软粉，还是很喜欢 typescript 的，今年在更多的项目使用了 ts，尝试了一下 uwp，.net core，flutter。还尝试学习了一下 java web 相关的之类的。个人还是更喜欢 uwp 和 flutter，不过 uwp 看情形是很难火的了，flutter 势头还不错。</p>\n<p>也在学习中思考了一下自己学习的的方向，是学习java web相关的还是学习更多客户端相关的。java虽然大学学过，不过几年没用，确实也基本忘了。</p>\n<p>react native这两年热度不低，不过个人始终认为是一条歪路，就没怎么去学习过，也不打算去学习了，就算学也去学习flutter。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一年又快结束了，回想这一年却并无太多成长。想做的几个小东西也因为后面觉得太过复杂而弃坑删了项目。</p>\n<p>作为一个伪软粉，还是很喜欢 typescript 的，今年在更多的项目使用了 ts，尝试了一下 uwp，.net core，flutter。还尝试学习了一下 java web 相关的之类的。个人还是更喜欢 uwp 和 flutter，不过 uwp 看情形是很难火的了，flutter 势头还不错。</p>\n<p>也在学习中思考了一下自己学习的的方向，是学习java web相关的还是学习更多客户端相关的。java虽然大学学过，不过几年没用，确实也基本忘了。</p>\n<p>react native这两年热度不低，不过个人始终认为是一条歪路，就没怎么去学习过，也不打算去学习了，就算学也去学习flutter。</p>\n"},{"title":"letsencrypt的免费https证书申请与nginx部署","date":"2018-06-06T10:44:52.000Z","_content":"\n## 使用certbot获取证书\n* 第一步 选择好使用的软件和系统，然后页面就自动滚动到了相应处。\n* 第二步 使用下面命令安装相关工具。\n\n    <pre>yum -y install yum-utils</pre>\n    <pre>yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional</pre>\n\n* 第三步 安装python-cert-nginx \n    <pre>$ sudo yum install python2-certbot-nginx</pre>\n* 第四步 使用命令，获得证书\n    <pre>$ sudo certbot --nginx</pre>\n* 第五步 打开nginx.conf 添加\n    <pre>\n    server {\n        listen 443 ssl;\n        server_name blog.riyue.me;\n        ssl_certificate /etc/letsencrypt/live/riyue.me/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/riyue.me/privkey.pem;\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n        ssl_prefer_server_ciphers on;\n        ssl_dhparam /etc/ssl/certs/dhparam.pem;\n        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';\n        ssl_session_timeout 1d;\n        ssl_session_cache shared:SSL:50m;\n        ssl_stapling on;\n        ssl_stapling_verify on;\n        add_header Strict-Transport-Security max-age=15768000;\n        # The rest of your server block\n        root /var/www/blog/public;\n        index index.html index.htm;\n        location / {\n                try_files $uri $uri/ =404;\n        }\n    }\n    </pre>\n\n* 第六步 重启nginx\n\n","source":"_posts/letsencrypt的免费https证书申请与nginx部署.md","raw":"---\ntitle: letsencrypt的免费https证书申请与nginx部署\ndate: 2018-06-06 18:44:52\ntags: [nginx, https]\n---\n\n## 使用certbot获取证书\n* 第一步 选择好使用的软件和系统，然后页面就自动滚动到了相应处。\n* 第二步 使用下面命令安装相关工具。\n\n    <pre>yum -y install yum-utils</pre>\n    <pre>yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional</pre>\n\n* 第三步 安装python-cert-nginx \n    <pre>$ sudo yum install python2-certbot-nginx</pre>\n* 第四步 使用命令，获得证书\n    <pre>$ sudo certbot --nginx</pre>\n* 第五步 打开nginx.conf 添加\n    <pre>\n    server {\n        listen 443 ssl;\n        server_name blog.riyue.me;\n        ssl_certificate /etc/letsencrypt/live/riyue.me/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/riyue.me/privkey.pem;\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n        ssl_prefer_server_ciphers on;\n        ssl_dhparam /etc/ssl/certs/dhparam.pem;\n        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';\n        ssl_session_timeout 1d;\n        ssl_session_cache shared:SSL:50m;\n        ssl_stapling on;\n        ssl_stapling_verify on;\n        add_header Strict-Transport-Security max-age=15768000;\n        # The rest of your server block\n        root /var/www/blog/public;\n        index index.html index.htm;\n        location / {\n                try_files $uri $uri/ =404;\n        }\n    }\n    </pre>\n\n* 第六步 重启nginx\n\n","slug":"letsencrypt的免费https证书申请与nginx部署","published":1,"updated":"2019-03-09T14:58:18.755Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jn9i0003n0v9oya2zvj5","content":"<h2 id=\"使用certbot获取证书\"><a href=\"#使用certbot获取证书\" class=\"headerlink\" title=\"使用certbot获取证书\"></a>使用certbot获取证书</h2><ul>\n<li>第一步 选择好使用的软件和系统，然后页面就自动滚动到了相应处。</li>\n<li><p>第二步 使用下面命令安装相关工具。</p>\n  <pre>yum -y install yum-utils</pre>\n  <pre>yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional</pre>\n</li>\n<li><p>第三步 安装python-cert-nginx </p>\n  <pre>$ sudo yum install python2-certbot-nginx</pre></li>\n<li>第四步 使用命令，获得证书  <pre>$ sudo certbot --nginx</pre></li>\n<li><p>第五步 打开nginx.conf 添加</p>\n  <pre>\n  server {\n      listen 443 ssl;\n      server_name blog.riyue.me;\n      ssl_certificate /etc/letsencrypt/live/riyue.me/fullchain.pem;\n      ssl_certificate_key /etc/letsencrypt/live/riyue.me/privkey.pem;\n      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n      ssl_prefer_server_ciphers on;\n      ssl_dhparam /etc/ssl/certs/dhparam.pem;\n      ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';\n      ssl_session_timeout 1d;\n      ssl_session_cache shared:SSL:50m;\n      ssl_stapling on;\n      ssl_stapling_verify on;\n      add_header Strict-Transport-Security max-age=15768000;\n      # The rest of your server block\n      root /var/www/blog/public;\n      index index.html index.htm;\n      location / {\n              try_files $uri $uri/ =404;\n      }\n  }\n  </pre>\n</li>\n<li><p>第六步 重启nginx</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用certbot获取证书\"><a href=\"#使用certbot获取证书\" class=\"headerlink\" title=\"使用certbot获取证书\"></a>使用certbot获取证书</h2><ul>\n<li>第一步 选择好使用的软件和系统，然后页面就自动滚动到了相应处。</li>\n<li><p>第二步 使用下面命令安装相关工具。</p>\n  <pre>yum -y install yum-utils</pre>\n  <pre>yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional</pre>\n</li>\n<li><p>第三步 安装python-cert-nginx </p>\n  <pre>$ sudo yum install python2-certbot-nginx</pre></li>\n<li>第四步 使用命令，获得证书  <pre>$ sudo certbot --nginx</pre></li>\n<li><p>第五步 打开nginx.conf 添加</p>\n  <pre>\n  server {\n      listen 443 ssl;\n      server_name blog.riyue.me;\n      ssl_certificate /etc/letsencrypt/live/riyue.me/fullchain.pem;\n      ssl_certificate_key /etc/letsencrypt/live/riyue.me/privkey.pem;\n      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n      ssl_prefer_server_ciphers on;\n      ssl_dhparam /etc/ssl/certs/dhparam.pem;\n      ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';\n      ssl_session_timeout 1d;\n      ssl_session_cache shared:SSL:50m;\n      ssl_stapling on;\n      ssl_stapling_verify on;\n      add_header Strict-Transport-Security max-age=15768000;\n      # The rest of your server block\n      root /var/www/blog/public;\n      index index.html index.htm;\n      location / {\n              try_files $uri $uri/ =404;\n      }\n  }\n  </pre>\n</li>\n<li><p>第六步 重启nginx</p>\n</li>\n</ul>\n"},{"title":"GET与POST的区别","date":"2019-03-14T14:07:40.000Z","_content":"| 分类             | GET                               | POST                                                         |\n| ---------------- | --------------------------------- | ------------------------------------------------------------ |\n| 后退按钮/刷新    | 无害                              | 数据会被重新提交                                             |\n| 书签             | 可收藏为书签                      | 不可收藏为书签                                               |\n| 缓存             | 能被缓存                          | 不能被缓存                                                   |\n| 编码类型         | application/x-www-form-urlencoded | application/x-www-form-urlencoded或multipart/form-data。为二进制数据使用多重编码 |\n| 历史             | 参数保留在浏览器中                | c参数不会保留在浏览器历史中                                  |\n| 对数据长度的限制 | 当发送数据时，GET方法向URL添加数据；URL的长度是受限的，2048个字符。 | 无限制                                                  |\n| 对数据类型的限制 | 只允许ASCII字符 | 没有限制。也允许二进制数据。 |\n| 安全性 | 与POST相比，GET的安全性较差，因为发送的数据是URL的一部分。在发送密码或其他敏感信息时绝不要使用GET | POST比GET更安全，因为参数不会被保存在浏览器历史或web服务器日志中 |\n| 可见性 | 数据在URL中对所有人都是可见的 | u数据不会显示在URL中 |\n\n","source":"_posts/GET与POST的区别.md","raw":"---\ntitle: GET与POST的区别\ndate: 2019-03-14 22:07:40\ntags: [HTTP, GET, POST, 网络通信]\n---\n| 分类             | GET                               | POST                                                         |\n| ---------------- | --------------------------------- | ------------------------------------------------------------ |\n| 后退按钮/刷新    | 无害                              | 数据会被重新提交                                             |\n| 书签             | 可收藏为书签                      | 不可收藏为书签                                               |\n| 缓存             | 能被缓存                          | 不能被缓存                                                   |\n| 编码类型         | application/x-www-form-urlencoded | application/x-www-form-urlencoded或multipart/form-data。为二进制数据使用多重编码 |\n| 历史             | 参数保留在浏览器中                | c参数不会保留在浏览器历史中                                  |\n| 对数据长度的限制 | 当发送数据时，GET方法向URL添加数据；URL的长度是受限的，2048个字符。 | 无限制                                                  |\n| 对数据类型的限制 | 只允许ASCII字符 | 没有限制。也允许二进制数据。 |\n| 安全性 | 与POST相比，GET的安全性较差，因为发送的数据是URL的一部分。在发送密码或其他敏感信息时绝不要使用GET | POST比GET更安全，因为参数不会被保存在浏览器历史或web服务器日志中 |\n| 可见性 | 数据在URL中对所有人都是可见的 | u数据不会显示在URL中 |\n\n","slug":"GET与POST的区别","published":1,"updated":"2019-03-14T14:19:08.693Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jn9m0005n0v9p9p3qb4a","content":"<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>GET</th>\n<th>POST</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>后退按钮/刷新</td>\n<td>无害</td>\n<td>数据会被重新提交</td>\n</tr>\n<tr>\n<td>书签</td>\n<td>可收藏为书签</td>\n<td>不可收藏为书签</td>\n</tr>\n<tr>\n<td>缓存</td>\n<td>能被缓存</td>\n<td>不能被缓存</td>\n</tr>\n<tr>\n<td>编码类型</td>\n<td>application/x-www-form-urlencoded</td>\n<td>application/x-www-form-urlencoded或multipart/form-data。为二进制数据使用多重编码</td>\n</tr>\n<tr>\n<td>历史</td>\n<td>参数保留在浏览器中</td>\n<td>c参数不会保留在浏览器历史中</td>\n</tr>\n<tr>\n<td>对数据长度的限制</td>\n<td>当发送数据时，GET方法向URL添加数据；URL的长度是受限的，2048个字符。</td>\n<td>无限制</td>\n</tr>\n<tr>\n<td>对数据类型的限制</td>\n<td>只允许ASCII字符</td>\n<td>没有限制。也允许二进制数据。</td>\n</tr>\n<tr>\n<td>安全性</td>\n<td>与POST相比，GET的安全性较差，因为发送的数据是URL的一部分。在发送密码或其他敏感信息时绝不要使用GET</td>\n<td>POST比GET更安全，因为参数不会被保存在浏览器历史或web服务器日志中</td>\n</tr>\n<tr>\n<td>可见性</td>\n<td>数据在URL中对所有人都是可见的</td>\n<td>u数据不会显示在URL中</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>GET</th>\n<th>POST</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>后退按钮/刷新</td>\n<td>无害</td>\n<td>数据会被重新提交</td>\n</tr>\n<tr>\n<td>书签</td>\n<td>可收藏为书签</td>\n<td>不可收藏为书签</td>\n</tr>\n<tr>\n<td>缓存</td>\n<td>能被缓存</td>\n<td>不能被缓存</td>\n</tr>\n<tr>\n<td>编码类型</td>\n<td>application/x-www-form-urlencoded</td>\n<td>application/x-www-form-urlencoded或multipart/form-data。为二进制数据使用多重编码</td>\n</tr>\n<tr>\n<td>历史</td>\n<td>参数保留在浏览器中</td>\n<td>c参数不会保留在浏览器历史中</td>\n</tr>\n<tr>\n<td>对数据长度的限制</td>\n<td>当发送数据时，GET方法向URL添加数据；URL的长度是受限的，2048个字符。</td>\n<td>无限制</td>\n</tr>\n<tr>\n<td>对数据类型的限制</td>\n<td>只允许ASCII字符</td>\n<td>没有限制。也允许二进制数据。</td>\n</tr>\n<tr>\n<td>安全性</td>\n<td>与POST相比，GET的安全性较差，因为发送的数据是URL的一部分。在发送密码或其他敏感信息时绝不要使用GET</td>\n<td>POST比GET更安全，因为参数不会被保存在浏览器历史或web服务器日志中</td>\n</tr>\n<tr>\n<td>可见性</td>\n<td>数据在URL中对所有人都是可见的</td>\n<td>u数据不会显示在URL中</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"new和字面量的区别","date":"2019-03-15T13:48:48.000Z","_content":"\n在调用new的过程会发生4件事情：\n\n1. 新生成一个对象\n2. 链接到原型\n3. 绑定this\n4. 返回新对象\n\n试着自己实现一个new\n\n```js\nfunction create() {\n    let obj = {};\n    let Con = [].shift.call(arguments);\n    obj.__proto__ = Con.apply(obj, arguments);\n    let result = Con.apply(obj, arguments);\n    return result instanceof Object ? result : obj;\n}\n```\n\n对于对象来说，其实都是通过new产生的，无论是function Foo()还是let a = {}。\n\n对于创建一个对象来说，更推荐实用字面量的方式创建对象，无论是性能上，还是可读性上。因为使用new Object()的方式创建对象需要通过作用域链一层层找到Object，但是字面量方式没有这个问题。\n\nfunction Foo(){} function就是个语法糖，内部等同于new Function()；let a = {a:1}这个字面量内部也是使用了new Object()。","source":"_posts/new和字面量的区别.md","raw":"---\ntitle: new和字面量的区别\ndate: 2019-03-15 21:48:48\ntags: [javascript]\n\n---\n\n在调用new的过程会发生4件事情：\n\n1. 新生成一个对象\n2. 链接到原型\n3. 绑定this\n4. 返回新对象\n\n试着自己实现一个new\n\n```js\nfunction create() {\n    let obj = {};\n    let Con = [].shift.call(arguments);\n    obj.__proto__ = Con.apply(obj, arguments);\n    let result = Con.apply(obj, arguments);\n    return result instanceof Object ? result : obj;\n}\n```\n\n对于对象来说，其实都是通过new产生的，无论是function Foo()还是let a = {}。\n\n对于创建一个对象来说，更推荐实用字面量的方式创建对象，无论是性能上，还是可读性上。因为使用new Object()的方式创建对象需要通过作用域链一层层找到Object，但是字面量方式没有这个问题。\n\nfunction Foo(){} function就是个语法糖，内部等同于new Function()；let a = {a:1}这个字面量内部也是使用了new Object()。","slug":"new和字面量的区别","published":1,"updated":"2019-03-15T13:59:02.437Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jn9n0006n0v9z3120hzh","content":"<p>在调用new的过程会发生4件事情：</p>\n<ol>\n<li>新生成一个对象</li>\n<li>链接到原型</li>\n<li>绑定this</li>\n<li>返回新对象</li>\n</ol>\n<p>试着自己实现一个new</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">create</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> Con = [].shift.call(<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    obj.__proto__ = Con.apply(obj, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = Con.apply(obj, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span> ? result : obj;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对于对象来说，其实都是通过new产生的，无论是function Foo()还是let a = {}。</p>\n<p>对于创建一个对象来说，更推荐实用字面量的方式创建对象，无论是性能上，还是可读性上。因为使用new Object()的方式创建对象需要通过作用域链一层层找到Object，但是字面量方式没有这个问题。</p>\n<p>function Foo(){} function就是个语法糖，内部等同于new Function()；let a = {a:1}这个字面量内部也是使用了new Object()。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在调用new的过程会发生4件事情：</p>\n<ol>\n<li>新生成一个对象</li>\n<li>链接到原型</li>\n<li>绑定this</li>\n<li>返回新对象</li>\n</ol>\n<p>试着自己实现一个new</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">create</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> Con = [].shift.call(<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    obj.__proto__ = Con.apply(obj, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = Con.apply(obj, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span> ? result : obj;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对于对象来说，其实都是通过new产生的，无论是function Foo()还是let a = {}。</p>\n<p>对于创建一个对象来说，更推荐实用字面量的方式创建对象，无论是性能上，还是可读性上。因为使用new Object()的方式创建对象需要通过作用域链一层层找到Object，但是字面量方式没有这个问题。</p>\n<p>function Foo(){} function就是个语法糖，内部等同于new Function()；let a = {a:1}这个字面量内部也是使用了new Object()。</p>\n"},{"title":"vscode vue ts项目 prettier配置","date":"2018-05-24T15:17:37.000Z","_content":"## 必装插件 Prettier - Code formatter\n\n## 配置\n### typescript 需要tslint和tslint-config-prettier\n\n```\nyarn add -D tslint tslint-config-prettier\n```\n\n根目录添加tslint.json\n\n```\n{\n    \"defaultSeverity\": \"warning\",\n    \"extend\": [\"tslint:recommended\", \"tslint-config-prettier\"],\n    \"linterOptions\": {\n        \"exclude\": [\"node_modules/**\"]\n    },\n    \"rules\": {\n        \"quotemark\": [true, \"single\"],\n        \"indent\": [true, \"spaces\", 4],\n        \"interface-name\": false,\n        \"ordered-imports\": false,\n        \"object-literal-sort-keys\": false,\n        \"no-consecutive-blank-lines\": false\n    }\n}\n```\n\n\n### 样式部分需要stylint和prettier-stylelint\n\n    yarn add -D stylelint prettier-stylelint stylelint-config-ydj\n\n根目录添加.stylelintrc.js\n\n```\nmodule.exports = {\n    extends: [\n        'stylelint-config-ydj/scss', // your stylint config\n        './node_modules/prettier-stylelint/config.js'\n    ],\n    rules: {\n        'string-quotes': 'double'\n    }\n};\n```\n\n### prettier配置，在根目录添加.prettierrc\n\n    {\n        \"eslintIntegration\": true,\n        \"stylelintIntegration\": true,\n        \"tabWidth\": 4,\n        \"singleQuote\": true,\n        \"semi\": false\n    }\n\n编辑器配置里面需要加入\n\n```\n    // vetur configuration\n    \"vetur.format.defaultFormatter.html\": \"js-beautify-html\",\n\n    // prettier configuration\n    \"prettier.disableLanguages\": [\n        \"vue\"\n    ],\n```\n\n\n\n\n\n\n\n","source":"_posts/vscode-vue-ts项目-prettier配置.md","raw":"---\ntitle: vscode vue ts项目 prettier配置\ndate: 2018-05-24 23:17:37\ntags: [vscode, vue, ts, prettier]\n---\n## 必装插件 Prettier - Code formatter\n\n## 配置\n### typescript 需要tslint和tslint-config-prettier\n\n```\nyarn add -D tslint tslint-config-prettier\n```\n\n根目录添加tslint.json\n\n```\n{\n    \"defaultSeverity\": \"warning\",\n    \"extend\": [\"tslint:recommended\", \"tslint-config-prettier\"],\n    \"linterOptions\": {\n        \"exclude\": [\"node_modules/**\"]\n    },\n    \"rules\": {\n        \"quotemark\": [true, \"single\"],\n        \"indent\": [true, \"spaces\", 4],\n        \"interface-name\": false,\n        \"ordered-imports\": false,\n        \"object-literal-sort-keys\": false,\n        \"no-consecutive-blank-lines\": false\n    }\n}\n```\n\n\n### 样式部分需要stylint和prettier-stylelint\n\n    yarn add -D stylelint prettier-stylelint stylelint-config-ydj\n\n根目录添加.stylelintrc.js\n\n```\nmodule.exports = {\n    extends: [\n        'stylelint-config-ydj/scss', // your stylint config\n        './node_modules/prettier-stylelint/config.js'\n    ],\n    rules: {\n        'string-quotes': 'double'\n    }\n};\n```\n\n### prettier配置，在根目录添加.prettierrc\n\n    {\n        \"eslintIntegration\": true,\n        \"stylelintIntegration\": true,\n        \"tabWidth\": 4,\n        \"singleQuote\": true,\n        \"semi\": false\n    }\n\n编辑器配置里面需要加入\n\n```\n    // vetur configuration\n    \"vetur.format.defaultFormatter.html\": \"js-beautify-html\",\n\n    // prettier configuration\n    \"prettier.disableLanguages\": [\n        \"vue\"\n    ],\n```\n\n\n\n\n\n\n\n","slug":"vscode-vue-ts项目-prettier配置","published":1,"updated":"2019-03-09T15:27:18.997Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jn9p0007n0v995ozng5g","content":"<h2 id=\"必装插件-Prettier-Code-formatter\"><a href=\"#必装插件-Prettier-Code-formatter\" class=\"headerlink\" title=\"必装插件 Prettier - Code formatter\"></a>必装插件 Prettier - Code formatter</h2><h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"typescript-需要tslint和tslint-config-prettier\"><a href=\"#typescript-需要tslint和tslint-config-prettier\" class=\"headerlink\" title=\"typescript 需要tslint和tslint-config-prettier\"></a>typescript 需要tslint和tslint-config-prettier</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add -D tslint tslint-config-prettier</span><br></pre></td></tr></table></figure>\n<p>根目录添加tslint.json</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;defaultSeverity&quot;: &quot;warning&quot;,</span><br><span class=\"line\">    &quot;extend&quot;: [&quot;tslint:recommended&quot;, &quot;tslint-config-prettier&quot;],</span><br><span class=\"line\">    &quot;linterOptions&quot;: &#123;</span><br><span class=\"line\">        &quot;exclude&quot;: [&quot;node_modules/**&quot;]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;rules&quot;: &#123;</span><br><span class=\"line\">        &quot;quotemark&quot;: [true, &quot;single&quot;],</span><br><span class=\"line\">        &quot;indent&quot;: [true, &quot;spaces&quot;, 4],</span><br><span class=\"line\">        &quot;interface-name&quot;: false,</span><br><span class=\"line\">        &quot;ordered-imports&quot;: false,</span><br><span class=\"line\">        &quot;object-literal-sort-keys&quot;: false,</span><br><span class=\"line\">        &quot;no-consecutive-blank-lines&quot;: false</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"样式部分需要stylint和prettier-stylelint\"><a href=\"#样式部分需要stylint和prettier-stylelint\" class=\"headerlink\" title=\"样式部分需要stylint和prettier-stylelint\"></a>样式部分需要stylint和prettier-stylelint</h3><pre><code>yarn add -D stylelint prettier-stylelint stylelint-config-ydj\n</code></pre><p>根目录添加.stylelintrc.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    extends: [</span><br><span class=\"line\">        &apos;stylelint-config-ydj/scss&apos;, // your stylint config</span><br><span class=\"line\">        &apos;./node_modules/prettier-stylelint/config.js&apos;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    rules: &#123;</span><br><span class=\"line\">        &apos;string-quotes&apos;: &apos;double&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"prettier配置，在根目录添加-prettierrc\"><a href=\"#prettier配置，在根目录添加-prettierrc\" class=\"headerlink\" title=\"prettier配置，在根目录添加.prettierrc\"></a>prettier配置，在根目录添加.prettierrc</h3><pre><code>{\n    &quot;eslintIntegration&quot;: true,\n    &quot;stylelintIntegration&quot;: true,\n    &quot;tabWidth&quot;: 4,\n    &quot;singleQuote&quot;: true,\n    &quot;semi&quot;: false\n}\n</code></pre><p>编辑器配置里面需要加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// vetur configuration</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">// prettier configuration</span><br><span class=\"line\">&quot;prettier.disableLanguages&quot;: [</span><br><span class=\"line\">    &quot;vue&quot;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"必装插件-Prettier-Code-formatter\"><a href=\"#必装插件-Prettier-Code-formatter\" class=\"headerlink\" title=\"必装插件 Prettier - Code formatter\"></a>必装插件 Prettier - Code formatter</h2><h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"typescript-需要tslint和tslint-config-prettier\"><a href=\"#typescript-需要tslint和tslint-config-prettier\" class=\"headerlink\" title=\"typescript 需要tslint和tslint-config-prettier\"></a>typescript 需要tslint和tslint-config-prettier</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add -D tslint tslint-config-prettier</span><br></pre></td></tr></table></figure>\n<p>根目录添加tslint.json</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;defaultSeverity&quot;: &quot;warning&quot;,</span><br><span class=\"line\">    &quot;extend&quot;: [&quot;tslint:recommended&quot;, &quot;tslint-config-prettier&quot;],</span><br><span class=\"line\">    &quot;linterOptions&quot;: &#123;</span><br><span class=\"line\">        &quot;exclude&quot;: [&quot;node_modules/**&quot;]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;rules&quot;: &#123;</span><br><span class=\"line\">        &quot;quotemark&quot;: [true, &quot;single&quot;],</span><br><span class=\"line\">        &quot;indent&quot;: [true, &quot;spaces&quot;, 4],</span><br><span class=\"line\">        &quot;interface-name&quot;: false,</span><br><span class=\"line\">        &quot;ordered-imports&quot;: false,</span><br><span class=\"line\">        &quot;object-literal-sort-keys&quot;: false,</span><br><span class=\"line\">        &quot;no-consecutive-blank-lines&quot;: false</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"样式部分需要stylint和prettier-stylelint\"><a href=\"#样式部分需要stylint和prettier-stylelint\" class=\"headerlink\" title=\"样式部分需要stylint和prettier-stylelint\"></a>样式部分需要stylint和prettier-stylelint</h3><pre><code>yarn add -D stylelint prettier-stylelint stylelint-config-ydj\n</code></pre><p>根目录添加.stylelintrc.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    extends: [</span><br><span class=\"line\">        &apos;stylelint-config-ydj/scss&apos;, // your stylint config</span><br><span class=\"line\">        &apos;./node_modules/prettier-stylelint/config.js&apos;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    rules: &#123;</span><br><span class=\"line\">        &apos;string-quotes&apos;: &apos;double&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"prettier配置，在根目录添加-prettierrc\"><a href=\"#prettier配置，在根目录添加-prettierrc\" class=\"headerlink\" title=\"prettier配置，在根目录添加.prettierrc\"></a>prettier配置，在根目录添加.prettierrc</h3><pre><code>{\n    &quot;eslintIntegration&quot;: true,\n    &quot;stylelintIntegration&quot;: true,\n    &quot;tabWidth&quot;: 4,\n    &quot;singleQuote&quot;: true,\n    &quot;semi&quot;: false\n}\n</code></pre><p>编辑器配置里面需要加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// vetur configuration</span><br><span class=\"line\">&quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\">// prettier configuration</span><br><span class=\"line\">&quot;prettier.disableLanguages&quot;: [</span><br><span class=\"line\">    &quot;vue&quot;</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n"},{"title":"react native小知识","date":"2018-05-13T12:38:54.000Z","_content":"1. 执行react-native run-android命令后，开始下载gradle文件，速度非常慢。\n    <pre>解决办法：\n        1. 手动使用迅雷下载，迅雷下载好后，把文件放入到一个文件夹中，最好路径不带中文。\n        2. 修改 项目名\\android\\gradle\\wrapper 下的gradle-wrapper.properties，把下 载的地址改为自己已经下好的地址。distributionUrl=file\\:///D:/gradle-2.14.1-all.zip  冒号要用\\转\n2. 执行react-native run-android命令后，使用的vs的模拟器，连接不上模拟器。\n    <pre>解决办法： 参考的 http://www.cnblogs.com/tianma3798/p/5911395.html\n        1. 打开模拟器的“工具”菜单。\n        2. 选项卡切换到Network。\n        3. 使用命令adb connect 169.254.138.177:5555就连接上了。\n        4. 重新运行命令react-native run-android。\n","source":"_posts/react-native小知识.md","raw":"---\ntitle: react native小知识\ndate: 2018-05-13 20:38:54\ntags: [react-native, react, 开发工具]\n---\n1. 执行react-native run-android命令后，开始下载gradle文件，速度非常慢。\n    <pre>解决办法：\n        1. 手动使用迅雷下载，迅雷下载好后，把文件放入到一个文件夹中，最好路径不带中文。\n        2. 修改 项目名\\android\\gradle\\wrapper 下的gradle-wrapper.properties，把下 载的地址改为自己已经下好的地址。distributionUrl=file\\:///D:/gradle-2.14.1-all.zip  冒号要用\\转\n2. 执行react-native run-android命令后，使用的vs的模拟器，连接不上模拟器。\n    <pre>解决办法： 参考的 http://www.cnblogs.com/tianma3798/p/5911395.html\n        1. 打开模拟器的“工具”菜单。\n        2. 选项卡切换到Network。\n        3. 使用命令adb connect 169.254.138.177:5555就连接上了。\n        4. 重新运行命令react-native run-android。\n","slug":"react-native小知识","published":1,"updated":"2019-03-07T15:19:05.265Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jn9r000an0v9jx5pg7fw","content":"<ol>\n<li>执行react-native run-android命令后，开始下载gradle文件，速度非常慢。<br> <pre>解决办法：<pre><code>1. 手动使用迅雷下载，迅雷下载好后，把文件放入到一个文件夹中，最好路径不带中文。\n2. 修改 项目名\\android\\gradle\\wrapper 下的gradle-wrapper.properties，把下 载的地址改为自己已经下好的地址。distributionUrl=file\\:///D:/gradle-2.14.1-all.zip  冒号要用\\转\n</code></pre></pre></li>\n<li>执行react-native run-android命令后，使用的vs的模拟器，连接不上模拟器。<br> <pre>解决办法： 参考的 <a href=\"http://www.cnblogs.com/tianma3798/p/5911395.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/tianma3798/p/5911395.html</a><pre><code>1. 打开模拟器的“工具”菜单。\n2. 选项卡切换到Network。\n3. 使用命令adb connect 169.254.138.177:5555就连接上了。\n4. 重新运行命令react-native run-android。\n</code></pre></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>执行react-native run-android命令后，开始下载gradle文件，速度非常慢。<br> <pre>解决办法：<pre><code>1. 手动使用迅雷下载，迅雷下载好后，把文件放入到一个文件夹中，最好路径不带中文。\n2. 修改 项目名\\android\\gradle\\wrapper 下的gradle-wrapper.properties，把下 载的地址改为自己已经下好的地址。distributionUrl=file\\:///D:/gradle-2.14.1-all.zip  冒号要用\\转\n</code></pre></pre></li>\n<li>执行react-native run-android命令后，使用的vs的模拟器，连接不上模拟器。<br> <pre>解决办法： 参考的 <a href=\"http://www.cnblogs.com/tianma3798/p/5911395.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/tianma3798/p/5911395.html</a><pre><code>1. 打开模拟器的“工具”菜单。\n2. 选项卡切换到Network。\n3. 使用命令adb connect 169.254.138.177:5555就连接上了。\n4. 重新运行命令react-native run-android。\n</code></pre></pre></li>\n</ol>\n"},{"title":"win10系统UWP应用自启动设置","date":"2019-03-13T13:18:41.000Z","_content":"1. win+R输入“shell:appsfolder”\n2. 找到“邮件”这个应用\n3. 右键“邮件”并创建快捷方式，会提示无法在当前目录创建，会创建到桌面\n4. win+E打开资源管理器进入到“C:\\Users\\用户名\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup”\n5. 把桌面的快捷方式放入到“启动”这个目录","source":"_posts/win10系统UWP应用自启动设置.md","raw":"---\ntitle: win10系统UWP应用自启动设置\ndate: 2019-03-13 21:18:41\ntags: [win10, 自启动, UWP]\n---\n1. win+R输入“shell:appsfolder”\n2. 找到“邮件”这个应用\n3. 右键“邮件”并创建快捷方式，会提示无法在当前目录创建，会创建到桌面\n4. win+E打开资源管理器进入到“C:\\Users\\用户名\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup”\n5. 把桌面的快捷方式放入到“启动”这个目录","slug":"win10系统UWP应用自启动设置","published":1,"updated":"2019-03-13T13:21:24.455Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jn9t000bn0v9mhzzivut","content":"<ol>\n<li>win+R输入“shell:appsfolder”</li>\n<li>找到“邮件”这个应用</li>\n<li>右键“邮件”并创建快捷方式，会提示无法在当前目录创建，会创建到桌面</li>\n<li>win+E打开资源管理器进入到“C:\\Users\\用户名\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup”</li>\n<li>把桌面的快捷方式放入到“启动”这个目录</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>win+R输入“shell:appsfolder”</li>\n<li>找到“邮件”这个应用</li>\n<li>右键“邮件”并创建快捷方式，会提示无法在当前目录创建，会创建到桌面</li>\n<li>win+E打开资源管理器进入到“C:\\Users\\用户名\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup”</li>\n<li>把桌面的快捷方式放入到“启动”这个目录</li>\n</ol>\n"},{"title":"前端推荐书籍","date":"2018-05-13T12:28:00.000Z","_content":"1. 《JavaScript权威指南（第六版）》\n2. 《JavaScript高级程序设计》\n3. 《JavaScript DOM编程艺术》\n4. 《JavaScript编程精解》\n5. 《JQuery权威指南》\n6. 《编写可维护的JavaScript》\n7. 《JavaScript异步编程》\n8. 《高性能JavaScript》\n","source":"_posts/前端推荐书籍.md","raw":"---\ntitle: 前端推荐书籍\ndate: 2018-05-13 20:28:00\ntags: 书\n---\n1. 《JavaScript权威指南（第六版）》\n2. 《JavaScript高级程序设计》\n3. 《JavaScript DOM编程艺术》\n4. 《JavaScript编程精解》\n5. 《JQuery权威指南》\n6. 《编写可维护的JavaScript》\n7. 《JavaScript异步编程》\n8. 《高性能JavaScript》\n","slug":"前端推荐书籍","published":1,"updated":"2019-03-07T15:19:05.267Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jn9v000dn0v9kls49of2","content":"<ol>\n<li>《JavaScript权威指南（第六版）》</li>\n<li>《JavaScript高级程序设计》</li>\n<li>《JavaScript DOM编程艺术》</li>\n<li>《JavaScript编程精解》</li>\n<li>《JQuery权威指南》</li>\n<li>《编写可维护的JavaScript》</li>\n<li>《JavaScript异步编程》</li>\n<li>《高性能JavaScript》</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>《JavaScript权威指南（第六版）》</li>\n<li>《JavaScript高级程序设计》</li>\n<li>《JavaScript DOM编程艺术》</li>\n<li>《JavaScript编程精解》</li>\n<li>《JQuery权威指南》</li>\n<li>《编写可维护的JavaScript》</li>\n<li>《JavaScript异步编程》</li>\n<li>《高性能JavaScript》</li>\n</ol>\n"},{"title":"vscode常用插件","date":"2018-05-14T06:26:11.000Z","_content":"## 1.auto import\n    在引用某些模块后会提示你引用某个包\n## 2.babel es6/es7\n    babel的es6/es7增强\n## 3.beautify\n    非常好用，的一款格式化代码的插件，能格式化许多种代码。\n## 4.change-case\n    一键转换大小驼峰的风格\n## 5.debugger for chrome\n    用于在chrome上面的debug\n## 6.document this\n    主要用于代码的批注，后期文档的生成。\n## 7.easy less\n    自动把less编译为css\n## 8.eslint\n    JavaScript和JSX检查工具\n## 9.git history\n    增强了vscode的git功能\n## 10.go\n    微软官方出的go语言的插件\n## 11.html css support\n    html里面的class提示\n## 12.html snippets\n    html的代码补全\n## 13.javascript(es6) code snippets\n    es6代码提示\n## 14.node debug\n    提示node.js代码\n## 15.one dark pro\n    热门的主题\n## 16.open in browser\n    直接在浏览器里面打开\n## 17.output colorizer\n    output，debug,extensions增强\n## 18.path autocomplete\n    路径提示\n## 19.react-beautify\n    react代码格式化\n## 20.react-native/react\n    react react-native代码的提示\n## 21.reactjs code snippets\n    react 代码提示\n## 22.TODO Hightlight\n    高亮todo\n## 23.TSLint\n    ts代码检查工具\n## 24.vetur\n    vue代码提示，检测，格式化工具。\n## 25.vscode-icons\n    文件图标\n","source":"_posts/vscode常用插件.md","raw":"---\ntitle: vscode常用插件\ndate: 2018-05-14 14:26:11\ntags: [vscode, vscode插件]\n---\n## 1.auto import\n    在引用某些模块后会提示你引用某个包\n## 2.babel es6/es7\n    babel的es6/es7增强\n## 3.beautify\n    非常好用，的一款格式化代码的插件，能格式化许多种代码。\n## 4.change-case\n    一键转换大小驼峰的风格\n## 5.debugger for chrome\n    用于在chrome上面的debug\n## 6.document this\n    主要用于代码的批注，后期文档的生成。\n## 7.easy less\n    自动把less编译为css\n## 8.eslint\n    JavaScript和JSX检查工具\n## 9.git history\n    增强了vscode的git功能\n## 10.go\n    微软官方出的go语言的插件\n## 11.html css support\n    html里面的class提示\n## 12.html snippets\n    html的代码补全\n## 13.javascript(es6) code snippets\n    es6代码提示\n## 14.node debug\n    提示node.js代码\n## 15.one dark pro\n    热门的主题\n## 16.open in browser\n    直接在浏览器里面打开\n## 17.output colorizer\n    output，debug,extensions增强\n## 18.path autocomplete\n    路径提示\n## 19.react-beautify\n    react代码格式化\n## 20.react-native/react\n    react react-native代码的提示\n## 21.reactjs code snippets\n    react 代码提示\n## 22.TODO Hightlight\n    高亮todo\n## 23.TSLint\n    ts代码检查工具\n## 24.vetur\n    vue代码提示，检测，格式化工具。\n## 25.vscode-icons\n    文件图标\n","slug":"vscode常用插件","published":1,"updated":"2019-03-07T15:19:05.267Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jn9y000en0v9pdvfdjx8","content":"<h2 id=\"1-auto-import\"><a href=\"#1-auto-import\" class=\"headerlink\" title=\"1.auto import\"></a>1.auto import</h2><pre><code>在引用某些模块后会提示你引用某个包\n</code></pre><h2 id=\"2-babel-es6-es7\"><a href=\"#2-babel-es6-es7\" class=\"headerlink\" title=\"2.babel es6/es7\"></a>2.babel es6/es7</h2><pre><code>babel的es6/es7增强\n</code></pre><h2 id=\"3-beautify\"><a href=\"#3-beautify\" class=\"headerlink\" title=\"3.beautify\"></a>3.beautify</h2><pre><code>非常好用，的一款格式化代码的插件，能格式化许多种代码。\n</code></pre><h2 id=\"4-change-case\"><a href=\"#4-change-case\" class=\"headerlink\" title=\"4.change-case\"></a>4.change-case</h2><pre><code>一键转换大小驼峰的风格\n</code></pre><h2 id=\"5-debugger-for-chrome\"><a href=\"#5-debugger-for-chrome\" class=\"headerlink\" title=\"5.debugger for chrome\"></a>5.debugger for chrome</h2><pre><code>用于在chrome上面的debug\n</code></pre><h2 id=\"6-document-this\"><a href=\"#6-document-this\" class=\"headerlink\" title=\"6.document this\"></a>6.document this</h2><pre><code>主要用于代码的批注，后期文档的生成。\n</code></pre><h2 id=\"7-easy-less\"><a href=\"#7-easy-less\" class=\"headerlink\" title=\"7.easy less\"></a>7.easy less</h2><pre><code>自动把less编译为css\n</code></pre><h2 id=\"8-eslint\"><a href=\"#8-eslint\" class=\"headerlink\" title=\"8.eslint\"></a>8.eslint</h2><pre><code>JavaScript和JSX检查工具\n</code></pre><h2 id=\"9-git-history\"><a href=\"#9-git-history\" class=\"headerlink\" title=\"9.git history\"></a>9.git history</h2><pre><code>增强了vscode的git功能\n</code></pre><h2 id=\"10-go\"><a href=\"#10-go\" class=\"headerlink\" title=\"10.go\"></a>10.go</h2><pre><code>微软官方出的go语言的插件\n</code></pre><h2 id=\"11-html-css-support\"><a href=\"#11-html-css-support\" class=\"headerlink\" title=\"11.html css support\"></a>11.html css support</h2><pre><code>html里面的class提示\n</code></pre><h2 id=\"12-html-snippets\"><a href=\"#12-html-snippets\" class=\"headerlink\" title=\"12.html snippets\"></a>12.html snippets</h2><pre><code>html的代码补全\n</code></pre><h2 id=\"13-javascript-es6-code-snippets\"><a href=\"#13-javascript-es6-code-snippets\" class=\"headerlink\" title=\"13.javascript(es6) code snippets\"></a>13.javascript(es6) code snippets</h2><pre><code>es6代码提示\n</code></pre><h2 id=\"14-node-debug\"><a href=\"#14-node-debug\" class=\"headerlink\" title=\"14.node debug\"></a>14.node debug</h2><pre><code>提示node.js代码\n</code></pre><h2 id=\"15-one-dark-pro\"><a href=\"#15-one-dark-pro\" class=\"headerlink\" title=\"15.one dark pro\"></a>15.one dark pro</h2><pre><code>热门的主题\n</code></pre><h2 id=\"16-open-in-browser\"><a href=\"#16-open-in-browser\" class=\"headerlink\" title=\"16.open in browser\"></a>16.open in browser</h2><pre><code>直接在浏览器里面打开\n</code></pre><h2 id=\"17-output-colorizer\"><a href=\"#17-output-colorizer\" class=\"headerlink\" title=\"17.output colorizer\"></a>17.output colorizer</h2><pre><code>output，debug,extensions增强\n</code></pre><h2 id=\"18-path-autocomplete\"><a href=\"#18-path-autocomplete\" class=\"headerlink\" title=\"18.path autocomplete\"></a>18.path autocomplete</h2><pre><code>路径提示\n</code></pre><h2 id=\"19-react-beautify\"><a href=\"#19-react-beautify\" class=\"headerlink\" title=\"19.react-beautify\"></a>19.react-beautify</h2><pre><code>react代码格式化\n</code></pre><h2 id=\"20-react-native-react\"><a href=\"#20-react-native-react\" class=\"headerlink\" title=\"20.react-native/react\"></a>20.react-native/react</h2><pre><code>react react-native代码的提示\n</code></pre><h2 id=\"21-reactjs-code-snippets\"><a href=\"#21-reactjs-code-snippets\" class=\"headerlink\" title=\"21.reactjs code snippets\"></a>21.reactjs code snippets</h2><pre><code>react 代码提示\n</code></pre><h2 id=\"22-TODO-Hightlight\"><a href=\"#22-TODO-Hightlight\" class=\"headerlink\" title=\"22.TODO Hightlight\"></a>22.TODO Hightlight</h2><pre><code>高亮todo\n</code></pre><h2 id=\"23-TSLint\"><a href=\"#23-TSLint\" class=\"headerlink\" title=\"23.TSLint\"></a>23.TSLint</h2><pre><code>ts代码检查工具\n</code></pre><h2 id=\"24-vetur\"><a href=\"#24-vetur\" class=\"headerlink\" title=\"24.vetur\"></a>24.vetur</h2><pre><code>vue代码提示，检测，格式化工具。\n</code></pre><h2 id=\"25-vscode-icons\"><a href=\"#25-vscode-icons\" class=\"headerlink\" title=\"25.vscode-icons\"></a>25.vscode-icons</h2><pre><code>文件图标\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-auto-import\"><a href=\"#1-auto-import\" class=\"headerlink\" title=\"1.auto import\"></a>1.auto import</h2><pre><code>在引用某些模块后会提示你引用某个包\n</code></pre><h2 id=\"2-babel-es6-es7\"><a href=\"#2-babel-es6-es7\" class=\"headerlink\" title=\"2.babel es6/es7\"></a>2.babel es6/es7</h2><pre><code>babel的es6/es7增强\n</code></pre><h2 id=\"3-beautify\"><a href=\"#3-beautify\" class=\"headerlink\" title=\"3.beautify\"></a>3.beautify</h2><pre><code>非常好用，的一款格式化代码的插件，能格式化许多种代码。\n</code></pre><h2 id=\"4-change-case\"><a href=\"#4-change-case\" class=\"headerlink\" title=\"4.change-case\"></a>4.change-case</h2><pre><code>一键转换大小驼峰的风格\n</code></pre><h2 id=\"5-debugger-for-chrome\"><a href=\"#5-debugger-for-chrome\" class=\"headerlink\" title=\"5.debugger for chrome\"></a>5.debugger for chrome</h2><pre><code>用于在chrome上面的debug\n</code></pre><h2 id=\"6-document-this\"><a href=\"#6-document-this\" class=\"headerlink\" title=\"6.document this\"></a>6.document this</h2><pre><code>主要用于代码的批注，后期文档的生成。\n</code></pre><h2 id=\"7-easy-less\"><a href=\"#7-easy-less\" class=\"headerlink\" title=\"7.easy less\"></a>7.easy less</h2><pre><code>自动把less编译为css\n</code></pre><h2 id=\"8-eslint\"><a href=\"#8-eslint\" class=\"headerlink\" title=\"8.eslint\"></a>8.eslint</h2><pre><code>JavaScript和JSX检查工具\n</code></pre><h2 id=\"9-git-history\"><a href=\"#9-git-history\" class=\"headerlink\" title=\"9.git history\"></a>9.git history</h2><pre><code>增强了vscode的git功能\n</code></pre><h2 id=\"10-go\"><a href=\"#10-go\" class=\"headerlink\" title=\"10.go\"></a>10.go</h2><pre><code>微软官方出的go语言的插件\n</code></pre><h2 id=\"11-html-css-support\"><a href=\"#11-html-css-support\" class=\"headerlink\" title=\"11.html css support\"></a>11.html css support</h2><pre><code>html里面的class提示\n</code></pre><h2 id=\"12-html-snippets\"><a href=\"#12-html-snippets\" class=\"headerlink\" title=\"12.html snippets\"></a>12.html snippets</h2><pre><code>html的代码补全\n</code></pre><h2 id=\"13-javascript-es6-code-snippets\"><a href=\"#13-javascript-es6-code-snippets\" class=\"headerlink\" title=\"13.javascript(es6) code snippets\"></a>13.javascript(es6) code snippets</h2><pre><code>es6代码提示\n</code></pre><h2 id=\"14-node-debug\"><a href=\"#14-node-debug\" class=\"headerlink\" title=\"14.node debug\"></a>14.node debug</h2><pre><code>提示node.js代码\n</code></pre><h2 id=\"15-one-dark-pro\"><a href=\"#15-one-dark-pro\" class=\"headerlink\" title=\"15.one dark pro\"></a>15.one dark pro</h2><pre><code>热门的主题\n</code></pre><h2 id=\"16-open-in-browser\"><a href=\"#16-open-in-browser\" class=\"headerlink\" title=\"16.open in browser\"></a>16.open in browser</h2><pre><code>直接在浏览器里面打开\n</code></pre><h2 id=\"17-output-colorizer\"><a href=\"#17-output-colorizer\" class=\"headerlink\" title=\"17.output colorizer\"></a>17.output colorizer</h2><pre><code>output，debug,extensions增强\n</code></pre><h2 id=\"18-path-autocomplete\"><a href=\"#18-path-autocomplete\" class=\"headerlink\" title=\"18.path autocomplete\"></a>18.path autocomplete</h2><pre><code>路径提示\n</code></pre><h2 id=\"19-react-beautify\"><a href=\"#19-react-beautify\" class=\"headerlink\" title=\"19.react-beautify\"></a>19.react-beautify</h2><pre><code>react代码格式化\n</code></pre><h2 id=\"20-react-native-react\"><a href=\"#20-react-native-react\" class=\"headerlink\" title=\"20.react-native/react\"></a>20.react-native/react</h2><pre><code>react react-native代码的提示\n</code></pre><h2 id=\"21-reactjs-code-snippets\"><a href=\"#21-reactjs-code-snippets\" class=\"headerlink\" title=\"21.reactjs code snippets\"></a>21.reactjs code snippets</h2><pre><code>react 代码提示\n</code></pre><h2 id=\"22-TODO-Hightlight\"><a href=\"#22-TODO-Hightlight\" class=\"headerlink\" title=\"22.TODO Hightlight\"></a>22.TODO Hightlight</h2><pre><code>高亮todo\n</code></pre><h2 id=\"23-TSLint\"><a href=\"#23-TSLint\" class=\"headerlink\" title=\"23.TSLint\"></a>23.TSLint</h2><pre><code>ts代码检查工具\n</code></pre><h2 id=\"24-vetur\"><a href=\"#24-vetur\" class=\"headerlink\" title=\"24.vetur\"></a>24.vetur</h2><pre><code>vue代码提示，检测，格式化工具。\n</code></pre><h2 id=\"25-vscode-icons\"><a href=\"#25-vscode-icons\" class=\"headerlink\" title=\"25.vscode-icons\"></a>25.vscode-icons</h2><pre><code>文件图标\n</code></pre>"},{"title":"关于盆骨前倾与睡眠","date":"2019-03-19T13:34:18.000Z","_content":"## 前因\n由于长期久坐以及缺少运动，腰部一直有不适感。以及长期睡眠质量差。\n\n## 盆骨前倾\n之前一直别人说我屁股翘，屁股大，我都没太在意，大概在今年的时候才意识到这原来是盆骨前倾。因为长期的久坐造成的盆骨前倾与腰疼。\n\n因为长期的腰疼，我一直在寻找解决的办法，前些天在某keep上看到有个关于盆骨前倾恢复的教程，便照着做了两天，有一些效果。\n\n## 睡眠\n\n我一直睡眠都不怎么好，因为经常晚睡，不运动。近段时间开始了夜跑，发现躺床上没多久就睡着了，完美解决了失眠的问题。建议失眠小伙伴们可以试试。不过主要还是因为这段时间离职，没事干，如果上班了估计很难坚持了吧。","source":"_posts/关于盆骨前倾与睡眠.md","raw":"---\ntitle: 关于盆骨前倾与睡眠\ndate: 2019-03-19 21:34:18\ntags: [生活]\n---\n## 前因\n由于长期久坐以及缺少运动，腰部一直有不适感。以及长期睡眠质量差。\n\n## 盆骨前倾\n之前一直别人说我屁股翘，屁股大，我都没太在意，大概在今年的时候才意识到这原来是盆骨前倾。因为长期的久坐造成的盆骨前倾与腰疼。\n\n因为长期的腰疼，我一直在寻找解决的办法，前些天在某keep上看到有个关于盆骨前倾恢复的教程，便照着做了两天，有一些效果。\n\n## 睡眠\n\n我一直睡眠都不怎么好，因为经常晚睡，不运动。近段时间开始了夜跑，发现躺床上没多久就睡着了，完美解决了失眠的问题。建议失眠小伙伴们可以试试。不过主要还是因为这段时间离职，没事干，如果上班了估计很难坚持了吧。","slug":"关于盆骨前倾与睡眠","published":1,"updated":"2019-03-24T13:56:17.399Z","_id":"cjth1jna1000gn0v9isue53yc","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前因\"><a href=\"#前因\" class=\"headerlink\" title=\"前因\"></a>前因</h2><p>由于长期久坐以及缺少运动，腰部一直有不适感。以及长期睡眠质量差。</p>\n<h2 id=\"盆骨前倾\"><a href=\"#盆骨前倾\" class=\"headerlink\" title=\"盆骨前倾\"></a>盆骨前倾</h2><p>之前一直别人说我屁股翘，屁股大，我都没太在意，大概在今年的时候才意识到这原来是盆骨前倾。因为长期的久坐造成的盆骨前倾与腰疼。</p>\n<p>因为长期的腰疼，我一直在寻找解决的办法，前些天在某keep上看到有个关于盆骨前倾恢复的教程，便照着做了两天，有一些效果。</p>\n<h2 id=\"睡眠\"><a href=\"#睡眠\" class=\"headerlink\" title=\"睡眠\"></a>睡眠</h2><p>我一直睡眠都不怎么好，因为经常晚睡，不运动。近段时间开始了夜跑，发现躺床上没多久就睡着了，完美解决了失眠的问题。建议失眠小伙伴们可以试试。不过主要还是因为这段时间离职，没事干，如果上班了估计很难坚持了吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前因\"><a href=\"#前因\" class=\"headerlink\" title=\"前因\"></a>前因</h2><p>由于长期久坐以及缺少运动，腰部一直有不适感。以及长期睡眠质量差。</p>\n<h2 id=\"盆骨前倾\"><a href=\"#盆骨前倾\" class=\"headerlink\" title=\"盆骨前倾\"></a>盆骨前倾</h2><p>之前一直别人说我屁股翘，屁股大，我都没太在意，大概在今年的时候才意识到这原来是盆骨前倾。因为长期的久坐造成的盆骨前倾与腰疼。</p>\n<p>因为长期的腰疼，我一直在寻找解决的办法，前些天在某keep上看到有个关于盆骨前倾恢复的教程，便照着做了两天，有一些效果。</p>\n<h2 id=\"睡眠\"><a href=\"#睡眠\" class=\"headerlink\" title=\"睡眠\"></a>睡眠</h2><p>我一直睡眠都不怎么好，因为经常晚睡，不运动。近段时间开始了夜跑，发现躺床上没多久就睡着了，完美解决了失眠的问题。建议失眠小伙伴们可以试试。不过主要还是因为这段时间离职，没事干，如果上班了估计很难坚持了吧。</p>\n"},{"title":"博客的更新与脚本","date":"2018-06-07T16:27:31.000Z","_content":"\n## 使用creanme.github.io与hexo阶段\n由于github.io速度太慢，而且电脑重装过一次系统，以前写的博文都丢失了，只剩下github上生成的静态文件，.md文件都没了。\n\n## 把hexo生成的文件部署在国内服务器上\n之前买的vps都是国外的，访问速度太慢，不好用来搭建国内访问的网站，于是买了几年某良心云。\n\n1. 首先在github上面建个仓库blog，hexo与master分支，hexo分支用来保存整个项目，方便以后本地电脑上的项目丢失了，直接clone下来就可以继续更新；master分支主要用来展示.md。\n2. 写博客就在本地上写，写完hexo g生成静态文件。然后把整个项目push到hexo分支，把source/_post文件夹里面的文件push到master。\n\n## 脚本\n\n\n```\nhexo g\ngit add -A\ngit commit -m \"update blog\"\ngit push origin hexo\ncd .\\source\\_posts\ngit add -A\ngit commit -m \"update blog\"\ngit push origin master\nssh -i \"密钥文件绝对路径\" name@address > /dev/null 2>&1 << eeooff\ncd /var/www/blog\ngit pull origin hexo\necho done!\n```\n","source":"_posts/博客的更新与脚本.md","raw":"---\ntitle: 博客的更新与脚本\ndate: 2018-06-08 00:27:31\ntags: [ps1, powershell, 脚本]\n---\n\n## 使用creanme.github.io与hexo阶段\n由于github.io速度太慢，而且电脑重装过一次系统，以前写的博文都丢失了，只剩下github上生成的静态文件，.md文件都没了。\n\n## 把hexo生成的文件部署在国内服务器上\n之前买的vps都是国外的，访问速度太慢，不好用来搭建国内访问的网站，于是买了几年某良心云。\n\n1. 首先在github上面建个仓库blog，hexo与master分支，hexo分支用来保存整个项目，方便以后本地电脑上的项目丢失了，直接clone下来就可以继续更新；master分支主要用来展示.md。\n2. 写博客就在本地上写，写完hexo g生成静态文件。然后把整个项目push到hexo分支，把source/_post文件夹里面的文件push到master。\n\n## 脚本\n\n\n```\nhexo g\ngit add -A\ngit commit -m \"update blog\"\ngit push origin hexo\ncd .\\source\\_posts\ngit add -A\ngit commit -m \"update blog\"\ngit push origin master\nssh -i \"密钥文件绝对路径\" name@address > /dev/null 2>&1 << eeooff\ncd /var/www/blog\ngit pull origin hexo\necho done!\n```\n","slug":"博客的更新与脚本","published":1,"updated":"2019-03-07T15:19:05.268Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jna2000in0v9o5wson8a","content":"<h2 id=\"使用creanme-github-io与hexo阶段\"><a href=\"#使用creanme-github-io与hexo阶段\" class=\"headerlink\" title=\"使用creanme.github.io与hexo阶段\"></a>使用creanme.github.io与hexo阶段</h2><p>由于github.io速度太慢，而且电脑重装过一次系统，以前写的博文都丢失了，只剩下github上生成的静态文件，.md文件都没了。</p>\n<h2 id=\"把hexo生成的文件部署在国内服务器上\"><a href=\"#把hexo生成的文件部署在国内服务器上\" class=\"headerlink\" title=\"把hexo生成的文件部署在国内服务器上\"></a>把hexo生成的文件部署在国内服务器上</h2><p>之前买的vps都是国外的，访问速度太慢，不好用来搭建国内访问的网站，于是买了几年某良心云。</p>\n<ol>\n<li>首先在github上面建个仓库blog，hexo与master分支，hexo分支用来保存整个项目，方便以后本地电脑上的项目丢失了，直接clone下来就可以继续更新；master分支主要用来展示.md。</li>\n<li>写博客就在本地上写，写完hexo g生成静态文件。然后把整个项目push到hexo分支，把source/_post文件夹里面的文件push到master。</li>\n</ol>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m &quot;update blog&quot;</span><br><span class=\"line\">git push origin hexo</span><br><span class=\"line\">cd .\\source\\_posts</span><br><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m &quot;update blog&quot;</span><br><span class=\"line\">git push origin master</span><br><span class=\"line\">ssh -i &quot;密钥文件绝对路径&quot; name@address &gt; /dev/null 2&gt;&amp;1 &lt;&lt; eeooff</span><br><span class=\"line\">cd /var/www/blog</span><br><span class=\"line\">git pull origin hexo</span><br><span class=\"line\">echo done!</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用creanme-github-io与hexo阶段\"><a href=\"#使用creanme-github-io与hexo阶段\" class=\"headerlink\" title=\"使用creanme.github.io与hexo阶段\"></a>使用creanme.github.io与hexo阶段</h2><p>由于github.io速度太慢，而且电脑重装过一次系统，以前写的博文都丢失了，只剩下github上生成的静态文件，.md文件都没了。</p>\n<h2 id=\"把hexo生成的文件部署在国内服务器上\"><a href=\"#把hexo生成的文件部署在国内服务器上\" class=\"headerlink\" title=\"把hexo生成的文件部署在国内服务器上\"></a>把hexo生成的文件部署在国内服务器上</h2><p>之前买的vps都是国外的，访问速度太慢，不好用来搭建国内访问的网站，于是买了几年某良心云。</p>\n<ol>\n<li>首先在github上面建个仓库blog，hexo与master分支，hexo分支用来保存整个项目，方便以后本地电脑上的项目丢失了，直接clone下来就可以继续更新；master分支主要用来展示.md。</li>\n<li>写博客就在本地上写，写完hexo g生成静态文件。然后把整个项目push到hexo分支，把source/_post文件夹里面的文件push到master。</li>\n</ol>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m &quot;update blog&quot;</span><br><span class=\"line\">git push origin hexo</span><br><span class=\"line\">cd .\\source\\_posts</span><br><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m &quot;update blog&quot;</span><br><span class=\"line\">git push origin master</span><br><span class=\"line\">ssh -i &quot;密钥文件绝对路径&quot; name@address &gt; /dev/null 2&gt;&amp;1 &lt;&lt; eeooff</span><br><span class=\"line\">cd /var/www/blog</span><br><span class=\"line\">git pull origin hexo</span><br><span class=\"line\">echo done!</span><br></pre></td></tr></table></figure>\n"},{"title":"子域名配置","date":"2018-06-07T15:12:48.000Z","_content":"## 域名管理处的配置\n我是把在namesilo处买的域名，然后把NameServers指向了 f1g1ns1.dnspod.net f1g1ns2.dnspod.net。然后在dnspod 添加了*domain.com 泛域名解析，然后要等一会儿，毕竟namesilo是国外的域名商，我开始以为没有作用，然后反复试各种方法，浪费了很多时间。\n\n## nginx 的配置\n    server{\n        listen 80;\n        server_name  riyue.me;\n        if ($scheme != \"https\") {\n            return 301 https://$host$request_uri;\n        }\n        root   /var/www/riyue;\n        index  index.php index.html index.htm;\n        location ~ \\.php$ {\n            include /etc/nginx/fastcgi_params;\n            fastcgi_pass 127.0.0.1:9000;\n            fastcgi_index index.php;\n        }\n    }\n\n    server{\n        listen 80;\n        server_name  blog.riyue.me;\n        # if ($scheme != \"https\") {\n        #     return 301 https://$host$request_uri;\n        # }\n        root   /var/www/blog/public;\n        index  index.php index.html index.htm;\n        location ~ \\.php$ {\n            include /etc/nginx/fastcgi_params;\n            fastcgi_pass 127.0.0.1:9000;\n            fastcgi_index index.php;\n        }\n    }\n## 重启nginx\n    nginx -s reload\n","source":"_posts/子域名配置.md","raw":"---\ntitle: 子域名配置\ndate: 2018-06-07 23:12:48\ntags: [域名, nginx, dns]\n---\n## 域名管理处的配置\n我是把在namesilo处买的域名，然后把NameServers指向了 f1g1ns1.dnspod.net f1g1ns2.dnspod.net。然后在dnspod 添加了*domain.com 泛域名解析，然后要等一会儿，毕竟namesilo是国外的域名商，我开始以为没有作用，然后反复试各种方法，浪费了很多时间。\n\n## nginx 的配置\n    server{\n        listen 80;\n        server_name  riyue.me;\n        if ($scheme != \"https\") {\n            return 301 https://$host$request_uri;\n        }\n        root   /var/www/riyue;\n        index  index.php index.html index.htm;\n        location ~ \\.php$ {\n            include /etc/nginx/fastcgi_params;\n            fastcgi_pass 127.0.0.1:9000;\n            fastcgi_index index.php;\n        }\n    }\n\n    server{\n        listen 80;\n        server_name  blog.riyue.me;\n        # if ($scheme != \"https\") {\n        #     return 301 https://$host$request_uri;\n        # }\n        root   /var/www/blog/public;\n        index  index.php index.html index.htm;\n        location ~ \\.php$ {\n            include /etc/nginx/fastcgi_params;\n            fastcgi_pass 127.0.0.1:9000;\n            fastcgi_index index.php;\n        }\n    }\n## 重启nginx\n    nginx -s reload\n","slug":"子域名配置","published":1,"updated":"2019-03-07T15:19:05.269Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jna5000ln0v9si61h98j","content":"<h2 id=\"域名管理处的配置\"><a href=\"#域名管理处的配置\" class=\"headerlink\" title=\"域名管理处的配置\"></a>域名管理处的配置</h2><p>我是把在namesilo处买的域名，然后把NameServers指向了 f1g1ns1.dnspod.net f1g1ns2.dnspod.net。然后在dnspod 添加了*domain.com 泛域名解析，然后要等一会儿，毕竟namesilo是国外的域名商，我开始以为没有作用，然后反复试各种方法，浪费了很多时间。</p>\n<h2 id=\"nginx-的配置\"><a href=\"#nginx-的配置\" class=\"headerlink\" title=\"nginx 的配置\"></a>nginx 的配置</h2><pre><code>server{\n    listen 80;\n    server_name  riyue.me;\n    if ($scheme != &quot;https&quot;) {\n        return 301 https://$host$request_uri;\n    }\n    root   /var/www/riyue;\n    index  index.php index.html index.htm;\n    location ~ \\.php$ {\n        include /etc/nginx/fastcgi_params;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n    }\n}\n\nserver{\n    listen 80;\n    server_name  blog.riyue.me;\n    # if ($scheme != &quot;https&quot;) {\n    #     return 301 https://$host$request_uri;\n    # }\n    root   /var/www/blog/public;\n    index  index.php index.html index.htm;\n    location ~ \\.php$ {\n        include /etc/nginx/fastcgi_params;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n    }\n}\n</code></pre><h2 id=\"重启nginx\"><a href=\"#重启nginx\" class=\"headerlink\" title=\"重启nginx\"></a>重启nginx</h2><pre><code>nginx -s reload\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"域名管理处的配置\"><a href=\"#域名管理处的配置\" class=\"headerlink\" title=\"域名管理处的配置\"></a>域名管理处的配置</h2><p>我是把在namesilo处买的域名，然后把NameServers指向了 f1g1ns1.dnspod.net f1g1ns2.dnspod.net。然后在dnspod 添加了*domain.com 泛域名解析，然后要等一会儿，毕竟namesilo是国外的域名商，我开始以为没有作用，然后反复试各种方法，浪费了很多时间。</p>\n<h2 id=\"nginx-的配置\"><a href=\"#nginx-的配置\" class=\"headerlink\" title=\"nginx 的配置\"></a>nginx 的配置</h2><pre><code>server{\n    listen 80;\n    server_name  riyue.me;\n    if ($scheme != &quot;https&quot;) {\n        return 301 https://$host$request_uri;\n    }\n    root   /var/www/riyue;\n    index  index.php index.html index.htm;\n    location ~ \\.php$ {\n        include /etc/nginx/fastcgi_params;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n    }\n}\n\nserver{\n    listen 80;\n    server_name  blog.riyue.me;\n    # if ($scheme != &quot;https&quot;) {\n    #     return 301 https://$host$request_uri;\n    # }\n    root   /var/www/blog/public;\n    index  index.php index.html index.htm;\n    location ~ \\.php$ {\n        include /etc/nginx/fastcgi_params;\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n    }\n}\n</code></pre><h2 id=\"重启nginx\"><a href=\"#重启nginx\" class=\"headerlink\" title=\"重启nginx\"></a>重启nginx</h2><pre><code>nginx -s reload\n</code></pre>"},{"title":"安装最新版powershell，把PWSH Admin添加进shift右键文件夹的菜单里","date":"2018-08-17T12:27:31.000Z","_content":"\n## 安装最新版powershell\n微软把powershell开源了很久了，最新版要在github上面下载\nhttps://github.com/PowerShell/PowerShell/releases\n\n## 把以admin启动最新版powershell添加进注册表\n1. win+R 输入regedit打开注册表。\n2. 来到路径 HKEY_CLASSES_ROOT\\\\Directory\\\\Background\\\\shell 里面。\n3. 右键shell新建项，取名叫“PWSHAsAdmin”，名字随便取的。\n4. 给右侧的的（默认）赋值为“PWSH Admin”。\n5. 在右侧新建字符串Extended，类型为REG_SZ。\n6. 在右侧新建字符串HasLUAShield，类型为REG_SZ。\n7. 在右侧新建字符串Icon,类型为REG_SZ, 值为pwsh.exe。\n如图所示：\n![图片描述](http://wx4.sinaimg.cn/mw690/6dd11bf2gy1fucz2rs9r4j20m80blmy9.jpg)\n\n\n1. 右键点击“PWSHAsAdmin”,新建项“command”。\n2. 在右侧把默认值改为pwsh -windowstyle hidden -Command \"Start-Process cmd -ArgumentList '/s,/k,pushd,%V && start pwsh && exit' -Verb RunAs\"\n如图所示：\n![图片描述](http://wx1.sinaimg.cn/mw690/6dd11bf2gy1fucz2v2657j20m80bl40l.jpg)\n\n\n## 试试成果\n![以管理员权限打开powershell](http://wx3.sinaimg.cn/mw690/6dd11bf2gy1fucxr9jameg20v70l648v.gif)\n","source":"_posts/安装最新版powershell，把PWSH-Admin添加进shift右键文件夹的菜单里.md","raw":"---\ntitle: 安装最新版powershell，把PWSH Admin添加进shift右键文件夹的菜单里\ndate: 2018-08-17 20:27:31\ntags: powershell\n---\n\n## 安装最新版powershell\n微软把powershell开源了很久了，最新版要在github上面下载\nhttps://github.com/PowerShell/PowerShell/releases\n\n## 把以admin启动最新版powershell添加进注册表\n1. win+R 输入regedit打开注册表。\n2. 来到路径 HKEY_CLASSES_ROOT\\\\Directory\\\\Background\\\\shell 里面。\n3. 右键shell新建项，取名叫“PWSHAsAdmin”，名字随便取的。\n4. 给右侧的的（默认）赋值为“PWSH Admin”。\n5. 在右侧新建字符串Extended，类型为REG_SZ。\n6. 在右侧新建字符串HasLUAShield，类型为REG_SZ。\n7. 在右侧新建字符串Icon,类型为REG_SZ, 值为pwsh.exe。\n如图所示：\n![图片描述](http://wx4.sinaimg.cn/mw690/6dd11bf2gy1fucz2rs9r4j20m80blmy9.jpg)\n\n\n1. 右键点击“PWSHAsAdmin”,新建项“command”。\n2. 在右侧把默认值改为pwsh -windowstyle hidden -Command \"Start-Process cmd -ArgumentList '/s,/k,pushd,%V && start pwsh && exit' -Verb RunAs\"\n如图所示：\n![图片描述](http://wx1.sinaimg.cn/mw690/6dd11bf2gy1fucz2v2657j20m80bl40l.jpg)\n\n\n## 试试成果\n![以管理员权限打开powershell](http://wx3.sinaimg.cn/mw690/6dd11bf2gy1fucxr9jameg20v70l648v.gif)\n","slug":"安装最新版powershell，把PWSH-Admin添加进shift右键文件夹的菜单里","published":1,"updated":"2019-03-07T15:19:05.269Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jna6000mn0v930mfbwdi","content":"<h2 id=\"安装最新版powershell\"><a href=\"#安装最新版powershell\" class=\"headerlink\" title=\"安装最新版powershell\"></a>安装最新版powershell</h2><p>微软把powershell开源了很久了，最新版要在github上面下载<br><a href=\"https://github.com/PowerShell/PowerShell/releases\" target=\"_blank\" rel=\"noopener\">https://github.com/PowerShell/PowerShell/releases</a></p>\n<h2 id=\"把以admin启动最新版powershell添加进注册表\"><a href=\"#把以admin启动最新版powershell添加进注册表\" class=\"headerlink\" title=\"把以admin启动最新版powershell添加进注册表\"></a>把以admin启动最新版powershell添加进注册表</h2><ol>\n<li>win+R 输入regedit打开注册表。</li>\n<li>来到路径 HKEY_CLASSES_ROOT\\Directory\\Background\\shell 里面。</li>\n<li>右键shell新建项，取名叫“PWSHAsAdmin”，名字随便取的。</li>\n<li>给右侧的的（默认）赋值为“PWSH Admin”。</li>\n<li>在右侧新建字符串Extended，类型为REG_SZ。</li>\n<li>在右侧新建字符串HasLUAShield，类型为REG_SZ。</li>\n<li>在右侧新建字符串Icon,类型为REG_SZ, 值为pwsh.exe。<br>如图所示：<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://wx4.sinaimg.cn/mw690/6dd11bf2gy1fucz2rs9r4j20m80blmy9.jpg\" alt=\"图片描述\" title=\"\">\n                </div>\n                <div class=\"image-caption\">图片描述</div>\n            </figure>\n</li>\n</ol>\n<ol>\n<li>右键点击“PWSHAsAdmin”,新建项“command”。</li>\n<li>在右侧把默认值改为pwsh -windowstyle hidden -Command “Start-Process cmd -ArgumentList ‘/s,/k,pushd,%V &amp;&amp; start pwsh &amp;&amp; exit’ -Verb RunAs”<br>如图所示：<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://wx1.sinaimg.cn/mw690/6dd11bf2gy1fucz2v2657j20m80bl40l.jpg\" alt=\"图片描述\" title=\"\">\n                </div>\n                <div class=\"image-caption\">图片描述</div>\n            </figure>\n</li>\n</ol>\n<h2 id=\"试试成果\"><a href=\"#试试成果\" class=\"headerlink\" title=\"试试成果\"></a>试试成果</h2><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://wx3.sinaimg.cn/mw690/6dd11bf2gy1fucxr9jameg20v70l648v.gif\" alt=\"以管理员权限打开powershell\" title=\"\">\n                </div>\n                <div class=\"image-caption\">以管理员权限打开powershell</div>\n            </figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装最新版powershell\"><a href=\"#安装最新版powershell\" class=\"headerlink\" title=\"安装最新版powershell\"></a>安装最新版powershell</h2><p>微软把powershell开源了很久了，最新版要在github上面下载<br><a href=\"https://github.com/PowerShell/PowerShell/releases\" target=\"_blank\" rel=\"noopener\">https://github.com/PowerShell/PowerShell/releases</a></p>\n<h2 id=\"把以admin启动最新版powershell添加进注册表\"><a href=\"#把以admin启动最新版powershell添加进注册表\" class=\"headerlink\" title=\"把以admin启动最新版powershell添加进注册表\"></a>把以admin启动最新版powershell添加进注册表</h2><ol>\n<li>win+R 输入regedit打开注册表。</li>\n<li>来到路径 HKEY_CLASSES_ROOT\\Directory\\Background\\shell 里面。</li>\n<li>右键shell新建项，取名叫“PWSHAsAdmin”，名字随便取的。</li>\n<li>给右侧的的（默认）赋值为“PWSH Admin”。</li>\n<li>在右侧新建字符串Extended，类型为REG_SZ。</li>\n<li>在右侧新建字符串HasLUAShield，类型为REG_SZ。</li>\n<li>在右侧新建字符串Icon,类型为REG_SZ, 值为pwsh.exe。<br>如图所示：<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://wx4.sinaimg.cn/mw690/6dd11bf2gy1fucz2rs9r4j20m80blmy9.jpg\" alt=\"图片描述\" title=\"\">\n                </div>\n                <div class=\"image-caption\">图片描述</div>\n            </figure>\n</li>\n</ol>\n<ol>\n<li>右键点击“PWSHAsAdmin”,新建项“command”。</li>\n<li>在右侧把默认值改为pwsh -windowstyle hidden -Command “Start-Process cmd -ArgumentList ‘/s,/k,pushd,%V &amp;&amp; start pwsh &amp;&amp; exit’ -Verb RunAs”<br>如图所示：<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://wx1.sinaimg.cn/mw690/6dd11bf2gy1fucz2v2657j20m80bl40l.jpg\" alt=\"图片描述\" title=\"\">\n                </div>\n                <div class=\"image-caption\">图片描述</div>\n            </figure>\n</li>\n</ol>\n<h2 id=\"试试成果\"><a href=\"#试试成果\" class=\"headerlink\" title=\"试试成果\"></a>试试成果</h2><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://wx3.sinaimg.cn/mw690/6dd11bf2gy1fucxr9jameg20v70l648v.gif\" alt=\"以管理员权限打开powershell\" title=\"\">\n                </div>\n                <div class=\"image-caption\">以管理员权限打开powershell</div>\n            </figure>\n"},{"title":"深夜排查小飞机故障","date":"2019-03-08T14:29:53.000Z","_content":"\n## 起因\n\n大概晚上8点左右，突然不能访问谷歌了，这已经是今年差不多第五次出现问题了。\n\n## 排查故障\n\n之前基本是端口被封，或者是IP被封，换个端口或者是IP就好了。\n\n先是打开powershell准备SSH登录到搬瓦工服务器，然鹅访问超时。然后只好打开搬瓦工官网，官网bwh8.net也打不开了，大概率被和谐了，尝试打开bwh9.net这个网址，然后看到\n\n![官网](http://wx2.sinaimg.cn/large/6dd11bf2gy1g0vrn0sakcj20kz0fj41g.jpg)\n\n登录新的官网，在base shell里面重启了小飞机服务，换了几个端口号，然鹅还是不能用小飞机。用官网测试IP是否被封的工具测试，也看到没有被封。看到官网有个QQ群，不得不加群求助了，然鹅在群里几位热心群友的指点下，用nc命令测试得出结论TCP没有被封，本地电脑ping搬瓦工服务器ping不通，但是用腾讯云服务器ping搬瓦工服务器能ping通，大概猜测到是因为自身网络原因。\n\n果然第二天早上小飞机就能正常使用了，我也是给这广电网络跪了。","source":"_posts/深夜排查小飞机故障.md","raw":"---\ntitle: 深夜排查小飞机故障\ndate: 2019-03-08 22:29:53\ntags: [小飞机, 搬瓦工, VPN]\n---\n\n## 起因\n\n大概晚上8点左右，突然不能访问谷歌了，这已经是今年差不多第五次出现问题了。\n\n## 排查故障\n\n之前基本是端口被封，或者是IP被封，换个端口或者是IP就好了。\n\n先是打开powershell准备SSH登录到搬瓦工服务器，然鹅访问超时。然后只好打开搬瓦工官网，官网bwh8.net也打不开了，大概率被和谐了，尝试打开bwh9.net这个网址，然后看到\n\n![官网](http://wx2.sinaimg.cn/large/6dd11bf2gy1g0vrn0sakcj20kz0fj41g.jpg)\n\n登录新的官网，在base shell里面重启了小飞机服务，换了几个端口号，然鹅还是不能用小飞机。用官网测试IP是否被封的工具测试，也看到没有被封。看到官网有个QQ群，不得不加群求助了，然鹅在群里几位热心群友的指点下，用nc命令测试得出结论TCP没有被封，本地电脑ping搬瓦工服务器ping不通，但是用腾讯云服务器ping搬瓦工服务器能ping通，大概猜测到是因为自身网络原因。\n\n果然第二天早上小飞机就能正常使用了，我也是给这广电网络跪了。","slug":"深夜排查小飞机故障","published":1,"updated":"2019-03-08T14:49:48.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jna7000nn0v9ybdd8i0j","content":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>大概晚上8点左右，突然不能访问谷歌了，这已经是今年差不多第五次出现问题了。</p>\n<h2 id=\"排查故障\"><a href=\"#排查故障\" class=\"headerlink\" title=\"排查故障\"></a>排查故障</h2><p>之前基本是端口被封，或者是IP被封，换个端口或者是IP就好了。</p>\n<p>先是打开powershell准备SSH登录到搬瓦工服务器，然鹅访问超时。然后只好打开搬瓦工官网，官网bwh8.net也打不开了，大概率被和谐了，尝试打开bwh9.net这个网址，然后看到</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://wx2.sinaimg.cn/large/6dd11bf2gy1g0vrn0sakcj20kz0fj41g.jpg\" alt=\"官网\" title=\"\">\n                </div>\n                <div class=\"image-caption\">官网</div>\n            </figure>\n<p>登录新的官网，在base shell里面重启了小飞机服务，换了几个端口号，然鹅还是不能用小飞机。用官网测试IP是否被封的工具测试，也看到没有被封。看到官网有个QQ群，不得不加群求助了，然鹅在群里几位热心群友的指点下，用nc命令测试得出结论TCP没有被封，本地电脑ping搬瓦工服务器ping不通，但是用腾讯云服务器ping搬瓦工服务器能ping通，大概猜测到是因为自身网络原因。</p>\n<p>果然第二天早上小飞机就能正常使用了，我也是给这广电网络跪了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>大概晚上8点左右，突然不能访问谷歌了，这已经是今年差不多第五次出现问题了。</p>\n<h2 id=\"排查故障\"><a href=\"#排查故障\" class=\"headerlink\" title=\"排查故障\"></a>排查故障</h2><p>之前基本是端口被封，或者是IP被封，换个端口或者是IP就好了。</p>\n<p>先是打开powershell准备SSH登录到搬瓦工服务器，然鹅访问超时。然后只好打开搬瓦工官网，官网bwh8.net也打不开了，大概率被和谐了，尝试打开bwh9.net这个网址，然后看到</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://wx2.sinaimg.cn/large/6dd11bf2gy1g0vrn0sakcj20kz0fj41g.jpg\" alt=\"官网\" title=\"\">\n                </div>\n                <div class=\"image-caption\">官网</div>\n            </figure>\n<p>登录新的官网，在base shell里面重启了小飞机服务，换了几个端口号，然鹅还是不能用小飞机。用官网测试IP是否被封的工具测试，也看到没有被封。看到官网有个QQ群，不得不加群求助了，然鹅在群里几位热心群友的指点下，用nc命令测试得出结论TCP没有被封，本地电脑ping搬瓦工服务器ping不通，但是用腾讯云服务器ping搬瓦工服务器能ping通，大概猜测到是因为自身网络原因。</p>\n<p>果然第二天早上小飞机就能正常使用了，我也是给这广电网络跪了。</p>\n"},{"title":"eggjs+typescript+mysql","date":"2018-06-13T09:44:52.000Z","_content":"\n## 安装egg命令行工具\n```\nnpm i egg-init -g\n```\n## 使用命令行工具新建项目\n```\negg-init 项目名称\n选择项目的类型为typescript\n```\n## 安装mysql的插件\n```\nyarn add egg-mysql\n```\n## 插件的配置\n```\n// config/plugin.ts\nconst plugin: EggPlugin = {\n    static: true,\n    nunjucks: {\n        enable: true,\n        package: 'egg-view-nunjucks'\n    },\n    mysql: {\n        enable: true,\n        package: 'egg-mysql'\n    }\n}\n\n// config/config.local.ts\nexport default () => {\n    const config: DefaultConfig = {\n        mysql: {\n            // 单数据库信息配置\n            client: {\n                // host\n                host: '127.0.0.1',\n                // 端口号\n                port: '3306',\n                // 用户名\n                user: 'creanme',\n                // 密码\n                password: 'pwd123',\n                // 数据库名\n                database: 'test'\n            },\n            // 是否加载到 app 上，默认开启\n            app: true,\n            // 是否加载到 agent 上，默认关闭\n            agent: false\n        }\n    }\n    return config\n}\n```\n## 未完待续\n\n\n","source":"_posts/尝试使用eggjs-typescript-mysql.md","raw":"---\ntitle: eggjs+typescript+mysql\ndate: 2018-06-13 17:44:52\ntags: [eggjs, typescript, mysql, nodejs]\n---\n\n## 安装egg命令行工具\n```\nnpm i egg-init -g\n```\n## 使用命令行工具新建项目\n```\negg-init 项目名称\n选择项目的类型为typescript\n```\n## 安装mysql的插件\n```\nyarn add egg-mysql\n```\n## 插件的配置\n```\n// config/plugin.ts\nconst plugin: EggPlugin = {\n    static: true,\n    nunjucks: {\n        enable: true,\n        package: 'egg-view-nunjucks'\n    },\n    mysql: {\n        enable: true,\n        package: 'egg-mysql'\n    }\n}\n\n// config/config.local.ts\nexport default () => {\n    const config: DefaultConfig = {\n        mysql: {\n            // 单数据库信息配置\n            client: {\n                // host\n                host: '127.0.0.1',\n                // 端口号\n                port: '3306',\n                // 用户名\n                user: 'creanme',\n                // 密码\n                password: 'pwd123',\n                // 数据库名\n                database: 'test'\n            },\n            // 是否加载到 app 上，默认开启\n            app: true,\n            // 是否加载到 agent 上，默认关闭\n            agent: false\n        }\n    }\n    return config\n}\n```\n## 未完待续\n\n\n","slug":"尝试使用eggjs-typescript-mysql","published":1,"updated":"2019-03-07T15:19:05.270Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jna8000pn0v9nq1cfmk5","content":"<h2 id=\"安装egg命令行工具\"><a href=\"#安装egg命令行工具\" class=\"headerlink\" title=\"安装egg命令行工具\"></a>安装egg命令行工具</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i egg-init -g</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用命令行工具新建项目\"><a href=\"#使用命令行工具新建项目\" class=\"headerlink\" title=\"使用命令行工具新建项目\"></a>使用命令行工具新建项目</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">egg-init 项目名称</span><br><span class=\"line\">选择项目的类型为typescript</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装mysql的插件\"><a href=\"#安装mysql的插件\" class=\"headerlink\" title=\"安装mysql的插件\"></a>安装mysql的插件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add egg-mysql</span><br></pre></td></tr></table></figure>\n<h2 id=\"插件的配置\"><a href=\"#插件的配置\" class=\"headerlink\" title=\"插件的配置\"></a>插件的配置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// config/plugin.ts</span><br><span class=\"line\">const plugin: EggPlugin = &#123;</span><br><span class=\"line\">    static: true,</span><br><span class=\"line\">    nunjucks: &#123;</span><br><span class=\"line\">        enable: true,</span><br><span class=\"line\">        package: &apos;egg-view-nunjucks&apos;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mysql: &#123;</span><br><span class=\"line\">        enable: true,</span><br><span class=\"line\">        package: &apos;egg-mysql&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// config/config.local.ts</span><br><span class=\"line\">export default () =&gt; &#123;</span><br><span class=\"line\">    const config: DefaultConfig = &#123;</span><br><span class=\"line\">        mysql: &#123;</span><br><span class=\"line\">            // 单数据库信息配置</span><br><span class=\"line\">            client: &#123;</span><br><span class=\"line\">                // host</span><br><span class=\"line\">                host: &apos;127.0.0.1&apos;,</span><br><span class=\"line\">                // 端口号</span><br><span class=\"line\">                port: &apos;3306&apos;,</span><br><span class=\"line\">                // 用户名</span><br><span class=\"line\">                user: &apos;creanme&apos;,</span><br><span class=\"line\">                // 密码</span><br><span class=\"line\">                password: &apos;pwd123&apos;,</span><br><span class=\"line\">                // 数据库名</span><br><span class=\"line\">                database: &apos;test&apos;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            // 是否加载到 app 上，默认开启</span><br><span class=\"line\">            app: true,</span><br><span class=\"line\">            // 是否加载到 agent 上，默认关闭</span><br><span class=\"line\">            agent: false</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return config</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"未完待续\"><a href=\"#未完待续\" class=\"headerlink\" title=\"未完待续\"></a>未完待续</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装egg命令行工具\"><a href=\"#安装egg命令行工具\" class=\"headerlink\" title=\"安装egg命令行工具\"></a>安装egg命令行工具</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i egg-init -g</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用命令行工具新建项目\"><a href=\"#使用命令行工具新建项目\" class=\"headerlink\" title=\"使用命令行工具新建项目\"></a>使用命令行工具新建项目</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">egg-init 项目名称</span><br><span class=\"line\">选择项目的类型为typescript</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装mysql的插件\"><a href=\"#安装mysql的插件\" class=\"headerlink\" title=\"安装mysql的插件\"></a>安装mysql的插件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add egg-mysql</span><br></pre></td></tr></table></figure>\n<h2 id=\"插件的配置\"><a href=\"#插件的配置\" class=\"headerlink\" title=\"插件的配置\"></a>插件的配置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// config/plugin.ts</span><br><span class=\"line\">const plugin: EggPlugin = &#123;</span><br><span class=\"line\">    static: true,</span><br><span class=\"line\">    nunjucks: &#123;</span><br><span class=\"line\">        enable: true,</span><br><span class=\"line\">        package: &apos;egg-view-nunjucks&apos;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mysql: &#123;</span><br><span class=\"line\">        enable: true,</span><br><span class=\"line\">        package: &apos;egg-mysql&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// config/config.local.ts</span><br><span class=\"line\">export default () =&gt; &#123;</span><br><span class=\"line\">    const config: DefaultConfig = &#123;</span><br><span class=\"line\">        mysql: &#123;</span><br><span class=\"line\">            // 单数据库信息配置</span><br><span class=\"line\">            client: &#123;</span><br><span class=\"line\">                // host</span><br><span class=\"line\">                host: &apos;127.0.0.1&apos;,</span><br><span class=\"line\">                // 端口号</span><br><span class=\"line\">                port: &apos;3306&apos;,</span><br><span class=\"line\">                // 用户名</span><br><span class=\"line\">                user: &apos;creanme&apos;,</span><br><span class=\"line\">                // 密码</span><br><span class=\"line\">                password: &apos;pwd123&apos;,</span><br><span class=\"line\">                // 数据库名</span><br><span class=\"line\">                database: &apos;test&apos;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            // 是否加载到 app 上，默认开启</span><br><span class=\"line\">            app: true,</span><br><span class=\"line\">            // 是否加载到 agent 上，默认关闭</span><br><span class=\"line\">            agent: false</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return config</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"未完待续\"><a href=\"#未完待续\" class=\"headerlink\" title=\"未完待续\"></a>未完待续</h2>"},{"title":"组件之间的传值","date":"2019-03-16T12:59:52.000Z","_content":"## 父向子，通过props\n\n```javascript \n<template>\n    <div>\n        <h2>父组件</h2>\n        <br>\n        <Child-one :parentMessage=\"parentMessage\"></Child-one>\n    </div>\n</template>\n<script>\nimport ChildOne from '../components/Son'\n \nexport default {\n    components: {\n        ChildOne\n    },\n    data() {\n        return {\n            parentMessage: '我是来自父组件的消息'\n        }\n    }\n}\n</script>\n \n<template>\n    <div>\n        <h3>我是子组件一</h3>\n        <span>{{parentMessage}}</span>\n    </div>\n</template>\n<script>\nexport default {\n    props: ['parentMessage']\n}\n</script>\n```\n\n## 子向父通过emitEvent事件\n\n```javascript\n \n<template>\n    <div>\n        <h2>父组件</h2>\n        <br>\n        <Child-one @childEvent=\"parentMethod\"></Child-one>\n    </div>\n</template>\n<script>\nimport ChildOne from '../components/Son'\n \nexport default {\n    components: {\n        ChildOne\n    },\n    data() {\n        return {\n            parentMessage: '我是来自父组件的消息'\n        }\n    },\n    methods: {\n        parentMethod() {\n            alert(this.parentMessage)\n        }\n    }\n}\n</script>\n \n<!--子组件-->\n<template>\n    <div>\n        <h3 v-on=\"$emit('childEvent')\">我是子组件一</h3>\n    </div>\n</template>\n<script>\nexport default {\n}\n</script>\n```\n\n","source":"_posts/组件之间的传值.md","raw":"---\ntitle: 组件之间的传值\ndate: 2019-03-16 20:59:52\ntags: [javascript, vue]\n---\n## 父向子，通过props\n\n```javascript \n<template>\n    <div>\n        <h2>父组件</h2>\n        <br>\n        <Child-one :parentMessage=\"parentMessage\"></Child-one>\n    </div>\n</template>\n<script>\nimport ChildOne from '../components/Son'\n \nexport default {\n    components: {\n        ChildOne\n    },\n    data() {\n        return {\n            parentMessage: '我是来自父组件的消息'\n        }\n    }\n}\n</script>\n \n<template>\n    <div>\n        <h3>我是子组件一</h3>\n        <span>{{parentMessage}}</span>\n    </div>\n</template>\n<script>\nexport default {\n    props: ['parentMessage']\n}\n</script>\n```\n\n## 子向父通过emitEvent事件\n\n```javascript\n \n<template>\n    <div>\n        <h2>父组件</h2>\n        <br>\n        <Child-one @childEvent=\"parentMethod\"></Child-one>\n    </div>\n</template>\n<script>\nimport ChildOne from '../components/Son'\n \nexport default {\n    components: {\n        ChildOne\n    },\n    data() {\n        return {\n            parentMessage: '我是来自父组件的消息'\n        }\n    },\n    methods: {\n        parentMethod() {\n            alert(this.parentMessage)\n        }\n    }\n}\n</script>\n \n<!--子组件-->\n<template>\n    <div>\n        <h3 v-on=\"$emit('childEvent')\">我是子组件一</h3>\n    </div>\n</template>\n<script>\nexport default {\n}\n</script>\n```\n\n","slug":"组件之间的传值","published":1,"updated":"2019-03-16T13:04:56.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jnaa000qn0v9iz14b914","content":"<h2 id=\"父向子，通过props\"><a href=\"#父向子，通过props\" class=\"headerlink\" title=\"父向子，通过props\"></a>父向子，通过props</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h2&gt;父组件&lt;<span class=\"regexp\">/h2&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;br&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Child-one :parentMessage=\"parentMessage\"&gt;&lt;/</span>Child-one&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ChildOne <span class=\"keyword\">from</span> <span class=\"string\">'../components/Son'</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    components: &#123;</span><br><span class=\"line\">        ChildOne</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            parentMessage: <span class=\"string\">'我是来自父组件的消息'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"> </span></span><br><span class=\"line\"><span class=\"regexp\">&lt;template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;h3&gt;我是子组件一&lt;/</span>h3&gt;</span><br><span class=\"line\">        &lt;span&gt;&#123;&#123;parentMessage&#125;&#125;&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">export default &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    props: ['parentMessage']</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"子向父通过emitEvent事件\"><a href=\"#子向父通过emitEvent事件\" class=\"headerlink\" title=\"子向父通过emitEvent事件\"></a>子向父通过emitEvent事件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h2&gt;父组件&lt;<span class=\"regexp\">/h2&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;br&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Child-one @childEvent=\"parentMethod\"&gt;&lt;/</span>Child-one&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ChildOne <span class=\"keyword\">from</span> <span class=\"string\">'../components/Son'</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    components: &#123;</span><br><span class=\"line\">        ChildOne</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            parentMessage: <span class=\"string\">'我是来自父组件的消息'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">        parentMethod() &#123;</span><br><span class=\"line\">            alert(<span class=\"keyword\">this</span>.parentMessage)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"> </span></span><br><span class=\"line\"><span class=\"regexp\">&lt;!--子组件--&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;h3 v-on=\"$emit('childEvent')\"&gt;我是子组件一&lt;/</span>h3&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"父向子，通过props\"><a href=\"#父向子，通过props\" class=\"headerlink\" title=\"父向子，通过props\"></a>父向子，通过props</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h2&gt;父组件&lt;<span class=\"regexp\">/h2&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;br&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Child-one :parentMessage=\"parentMessage\"&gt;&lt;/</span>Child-one&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ChildOne <span class=\"keyword\">from</span> <span class=\"string\">'../components/Son'</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    components: &#123;</span><br><span class=\"line\">        ChildOne</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            parentMessage: <span class=\"string\">'我是来自父组件的消息'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"> </span></span><br><span class=\"line\"><span class=\"regexp\">&lt;template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;h3&gt;我是子组件一&lt;/</span>h3&gt;</span><br><span class=\"line\">        &lt;span&gt;&#123;&#123;parentMessage&#125;&#125;&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">export default &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    props: ['parentMessage']</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"子向父通过emitEvent事件\"><a href=\"#子向父通过emitEvent事件\" class=\"headerlink\" title=\"子向父通过emitEvent事件\"></a>子向父通过emitEvent事件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h2&gt;父组件&lt;<span class=\"regexp\">/h2&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;br&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Child-one @childEvent=\"parentMethod\"&gt;&lt;/</span>Child-one&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ChildOne <span class=\"keyword\">from</span> <span class=\"string\">'../components/Son'</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    components: &#123;</span><br><span class=\"line\">        ChildOne</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            parentMessage: <span class=\"string\">'我是来自父组件的消息'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">        parentMethod() &#123;</span><br><span class=\"line\">            alert(<span class=\"keyword\">this</span>.parentMessage)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"> </span></span><br><span class=\"line\"><span class=\"regexp\">&lt;!--子组件--&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;h3 v-on=\"$emit('childEvent')\"&gt;我是子组件一&lt;/</span>h3&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"2019计划","date":"2019-01-01T15:19:02.000Z","_content":"\n在这立一个flag，希望今年能把这些坚持下去\n\n- 把vuepress的那个主题做完\n- 坚持算法练习，与开源社区共享\n- 坚持写博客\n- 健身减肥\n- 背单词\n- 坚持练字\n","source":"_posts/2019计划.md","raw":"---\ntitle: 2019计划\ndate: 2019-01-01 23:19:02\ntags: [年初计划]\n---\n\n在这立一个flag，希望今年能把这些坚持下去\n\n- 把vuepress的那个主题做完\n- 坚持算法练习，与开源社区共享\n- 坚持写博客\n- 健身减肥\n- 背单词\n- 坚持练字\n","slug":"2019计划","published":1,"updated":"2019-03-07T15:19:05.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjth1jnb9002ln0v9b1smojh2","content":"<p>在这立一个flag，希望今年能把这些坚持下去</p>\n<ul>\n<li>把vuepress的那个主题做完</li>\n<li>坚持算法练习，与开源社区共享</li>\n<li>坚持写博客</li>\n<li>健身减肥</li>\n<li>背单词</li>\n<li>坚持练字</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>在这立一个flag，希望今年能把这些坚持下去</p>\n<ul>\n<li>把vuepress的那个主题做完</li>\n<li>坚持算法练习，与开源社区共享</li>\n<li>坚持写博客</li>\n<li>健身减肥</li>\n<li>背单词</li>\n<li>坚持练字</li>\n</ul>\n"},{"title":"遇到的部分面试问题","date":"2019-03-09T15:28:22.000Z","_content":"- 说说es6新增内容  \n- 扩展运算符扩展数组与对象  \n- 箭头函数与bind有何不同\n- node跨域的方法  \n- 自适应不同分辨率  \n- 前端优化  \n  - link与import不同 \n    - link属于XHTML标签，而@import是css提供的一种方式。\n    - link标签除了可以加载css外，还可以做很多其他的事情，比如定义RSS，定义rel连接属性等，而\t\t     @import只能加载css。\n    - 加载顺序也不同。当一个页面被加载的时候，link引用的css会同时被加载，而@import引用的css\t\t会等到页面全部被下载完再加载。\n    - 兼容性的差别。@import ie5以上才能被支持。\n    - 使用dom控制样式时的差别。link标签可用dom控制，@import不可。\n    - @import可以在css中再次引入其他样式表，这样做有个缺点，会对服务器产生过多http请求。\n- vue与react有何不同\n- react性能优于vue\n- vue用的模板，react用的jsx。\n- react是在js里面写css\n- 闭包，可能产生的问题以及解决方案\n- vue组件通信\n- 不同大小设备适配\n- 基础类型与引用类型有哪些\n- cookie与localstorage有什么区别\n- 上下左右居中\n- h5 'cover'了解多少\n- transform与transition有什么区别\n- 用transform写旋转怎么写\n- 上传文件如何不刷新页面，ajax能上传文件吗？\n- 如何做多人聊天，不使用websocket如何做实现长连接，使用定时器做长连接有什么问题（不考虑服务器资源方面）。\n- h5中有什么能用于上传的新东西\n  - XMLHttpRequest对象的第二版，从此ajax能够上传文件了，主要用的是FormData对象\n  - XMLHttpRequest第二版还定义了一个progress事件，可以用来制作进度条。\n  - 如果上传的是图片文件，利用File API可以做一个图片预览，主要用到FileReader对象。\n- 有哪些新建对象的方式。\n- 父子组件通信，非父子组件通信。\n- Vue-router事件\n- http状态码\n- vuex的action和mutation有什么不同\n- Vue router登录验证\n- 异步组件\n- ios，android有哪些兼容q问题\n- 开发过哪些插件\n- overflow hidden 去塌陷原理\n  - 如果没有明确设定容器高情况下，它要计算内容全部高度才能确定在什么位置hidden，浮动的高度就要被计算进去，顺带达成了清理浮动的目标。独立的块级上下文可以包裹浮动流，全部浮动子元素也不会引起容器高度塌陷，也就是说包含块会把浮动元素的高度也计算在内，所以不用清除浮动来撑起高度。\n- 哪个期间能访问到vue实例里面的data\n  - 创建后与销毁前\n- computed与watch应用场景，与不同\n  - computed有缓存，依赖项的值没变化时，结果调用不会变化\n  - computed是计算属性，用起来就像data一样，watch是监听机制+事件机制，监听项发生变化的时候，然后执行对应事件的方法。\n  - watch擅长处理的场景：一个数据影响多个数据；computed擅长处理的场景：一个数据受多个数据影响。\n- get请求如何将#3发送到后台\n  - url转码，#转为%23\n- jquery on,bind，delegate，live不同\n  - Live与delegate非常相似，实际上live内部使用的delegate来实现的，它们都监听事件的冒泡。delegate性能更高。\n  - 新版本bind，delegate，live底层都是用on实现的。\n- get post不同\n- get产生一个TCP数据包，post产生两个TCP数据包\n  - get会把header和data一并发送出去，服务器响应200；而post浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200。\n  - get参数受限于url长度，具体数值取决于浏览器和服务器的限制，而post无限制。\n- 浏览器内核\n  - Trident --IE\n  - Gecko -- Firefox\n  - Webkit -- Safari\n  - Chromium -- Chrome\n  - Presto -- Opera\n- json在堆栈里面的存储\n  - 基本类型存在栈上面的\n  - 引用类型存的值存在堆上面的，栈上面有引用地址\n- Jquery的eq()\n- Vue生命周期created和mounted的区别\n- 闭包\n- 数组，里面是对象，存的类似name,id等字段，如果根据价格排序。\n  ​     ​\t\tdt- sort((a, b) => {\n  ​     ​\t\t    return - price > - price ? 1 : -1\n  ​     ​\t\t})\n- es6的新增的数组的方法。\n  - Array的内置方法\n    - From\n    - Of\n  - 实例的内置方法\n    - copyWithin\n    - find和findIndex\n    - Fill\n    - Entries,keys,values\n    - Includes\n    - Flat,flatMap\n- 数组的sum()方法（数组没有sum方法，所以这问题是错误的）\n- axios与ajax的区别（估计问的是jquery的ajax和axios的区别）\n  - 从 nod- js 创建 http 请求\n  - 支持 Promise API\n  - 客户端支持防止CSRF\n  - 提供了一些并发请求的接口\n- tcp的实现\n  - 首先，采用三次握手来建立TCP连接，四次握手来释放TCP连接，从而保证建立的传输信道是可靠的。\n  - 其次，TCP采用了连续ARQ协议（回退N，Go-back-N；超时自动重传）来保证数据传输的正确性，使用滑动窗口协议来保证接方能够及时处理所接收到的数据，进行流量控制。\n  - 最后，TCP使用慢开始、拥塞避免、快重传和快恢复来进行拥塞控制，避免网络拥塞。\n- vue与jquery的有什么不同\n  - jQuery是使用选择器（$）选取DOM对象，对其进行赋值、取值、事件绑定等操作，其实和原生的HTML的区别只在于可以更方便的选取和操作DOM对象，而数据和界面是在一起的。比如需要获取label标签的内容：$(\"lable\").val();,它还是依赖DOM元素的值。 \n  - Vue则是通过Vue对象将数据和View完全分离开来了。对数据进行操作不再需要引用相应的DOM对象，可以说数据和View是分离的，他们通过Vue对象这个vm实现相互的绑定。这就是传说中的MVVM。\n  - vue适用的场景：复杂数据操作的后台页面，表单填写页面\n  - jquery适用的场景：比如说一些html5的动画页面，一些需要js来操作页面样式的页面\n- 面向对象与面向过程的区别\n  - 面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个依次调用就可以了。\n  - 面向对象是把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描叙某个事物在整个解决问题的步骤中的行为。\n- TCP与UDP的区别\n  - TCP(传输控制协议 Transmission Control Protocol)\n    - 提供IP环境下的数据可靠传输(一台计算机发出的字节流会无差错的发往网络上的其他计算机，而且计算机A接收数据包的时候，也会向计算机B回发数据包，这也会产生部分通信量)，有效流控，全双工操作(数据在两个方向上能同时传递)，多路复用服务，是面向连接，端到端的传输;\n    - 面向连接：正式通信前必须要与对方建立连接。事先为所发送的数据开辟出连接好的通道，然后再进行数据发送，像打电话。\n    - TCP支持的应用协议：Telnet(远程登录)、FTP(文件传输协议)、SMTP(简单邮件传输协议)。TCP用于传输数据量大，可靠性要求高的应用。\n    - UDP(用户数据报协议，User Data Protocol)\n      - 面向非连接的(正式通信前不必与对方建立连接，不管对方状态就直接发送，像短信，QQ)，不能提供可靠性、流控、差错恢复功能。UDP用于一次只传送少量数据，可靠性要求低、传输经济等应用。\n      - UDP支持的应用协议：NFS(网络文件系统)、SNMP(简单网络管理系统)、DNS(主域名称系统)、TFTP(通用文件传输协议)等。\n    - TCP：面向连接、传输可靠(保证数据正确性,保证数据顺序)、用于传输大量数据(流模式)、速度慢，建立连接需要开销较多(时间，系统资源)。\n    - UDP：面向非连接、传输不可靠、用于传输少量数据(数据包模式)、速度快。\n- 设计模式有哪些\n  - 工厂模式——工厂模式是为了解决多个类似对象声明的问题;也就是为了解决实列化对象产生重复的问题。\n    - 优点：能解决多个相似的问题。\n    - 缺点：不能知道对象识别的问题(对象的类型不知道)。\n  - 单体模式——单体模式是一个用来划分命名空间并将一批属性和方法组织在一起的对象，如果它可以被实例化，那么它只能被实例化一次。\n    - 可以用来划分命名空间，减少全局变量的数量。\n    - 使用单体模式可以使代码组织的更为一致，使代码容易阅读和维护。\n    - 可以被实例化，且实例化一次。\n  - 模块模式\n  - 代理模式\n  - 职责链模式\n  - 命令模式\n  - 模板方法模式\n  - 策略模式\n  - 发布订阅模式\n  - 中介者模式\n    ​      ​    ​       ​            ​\t\n- 工厂模式有哪些好处\n- 能解决多个相似的问题。\n- vue.use()原理   \n- require 与import区别\n- 防抖动\n-   prototype继承原理\n    -   实例.__proto===构造函数.prototype\n    -   查找实例的属性时，先判断自身有没有这个属性，如果有，那么直接获取；\n    -   否则，查找它的__proto__有没有这个属性，如果有，就是它；\n    -   否则，查找它的__proto__.__proto__有没有这个属性...\n    -   如果一直找不到，就是undefined。","source":"_posts/遇到的部分面试问题.md","raw":"---\ntitle: 遇到的部分面试问题\ndate: 2019-03-09 23:28:22\ntags: [面试, 前端, 面试题]\n---\n- 说说es6新增内容  \n- 扩展运算符扩展数组与对象  \n- 箭头函数与bind有何不同\n- node跨域的方法  \n- 自适应不同分辨率  \n- 前端优化  \n  - link与import不同 \n    - link属于XHTML标签，而@import是css提供的一种方式。\n    - link标签除了可以加载css外，还可以做很多其他的事情，比如定义RSS，定义rel连接属性等，而\t\t     @import只能加载css。\n    - 加载顺序也不同。当一个页面被加载的时候，link引用的css会同时被加载，而@import引用的css\t\t会等到页面全部被下载完再加载。\n    - 兼容性的差别。@import ie5以上才能被支持。\n    - 使用dom控制样式时的差别。link标签可用dom控制，@import不可。\n    - @import可以在css中再次引入其他样式表，这样做有个缺点，会对服务器产生过多http请求。\n- vue与react有何不同\n- react性能优于vue\n- vue用的模板，react用的jsx。\n- react是在js里面写css\n- 闭包，可能产生的问题以及解决方案\n- vue组件通信\n- 不同大小设备适配\n- 基础类型与引用类型有哪些\n- cookie与localstorage有什么区别\n- 上下左右居中\n- h5 'cover'了解多少\n- transform与transition有什么区别\n- 用transform写旋转怎么写\n- 上传文件如何不刷新页面，ajax能上传文件吗？\n- 如何做多人聊天，不使用websocket如何做实现长连接，使用定时器做长连接有什么问题（不考虑服务器资源方面）。\n- h5中有什么能用于上传的新东西\n  - XMLHttpRequest对象的第二版，从此ajax能够上传文件了，主要用的是FormData对象\n  - XMLHttpRequest第二版还定义了一个progress事件，可以用来制作进度条。\n  - 如果上传的是图片文件，利用File API可以做一个图片预览，主要用到FileReader对象。\n- 有哪些新建对象的方式。\n- 父子组件通信，非父子组件通信。\n- Vue-router事件\n- http状态码\n- vuex的action和mutation有什么不同\n- Vue router登录验证\n- 异步组件\n- ios，android有哪些兼容q问题\n- 开发过哪些插件\n- overflow hidden 去塌陷原理\n  - 如果没有明确设定容器高情况下，它要计算内容全部高度才能确定在什么位置hidden，浮动的高度就要被计算进去，顺带达成了清理浮动的目标。独立的块级上下文可以包裹浮动流，全部浮动子元素也不会引起容器高度塌陷，也就是说包含块会把浮动元素的高度也计算在内，所以不用清除浮动来撑起高度。\n- 哪个期间能访问到vue实例里面的data\n  - 创建后与销毁前\n- computed与watch应用场景，与不同\n  - computed有缓存，依赖项的值没变化时，结果调用不会变化\n  - computed是计算属性，用起来就像data一样，watch是监听机制+事件机制，监听项发生变化的时候，然后执行对应事件的方法。\n  - watch擅长处理的场景：一个数据影响多个数据；computed擅长处理的场景：一个数据受多个数据影响。\n- get请求如何将#3发送到后台\n  - url转码，#转为%23\n- jquery on,bind，delegate，live不同\n  - Live与delegate非常相似，实际上live内部使用的delegate来实现的，它们都监听事件的冒泡。delegate性能更高。\n  - 新版本bind，delegate，live底层都是用on实现的。\n- get post不同\n- get产生一个TCP数据包，post产生两个TCP数据包\n  - get会把header和data一并发送出去，服务器响应200；而post浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200。\n  - get参数受限于url长度，具体数值取决于浏览器和服务器的限制，而post无限制。\n- 浏览器内核\n  - Trident --IE\n  - Gecko -- Firefox\n  - Webkit -- Safari\n  - Chromium -- Chrome\n  - Presto -- Opera\n- json在堆栈里面的存储\n  - 基本类型存在栈上面的\n  - 引用类型存的值存在堆上面的，栈上面有引用地址\n- Jquery的eq()\n- Vue生命周期created和mounted的区别\n- 闭包\n- 数组，里面是对象，存的类似name,id等字段，如果根据价格排序。\n  ​     ​\t\tdt- sort((a, b) => {\n  ​     ​\t\t    return - price > - price ? 1 : -1\n  ​     ​\t\t})\n- es6的新增的数组的方法。\n  - Array的内置方法\n    - From\n    - Of\n  - 实例的内置方法\n    - copyWithin\n    - find和findIndex\n    - Fill\n    - Entries,keys,values\n    - Includes\n    - Flat,flatMap\n- 数组的sum()方法（数组没有sum方法，所以这问题是错误的）\n- axios与ajax的区别（估计问的是jquery的ajax和axios的区别）\n  - 从 nod- js 创建 http 请求\n  - 支持 Promise API\n  - 客户端支持防止CSRF\n  - 提供了一些并发请求的接口\n- tcp的实现\n  - 首先，采用三次握手来建立TCP连接，四次握手来释放TCP连接，从而保证建立的传输信道是可靠的。\n  - 其次，TCP采用了连续ARQ协议（回退N，Go-back-N；超时自动重传）来保证数据传输的正确性，使用滑动窗口协议来保证接方能够及时处理所接收到的数据，进行流量控制。\n  - 最后，TCP使用慢开始、拥塞避免、快重传和快恢复来进行拥塞控制，避免网络拥塞。\n- vue与jquery的有什么不同\n  - jQuery是使用选择器（$）选取DOM对象，对其进行赋值、取值、事件绑定等操作，其实和原生的HTML的区别只在于可以更方便的选取和操作DOM对象，而数据和界面是在一起的。比如需要获取label标签的内容：$(\"lable\").val();,它还是依赖DOM元素的值。 \n  - Vue则是通过Vue对象将数据和View完全分离开来了。对数据进行操作不再需要引用相应的DOM对象，可以说数据和View是分离的，他们通过Vue对象这个vm实现相互的绑定。这就是传说中的MVVM。\n  - vue适用的场景：复杂数据操作的后台页面，表单填写页面\n  - jquery适用的场景：比如说一些html5的动画页面，一些需要js来操作页面样式的页面\n- 面向对象与面向过程的区别\n  - 面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个依次调用就可以了。\n  - 面向对象是把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描叙某个事物在整个解决问题的步骤中的行为。\n- TCP与UDP的区别\n  - TCP(传输控制协议 Transmission Control Protocol)\n    - 提供IP环境下的数据可靠传输(一台计算机发出的字节流会无差错的发往网络上的其他计算机，而且计算机A接收数据包的时候，也会向计算机B回发数据包，这也会产生部分通信量)，有效流控，全双工操作(数据在两个方向上能同时传递)，多路复用服务，是面向连接，端到端的传输;\n    - 面向连接：正式通信前必须要与对方建立连接。事先为所发送的数据开辟出连接好的通道，然后再进行数据发送，像打电话。\n    - TCP支持的应用协议：Telnet(远程登录)、FTP(文件传输协议)、SMTP(简单邮件传输协议)。TCP用于传输数据量大，可靠性要求高的应用。\n    - UDP(用户数据报协议，User Data Protocol)\n      - 面向非连接的(正式通信前不必与对方建立连接，不管对方状态就直接发送，像短信，QQ)，不能提供可靠性、流控、差错恢复功能。UDP用于一次只传送少量数据，可靠性要求低、传输经济等应用。\n      - UDP支持的应用协议：NFS(网络文件系统)、SNMP(简单网络管理系统)、DNS(主域名称系统)、TFTP(通用文件传输协议)等。\n    - TCP：面向连接、传输可靠(保证数据正确性,保证数据顺序)、用于传输大量数据(流模式)、速度慢，建立连接需要开销较多(时间，系统资源)。\n    - UDP：面向非连接、传输不可靠、用于传输少量数据(数据包模式)、速度快。\n- 设计模式有哪些\n  - 工厂模式——工厂模式是为了解决多个类似对象声明的问题;也就是为了解决实列化对象产生重复的问题。\n    - 优点：能解决多个相似的问题。\n    - 缺点：不能知道对象识别的问题(对象的类型不知道)。\n  - 单体模式——单体模式是一个用来划分命名空间并将一批属性和方法组织在一起的对象，如果它可以被实例化，那么它只能被实例化一次。\n    - 可以用来划分命名空间，减少全局变量的数量。\n    - 使用单体模式可以使代码组织的更为一致，使代码容易阅读和维护。\n    - 可以被实例化，且实例化一次。\n  - 模块模式\n  - 代理模式\n  - 职责链模式\n  - 命令模式\n  - 模板方法模式\n  - 策略模式\n  - 发布订阅模式\n  - 中介者模式\n    ​      ​    ​       ​            ​\t\n- 工厂模式有哪些好处\n- 能解决多个相似的问题。\n- vue.use()原理   \n- require 与import区别\n- 防抖动\n-   prototype继承原理\n    -   实例.__proto===构造函数.prototype\n    -   查找实例的属性时，先判断自身有没有这个属性，如果有，那么直接获取；\n    -   否则，查找它的__proto__有没有这个属性，如果有，就是它；\n    -   否则，查找它的__proto__.__proto__有没有这个属性...\n    -   如果一直找不到，就是undefined。","slug":"遇到的部分面试问题","published":1,"updated":"2019-03-21T15:54:58.320Z","_id":"cjth1jnbb002mn0v9xgsy5pag","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li>说说es6新增内容  </li>\n<li>扩展运算符扩展数组与对象  </li>\n<li>箭头函数与bind有何不同</li>\n<li>node跨域的方法  </li>\n<li>自适应不同分辨率  </li>\n<li>前端优化  <ul>\n<li>link与import不同 <ul>\n<li>link属于XHTML标签，而@import是css提供的一种方式。</li>\n<li>link标签除了可以加载css外，还可以做很多其他的事情，比如定义RSS，定义rel连接属性等，而             @import只能加载css。</li>\n<li>加载顺序也不同。当一个页面被加载的时候，link引用的css会同时被加载，而@import引用的css        会等到页面全部被下载完再加载。</li>\n<li>兼容性的差别。@import ie5以上才能被支持。</li>\n<li>使用dom控制样式时的差别。link标签可用dom控制，@import不可。</li>\n<li>@import可以在css中再次引入其他样式表，这样做有个缺点，会对服务器产生过多http请求。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>vue与react有何不同</li>\n<li>react性能优于vue</li>\n<li>vue用的模板，react用的jsx。</li>\n<li>react是在js里面写css</li>\n<li>闭包，可能产生的问题以及解决方案</li>\n<li>vue组件通信</li>\n<li>不同大小设备适配</li>\n<li>基础类型与引用类型有哪些</li>\n<li>cookie与localstorage有什么区别</li>\n<li>上下左右居中</li>\n<li>h5 ‘cover’了解多少</li>\n<li>transform与transition有什么区别</li>\n<li>用transform写旋转怎么写</li>\n<li>上传文件如何不刷新页面，ajax能上传文件吗？</li>\n<li>如何做多人聊天，不使用websocket如何做实现长连接，使用定时器做长连接有什么问题（不考虑服务器资源方面）。</li>\n<li>h5中有什么能用于上传的新东西<ul>\n<li>XMLHttpRequest对象的第二版，从此ajax能够上传文件了，主要用的是FormData对象</li>\n<li>XMLHttpRequest第二版还定义了一个progress事件，可以用来制作进度条。</li>\n<li>如果上传的是图片文件，利用File API可以做一个图片预览，主要用到FileReader对象。</li>\n</ul>\n</li>\n<li>有哪些新建对象的方式。</li>\n<li>父子组件通信，非父子组件通信。</li>\n<li>Vue-router事件</li>\n<li>http状态码</li>\n<li>vuex的action和mutation有什么不同</li>\n<li>Vue router登录验证</li>\n<li>异步组件</li>\n<li>ios，android有哪些兼容q问题</li>\n<li>开发过哪些插件</li>\n<li>overflow hidden 去塌陷原理<ul>\n<li>如果没有明确设定容器高情况下，它要计算内容全部高度才能确定在什么位置hidden，浮动的高度就要被计算进去，顺带达成了清理浮动的目标。独立的块级上下文可以包裹浮动流，全部浮动子元素也不会引起容器高度塌陷，也就是说包含块会把浮动元素的高度也计算在内，所以不用清除浮动来撑起高度。</li>\n</ul>\n</li>\n<li>哪个期间能访问到vue实例里面的data<ul>\n<li>创建后与销毁前</li>\n</ul>\n</li>\n<li>computed与watch应用场景，与不同<ul>\n<li>computed有缓存，依赖项的值没变化时，结果调用不会变化</li>\n<li>computed是计算属性，用起来就像data一样，watch是监听机制+事件机制，监听项发生变化的时候，然后执行对应事件的方法。</li>\n<li>watch擅长处理的场景：一个数据影响多个数据；computed擅长处理的场景：一个数据受多个数据影响。</li>\n</ul>\n</li>\n<li>get请求如何将#3发送到后台<ul>\n<li>url转码，#转为%23</li>\n</ul>\n</li>\n<li>jquery on,bind，delegate，live不同<ul>\n<li>Live与delegate非常相似，实际上live内部使用的delegate来实现的，它们都监听事件的冒泡。delegate性能更高。</li>\n<li>新版本bind，delegate，live底层都是用on实现的。</li>\n</ul>\n</li>\n<li>get post不同</li>\n<li>get产生一个TCP数据包，post产生两个TCP数据包<ul>\n<li>get会把header和data一并发送出去，服务器响应200；而post浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200。</li>\n<li>get参数受限于url长度，具体数值取决于浏览器和服务器的限制，而post无限制。</li>\n</ul>\n</li>\n<li>浏览器内核<ul>\n<li>Trident –IE</li>\n<li>Gecko – Firefox</li>\n<li>Webkit – Safari</li>\n<li>Chromium – Chrome</li>\n<li>Presto – Opera</li>\n</ul>\n</li>\n<li>json在堆栈里面的存储<ul>\n<li>基本类型存在栈上面的</li>\n<li>引用类型存的值存在堆上面的，栈上面有引用地址</li>\n</ul>\n</li>\n<li>Jquery的eq()</li>\n<li>Vue生命周期created和mounted的区别</li>\n<li>闭包</li>\n<li>数组，里面是对象，存的类似name,id等字段，如果根据价格排序。<br>​     ​        dt- sort((a, b) =&gt; {<br>​     ​            return - price &gt; - price ? 1 : -1<br>​     ​        })</li>\n<li>es6的新增的数组的方法。<ul>\n<li>Array的内置方法<ul>\n<li>From</li>\n<li>Of</li>\n</ul>\n</li>\n<li>实例的内置方法<ul>\n<li>copyWithin</li>\n<li>find和findIndex</li>\n<li>Fill</li>\n<li>Entries,keys,values</li>\n<li>Includes</li>\n<li>Flat,flatMap</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数组的sum()方法（数组没有sum方法，所以这问题是错误的）</li>\n<li>axios与ajax的区别（估计问的是jquery的ajax和axios的区别）<ul>\n<li>从 nod- js 创建 http 请求</li>\n<li>支持 Promise API</li>\n<li>客户端支持防止CSRF</li>\n<li>提供了一些并发请求的接口</li>\n</ul>\n</li>\n<li>tcp的实现<ul>\n<li>首先，采用三次握手来建立TCP连接，四次握手来释放TCP连接，从而保证建立的传输信道是可靠的。</li>\n<li>其次，TCP采用了连续ARQ协议（回退N，Go-back-N；超时自动重传）来保证数据传输的正确性，使用滑动窗口协议来保证接方能够及时处理所接收到的数据，进行流量控制。</li>\n<li>最后，TCP使用慢开始、拥塞避免、快重传和快恢复来进行拥塞控制，避免网络拥塞。</li>\n</ul>\n</li>\n<li>vue与jquery的有什么不同<ul>\n<li>jQuery是使用选择器（$）选取DOM对象，对其进行赋值、取值、事件绑定等操作，其实和原生的HTML的区别只在于可以更方便的选取和操作DOM对象，而数据和界面是在一起的。比如需要获取label标签的内容：$(“lable”).val();,它还是依赖DOM元素的值。 </li>\n<li>Vue则是通过Vue对象将数据和View完全分离开来了。对数据进行操作不再需要引用相应的DOM对象，可以说数据和View是分离的，他们通过Vue对象这个vm实现相互的绑定。这就是传说中的MVVM。</li>\n<li>vue适用的场景：复杂数据操作的后台页面，表单填写页面</li>\n<li>jquery适用的场景：比如说一些html5的动画页面，一些需要js来操作页面样式的页面</li>\n</ul>\n</li>\n<li>面向对象与面向过程的区别<ul>\n<li>面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个依次调用就可以了。</li>\n<li>面向对象是把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描叙某个事物在整个解决问题的步骤中的行为。</li>\n</ul>\n</li>\n<li>TCP与UDP的区别<ul>\n<li>TCP(传输控制协议 Transmission Control Protocol)<ul>\n<li>提供IP环境下的数据可靠传输(一台计算机发出的字节流会无差错的发往网络上的其他计算机，而且计算机A接收数据包的时候，也会向计算机B回发数据包，这也会产生部分通信量)，有效流控，全双工操作(数据在两个方向上能同时传递)，多路复用服务，是面向连接，端到端的传输;</li>\n<li>面向连接：正式通信前必须要与对方建立连接。事先为所发送的数据开辟出连接好的通道，然后再进行数据发送，像打电话。</li>\n<li>TCP支持的应用协议：Telnet(远程登录)、FTP(文件传输协议)、SMTP(简单邮件传输协议)。TCP用于传输数据量大，可靠性要求高的应用。</li>\n<li>UDP(用户数据报协议，User Data Protocol)<ul>\n<li>面向非连接的(正式通信前不必与对方建立连接，不管对方状态就直接发送，像短信，QQ)，不能提供可靠性、流控、差错恢复功能。UDP用于一次只传送少量数据，可靠性要求低、传输经济等应用。</li>\n<li>UDP支持的应用协议：NFS(网络文件系统)、SNMP(简单网络管理系统)、DNS(主域名称系统)、TFTP(通用文件传输协议)等。</li>\n</ul>\n</li>\n<li>TCP：面向连接、传输可靠(保证数据正确性,保证数据顺序)、用于传输大量数据(流模式)、速度慢，建立连接需要开销较多(时间，系统资源)。</li>\n<li>UDP：面向非连接、传输不可靠、用于传输少量数据(数据包模式)、速度快。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>设计模式有哪些<ul>\n<li>工厂模式——工厂模式是为了解决多个类似对象声明的问题;也就是为了解决实列化对象产生重复的问题。<ul>\n<li>优点：能解决多个相似的问题。</li>\n<li>缺点：不能知道对象识别的问题(对象的类型不知道)。</li>\n</ul>\n</li>\n<li>单体模式——单体模式是一个用来划分命名空间并将一批属性和方法组织在一起的对象，如果它可以被实例化，那么它只能被实例化一次。<ul>\n<li>可以用来划分命名空间，减少全局变量的数量。</li>\n<li>使用单体模式可以使代码组织的更为一致，使代码容易阅读和维护。</li>\n<li>可以被实例化，且实例化一次。</li>\n</ul>\n</li>\n<li>模块模式</li>\n<li>代理模式</li>\n<li>职责链模式</li>\n<li>命令模式</li>\n<li>模板方法模式</li>\n<li>策略模式</li>\n<li>发布订阅模式</li>\n<li>中介者模式<br>​      ​    ​       ​            ​    </li>\n</ul>\n</li>\n<li>工厂模式有哪些好处</li>\n<li>能解决多个相似的问题。</li>\n<li>vue.use()原理   </li>\n<li>require 与import区别</li>\n<li>防抖动</li>\n<li>prototype继承原理<ul>\n<li>实例.__proto===构造函数.prototype</li>\n<li>查找实例的属性时，先判断自身有没有这个属性，如果有，那么直接获取；</li>\n<li>否则，查找它的<strong>proto</strong>有没有这个属性，如果有，就是它；</li>\n<li>否则，查找它的<strong>proto</strong>.<strong>proto</strong>有没有这个属性…</li>\n<li>如果一直找不到，就是undefined。</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>说说es6新增内容  </li>\n<li>扩展运算符扩展数组与对象  </li>\n<li>箭头函数与bind有何不同</li>\n<li>node跨域的方法  </li>\n<li>自适应不同分辨率  </li>\n<li>前端优化  <ul>\n<li>link与import不同 <ul>\n<li>link属于XHTML标签，而@import是css提供的一种方式。</li>\n<li>link标签除了可以加载css外，还可以做很多其他的事情，比如定义RSS，定义rel连接属性等，而             @import只能加载css。</li>\n<li>加载顺序也不同。当一个页面被加载的时候，link引用的css会同时被加载，而@import引用的css        会等到页面全部被下载完再加载。</li>\n<li>兼容性的差别。@import ie5以上才能被支持。</li>\n<li>使用dom控制样式时的差别。link标签可用dom控制，@import不可。</li>\n<li>@import可以在css中再次引入其他样式表，这样做有个缺点，会对服务器产生过多http请求。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>vue与react有何不同</li>\n<li>react性能优于vue</li>\n<li>vue用的模板，react用的jsx。</li>\n<li>react是在js里面写css</li>\n<li>闭包，可能产生的问题以及解决方案</li>\n<li>vue组件通信</li>\n<li>不同大小设备适配</li>\n<li>基础类型与引用类型有哪些</li>\n<li>cookie与localstorage有什么区别</li>\n<li>上下左右居中</li>\n<li>h5 ‘cover’了解多少</li>\n<li>transform与transition有什么区别</li>\n<li>用transform写旋转怎么写</li>\n<li>上传文件如何不刷新页面，ajax能上传文件吗？</li>\n<li>如何做多人聊天，不使用websocket如何做实现长连接，使用定时器做长连接有什么问题（不考虑服务器资源方面）。</li>\n<li>h5中有什么能用于上传的新东西<ul>\n<li>XMLHttpRequest对象的第二版，从此ajax能够上传文件了，主要用的是FormData对象</li>\n<li>XMLHttpRequest第二版还定义了一个progress事件，可以用来制作进度条。</li>\n<li>如果上传的是图片文件，利用File API可以做一个图片预览，主要用到FileReader对象。</li>\n</ul>\n</li>\n<li>有哪些新建对象的方式。</li>\n<li>父子组件通信，非父子组件通信。</li>\n<li>Vue-router事件</li>\n<li>http状态码</li>\n<li>vuex的action和mutation有什么不同</li>\n<li>Vue router登录验证</li>\n<li>异步组件</li>\n<li>ios，android有哪些兼容q问题</li>\n<li>开发过哪些插件</li>\n<li>overflow hidden 去塌陷原理<ul>\n<li>如果没有明确设定容器高情况下，它要计算内容全部高度才能确定在什么位置hidden，浮动的高度就要被计算进去，顺带达成了清理浮动的目标。独立的块级上下文可以包裹浮动流，全部浮动子元素也不会引起容器高度塌陷，也就是说包含块会把浮动元素的高度也计算在内，所以不用清除浮动来撑起高度。</li>\n</ul>\n</li>\n<li>哪个期间能访问到vue实例里面的data<ul>\n<li>创建后与销毁前</li>\n</ul>\n</li>\n<li>computed与watch应用场景，与不同<ul>\n<li>computed有缓存，依赖项的值没变化时，结果调用不会变化</li>\n<li>computed是计算属性，用起来就像data一样，watch是监听机制+事件机制，监听项发生变化的时候，然后执行对应事件的方法。</li>\n<li>watch擅长处理的场景：一个数据影响多个数据；computed擅长处理的场景：一个数据受多个数据影响。</li>\n</ul>\n</li>\n<li>get请求如何将#3发送到后台<ul>\n<li>url转码，#转为%23</li>\n</ul>\n</li>\n<li>jquery on,bind，delegate，live不同<ul>\n<li>Live与delegate非常相似，实际上live内部使用的delegate来实现的，它们都监听事件的冒泡。delegate性能更高。</li>\n<li>新版本bind，delegate，live底层都是用on实现的。</li>\n</ul>\n</li>\n<li>get post不同</li>\n<li>get产生一个TCP数据包，post产生两个TCP数据包<ul>\n<li>get会把header和data一并发送出去，服务器响应200；而post浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200。</li>\n<li>get参数受限于url长度，具体数值取决于浏览器和服务器的限制，而post无限制。</li>\n</ul>\n</li>\n<li>浏览器内核<ul>\n<li>Trident –IE</li>\n<li>Gecko – Firefox</li>\n<li>Webkit – Safari</li>\n<li>Chromium – Chrome</li>\n<li>Presto – Opera</li>\n</ul>\n</li>\n<li>json在堆栈里面的存储<ul>\n<li>基本类型存在栈上面的</li>\n<li>引用类型存的值存在堆上面的，栈上面有引用地址</li>\n</ul>\n</li>\n<li>Jquery的eq()</li>\n<li>Vue生命周期created和mounted的区别</li>\n<li>闭包</li>\n<li>数组，里面是对象，存的类似name,id等字段，如果根据价格排序。<br>​     ​        dt- sort((a, b) =&gt; {<br>​     ​            return - price &gt; - price ? 1 : -1<br>​     ​        })</li>\n<li>es6的新增的数组的方法。<ul>\n<li>Array的内置方法<ul>\n<li>From</li>\n<li>Of</li>\n</ul>\n</li>\n<li>实例的内置方法<ul>\n<li>copyWithin</li>\n<li>find和findIndex</li>\n<li>Fill</li>\n<li>Entries,keys,values</li>\n<li>Includes</li>\n<li>Flat,flatMap</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数组的sum()方法（数组没有sum方法，所以这问题是错误的）</li>\n<li>axios与ajax的区别（估计问的是jquery的ajax和axios的区别）<ul>\n<li>从 nod- js 创建 http 请求</li>\n<li>支持 Promise API</li>\n<li>客户端支持防止CSRF</li>\n<li>提供了一些并发请求的接口</li>\n</ul>\n</li>\n<li>tcp的实现<ul>\n<li>首先，采用三次握手来建立TCP连接，四次握手来释放TCP连接，从而保证建立的传输信道是可靠的。</li>\n<li>其次，TCP采用了连续ARQ协议（回退N，Go-back-N；超时自动重传）来保证数据传输的正确性，使用滑动窗口协议来保证接方能够及时处理所接收到的数据，进行流量控制。</li>\n<li>最后，TCP使用慢开始、拥塞避免、快重传和快恢复来进行拥塞控制，避免网络拥塞。</li>\n</ul>\n</li>\n<li>vue与jquery的有什么不同<ul>\n<li>jQuery是使用选择器（$）选取DOM对象，对其进行赋值、取值、事件绑定等操作，其实和原生的HTML的区别只在于可以更方便的选取和操作DOM对象，而数据和界面是在一起的。比如需要获取label标签的内容：$(“lable”).val();,它还是依赖DOM元素的值。 </li>\n<li>Vue则是通过Vue对象将数据和View完全分离开来了。对数据进行操作不再需要引用相应的DOM对象，可以说数据和View是分离的，他们通过Vue对象这个vm实现相互的绑定。这就是传说中的MVVM。</li>\n<li>vue适用的场景：复杂数据操作的后台页面，表单填写页面</li>\n<li>jquery适用的场景：比如说一些html5的动画页面，一些需要js来操作页面样式的页面</li>\n</ul>\n</li>\n<li>面向对象与面向过程的区别<ul>\n<li>面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个依次调用就可以了。</li>\n<li>面向对象是把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描叙某个事物在整个解决问题的步骤中的行为。</li>\n</ul>\n</li>\n<li>TCP与UDP的区别<ul>\n<li>TCP(传输控制协议 Transmission Control Protocol)<ul>\n<li>提供IP环境下的数据可靠传输(一台计算机发出的字节流会无差错的发往网络上的其他计算机，而且计算机A接收数据包的时候，也会向计算机B回发数据包，这也会产生部分通信量)，有效流控，全双工操作(数据在两个方向上能同时传递)，多路复用服务，是面向连接，端到端的传输;</li>\n<li>面向连接：正式通信前必须要与对方建立连接。事先为所发送的数据开辟出连接好的通道，然后再进行数据发送，像打电话。</li>\n<li>TCP支持的应用协议：Telnet(远程登录)、FTP(文件传输协议)、SMTP(简单邮件传输协议)。TCP用于传输数据量大，可靠性要求高的应用。</li>\n<li>UDP(用户数据报协议，User Data Protocol)<ul>\n<li>面向非连接的(正式通信前不必与对方建立连接，不管对方状态就直接发送，像短信，QQ)，不能提供可靠性、流控、差错恢复功能。UDP用于一次只传送少量数据，可靠性要求低、传输经济等应用。</li>\n<li>UDP支持的应用协议：NFS(网络文件系统)、SNMP(简单网络管理系统)、DNS(主域名称系统)、TFTP(通用文件传输协议)等。</li>\n</ul>\n</li>\n<li>TCP：面向连接、传输可靠(保证数据正确性,保证数据顺序)、用于传输大量数据(流模式)、速度慢，建立连接需要开销较多(时间，系统资源)。</li>\n<li>UDP：面向非连接、传输不可靠、用于传输少量数据(数据包模式)、速度快。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>设计模式有哪些<ul>\n<li>工厂模式——工厂模式是为了解决多个类似对象声明的问题;也就是为了解决实列化对象产生重复的问题。<ul>\n<li>优点：能解决多个相似的问题。</li>\n<li>缺点：不能知道对象识别的问题(对象的类型不知道)。</li>\n</ul>\n</li>\n<li>单体模式——单体模式是一个用来划分命名空间并将一批属性和方法组织在一起的对象，如果它可以被实例化，那么它只能被实例化一次。<ul>\n<li>可以用来划分命名空间，减少全局变量的数量。</li>\n<li>使用单体模式可以使代码组织的更为一致，使代码容易阅读和维护。</li>\n<li>可以被实例化，且实例化一次。</li>\n</ul>\n</li>\n<li>模块模式</li>\n<li>代理模式</li>\n<li>职责链模式</li>\n<li>命令模式</li>\n<li>模板方法模式</li>\n<li>策略模式</li>\n<li>发布订阅模式</li>\n<li>中介者模式<br>​      ​    ​       ​            ​    </li>\n</ul>\n</li>\n<li>工厂模式有哪些好处</li>\n<li>能解决多个相似的问题。</li>\n<li>vue.use()原理   </li>\n<li>require 与import区别</li>\n<li>防抖动</li>\n<li>prototype继承原理<ul>\n<li>实例.__proto===构造函数.prototype</li>\n<li>查找实例的属性时，先判断自身有没有这个属性，如果有，那么直接获取；</li>\n<li>否则，查找它的<strong>proto</strong>有没有这个属性，如果有，就是它；</li>\n<li>否则，查找它的<strong>proto</strong>.<strong>proto</strong>有没有这个属性…</li>\n<li>如果一直找不到，就是undefined。</li>\n</ul>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjth1jn9b0001n0v9g81t8p18","tag_id":"cjth1jn9k0004n0v9io9le3m4","_id":"cjth1jn9r0009n0v9ewhbsfvn"},{"post_id":"cjth1jn9i0003n0v9oya2zvj5","tag_id":"cjth1jn9p0008n0v96m911pwp","_id":"cjth1jna2000hn0v96o2ap3wk"},{"post_id":"cjth1jn9i0003n0v9oya2zvj5","tag_id":"cjth1jn9u000cn0v92vxhpzsy","_id":"cjth1jna4000jn0v94ok1vysd"},{"post_id":"cjth1jn9m0005n0v9p9p3qb4a","tag_id":"cjth1jna0000fn0v9926069rv","_id":"cjth1jnab000tn0v9xqcy6hpa"},{"post_id":"cjth1jn9m0005n0v9p9p3qb4a","tag_id":"cjth1jna4000kn0v9kyiai911","_id":"cjth1jnac000un0v9mwjscyti"},{"post_id":"cjth1jn9m0005n0v9p9p3qb4a","tag_id":"cjth1jna8000on0v96lpl7ytj","_id":"cjth1jnac000wn0v9q98kv32l"},{"post_id":"cjth1jn9m0005n0v9p9p3qb4a","tag_id":"cjth1jnaa000rn0v931olammw","_id":"cjth1jnad000xn0v9zrjc47zz"},{"post_id":"cjth1jn9n0006n0v9z3120hzh","tag_id":"cjth1jnab000sn0v9bd8ikh6k","_id":"cjth1jnad000zn0v9ioc5qhyn"},{"post_id":"cjth1jn9p0007n0v995ozng5g","tag_id":"cjth1jnac000vn0v9ncjxis0f","_id":"cjth1jnaf0013n0v9bmnef1hw"},{"post_id":"cjth1jn9p0007n0v995ozng5g","tag_id":"cjth1jnad000yn0v9t21rqpgj","_id":"cjth1jnaf0014n0v972nv9bkf"},{"post_id":"cjth1jn9p0007n0v995ozng5g","tag_id":"cjth1jnae0010n0v93739esw1","_id":"cjth1jnaf0016n0v9qq6ce76h"},{"post_id":"cjth1jn9p0007n0v995ozng5g","tag_id":"cjth1jnae0011n0v9e9cdqy1q","_id":"cjth1jnaf0017n0v9ocrjny5w"},{"post_id":"cjth1jn9r000an0v9jx5pg7fw","tag_id":"cjth1jnae0012n0v9nrrvmz74","_id":"cjth1jnag001an0v9y6j07m7s"},{"post_id":"cjth1jn9r000an0v9jx5pg7fw","tag_id":"cjth1jnaf0015n0v9atigmqhf","_id":"cjth1jnah001bn0v9zawza6yd"},{"post_id":"cjth1jn9r000an0v9jx5pg7fw","tag_id":"cjth1jnag0018n0v95xq9qxtm","_id":"cjth1jnah001dn0v90p28bswf"},{"post_id":"cjth1jn9t000bn0v9mhzzivut","tag_id":"cjth1jnag0019n0v903844ys5","_id":"cjth1jnai001gn0v9mtpwpuxq"},{"post_id":"cjth1jn9t000bn0v9mhzzivut","tag_id":"cjth1jnah001cn0v9l2ersm7w","_id":"cjth1jnai001hn0v9z28akgd2"},{"post_id":"cjth1jn9t000bn0v9mhzzivut","tag_id":"cjth1jnah001en0v97868lwlc","_id":"cjth1jnak001jn0v98yb68uv1"},{"post_id":"cjth1jn9v000dn0v9kls49of2","tag_id":"cjth1jnai001fn0v9jdu288j3","_id":"cjth1jnal001kn0v99ry3wx7w"},{"post_id":"cjth1jn9y000en0v9pdvfdjx8","tag_id":"cjth1jnac000vn0v9ncjxis0f","_id":"cjth1jnam001nn0v9rpkfzxco"},{"post_id":"cjth1jn9y000en0v9pdvfdjx8","tag_id":"cjth1jnal001ln0v9ahx3jg8e","_id":"cjth1jnan001on0v9383oo7nk"},{"post_id":"cjth1jna1000gn0v9isue53yc","tag_id":"cjth1jnam001mn0v99tc2m7z4","_id":"cjth1jnan001qn0v9xvx2h15l"},{"post_id":"cjth1jna2000in0v9o5wson8a","tag_id":"cjth1jnan001pn0v98jykitqx","_id":"cjth1jnap001un0v9cvj2z434"},{"post_id":"cjth1jna2000in0v9o5wson8a","tag_id":"cjth1jnao001rn0v94latrh8d","_id":"cjth1jnap001vn0v9n614irjh"},{"post_id":"cjth1jna2000in0v9o5wson8a","tag_id":"cjth1jnao001sn0v98svq3fa3","_id":"cjth1jnaq001xn0v9y58w6num"},{"post_id":"cjth1jna5000ln0v9si61h98j","tag_id":"cjth1jnap001tn0v9p26zp3zu","_id":"cjth1jnar001zn0v9cjkujaoo"},{"post_id":"cjth1jna5000ln0v9si61h98j","tag_id":"cjth1jn9p0008n0v96m911pwp","_id":"cjth1jnar0020n0v9lmd65ad7"},{"post_id":"cjth1jna5000ln0v9si61h98j","tag_id":"cjth1jnap001wn0v9277p8tuk","_id":"cjth1jnar0022n0v99363eq1h"},{"post_id":"cjth1jna6000mn0v930mfbwdi","tag_id":"cjth1jnao001rn0v94latrh8d","_id":"cjth1jnar0023n0v9c24siei6"},{"post_id":"cjth1jna7000nn0v9ybdd8i0j","tag_id":"cjth1jnar0021n0v98taeyvic","_id":"cjth1jnat0027n0v94pmnnxjc"},{"post_id":"cjth1jna7000nn0v9ybdd8i0j","tag_id":"cjth1jnas0024n0v9r3nicmnh","_id":"cjth1jnat0028n0v9s64lb9j4"},{"post_id":"cjth1jna7000nn0v9ybdd8i0j","tag_id":"cjth1jnas0025n0v9vqw43jyj","_id":"cjth1jnau002an0v9a76xvj54"},{"post_id":"cjth1jna8000pn0v9nq1cfmk5","tag_id":"cjth1jnat0026n0v9wv5uc0rh","_id":"cjth1jnav002en0v9ylbqkeen"},{"post_id":"cjth1jna8000pn0v9nq1cfmk5","tag_id":"cjth1jnat0029n0v9x19e2bk4","_id":"cjth1jnav002fn0v9g23enhze"},{"post_id":"cjth1jna8000pn0v9nq1cfmk5","tag_id":"cjth1jnau002bn0v95u29i3jm","_id":"cjth1jnaw002hn0v9p6rgislf"},{"post_id":"cjth1jna8000pn0v9nq1cfmk5","tag_id":"cjth1jnau002cn0v9ctdsmz0v","_id":"cjth1jnaw002in0v9xu8i0j13"},{"post_id":"cjth1jnaa000qn0v9iz14b914","tag_id":"cjth1jnab000sn0v9bd8ikh6k","_id":"cjth1jnax002jn0v9gosvt84m"},{"post_id":"cjth1jnaa000qn0v9iz14b914","tag_id":"cjth1jnad000yn0v9t21rqpgj","_id":"cjth1jnax002kn0v9tlxovkhp"},{"post_id":"cjth1jnb9002ln0v9b1smojh2","tag_id":"cjth1jnbc002nn0v9t40pftsm","_id":"cjth1jnbe002pn0v9a5c1txh4"},{"post_id":"cjth1jnbb002mn0v9xgsy5pag","tag_id":"cjth1jnbd002on0v96s10ii76","_id":"cjth1jnbf002sn0v9qzhp75mc"},{"post_id":"cjth1jnbb002mn0v9xgsy5pag","tag_id":"cjth1jnbe002qn0v998c96gsa","_id":"cjth1jnbg002tn0v9wmgs0il0"},{"post_id":"cjth1jnbb002mn0v9xgsy5pag","tag_id":"cjth1jnbf002rn0v95r0wwur5","_id":"cjth1jnbg002un0v9s3di8r50"}],"Tag":[{"name":"年末总结","_id":"cjth1jn9k0004n0v9io9le3m4"},{"name":"nginx","_id":"cjth1jn9p0008n0v96m911pwp"},{"name":"https","_id":"cjth1jn9u000cn0v92vxhpzsy"},{"name":"HTTP","_id":"cjth1jna0000fn0v9926069rv"},{"name":"GET","_id":"cjth1jna4000kn0v9kyiai911"},{"name":"POST","_id":"cjth1jna8000on0v96lpl7ytj"},{"name":"网络通信","_id":"cjth1jnaa000rn0v931olammw"},{"name":"javascript","_id":"cjth1jnab000sn0v9bd8ikh6k"},{"name":"vscode","_id":"cjth1jnac000vn0v9ncjxis0f"},{"name":"vue","_id":"cjth1jnad000yn0v9t21rqpgj"},{"name":"ts","_id":"cjth1jnae0010n0v93739esw1"},{"name":"prettier","_id":"cjth1jnae0011n0v9e9cdqy1q"},{"name":"react-native","_id":"cjth1jnae0012n0v9nrrvmz74"},{"name":"react","_id":"cjth1jnaf0015n0v9atigmqhf"},{"name":"开发工具","_id":"cjth1jnag0018n0v95xq9qxtm"},{"name":"win10","_id":"cjth1jnag0019n0v903844ys5"},{"name":"自启动","_id":"cjth1jnah001cn0v9l2ersm7w"},{"name":"UWP","_id":"cjth1jnah001en0v97868lwlc"},{"name":"书","_id":"cjth1jnai001fn0v9jdu288j3"},{"name":"vscode插件","_id":"cjth1jnal001ln0v9ahx3jg8e"},{"name":"生活","_id":"cjth1jnam001mn0v99tc2m7z4"},{"name":"ps1","_id":"cjth1jnan001pn0v98jykitqx"},{"name":"powershell","_id":"cjth1jnao001rn0v94latrh8d"},{"name":"脚本","_id":"cjth1jnao001sn0v98svq3fa3"},{"name":"域名","_id":"cjth1jnap001tn0v9p26zp3zu"},{"name":"dns","_id":"cjth1jnap001wn0v9277p8tuk"},{"name":"小飞机","_id":"cjth1jnar0021n0v98taeyvic"},{"name":"搬瓦工","_id":"cjth1jnas0024n0v9r3nicmnh"},{"name":"VPN","_id":"cjth1jnas0025n0v9vqw43jyj"},{"name":"eggjs","_id":"cjth1jnat0026n0v9wv5uc0rh"},{"name":"typescript","_id":"cjth1jnat0029n0v9x19e2bk4"},{"name":"mysql","_id":"cjth1jnau002bn0v95u29i3jm"},{"name":"nodejs","_id":"cjth1jnau002cn0v9ctdsmz0v"},{"name":"年初计划","_id":"cjth1jnbc002nn0v9t40pftsm"},{"name":"面试","_id":"cjth1jnbd002on0v96s10ii76"},{"name":"前端","_id":"cjth1jnbe002qn0v998c96gsa"},{"name":"面试题","_id":"cjth1jnbf002rn0v95r0wwur5"}]}}