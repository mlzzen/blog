{"meta":{"title":"阿良良的博客","subtitle":null,"description":"博客","author":"Creanme","url":"https://re0gamer.com"},"pages":[{"title":"","date":"2018-12-31T13:36:37.700Z","updated":"2018-12-31T13:36:37.700Z","comments":false,"path":"categories/index.html","permalink":"https://re0gamer.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2018-12-31T13:36:37.708Z","updated":"2018-12-31T13:36:37.708Z","comments":false,"path":"tags/index.html","permalink":"https://re0gamer.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"2018年总结","slug":"2018年总结","date":"2018-12-31T14:07:26.000Z","updated":"2018-12-31T15:01:08.837Z","comments":true,"path":"2018/12/31/2018年总结/","link":"","permalink":"https://re0gamer.com/2018/12/31/2018年总结/","excerpt":"","text":"一年又快结束了，回想这一年却并无太多成长。想做的几个小东西也因为后面觉得太过复杂而弃坑删了项目。 作为一个伪软粉，还是很喜欢 typescript 的，今年在更多的项目使用了 ts，尝试了一下 uwp，.net core，flutter。还尝试学习了一下 java web 相关的之类的。个人还是更喜欢 uwp 和 flutter，不过 uwp 看情形是很难火的了，flutter 势头还不错。 也在学习中思考了一下自己学习的的方向，是学习java web相关的还是学习更多客户端相关的。","categories":[],"tags":[]},{"title":"安装最新版powershell，把PWSH Admin添加进shift右键文件夹的菜单里","slug":"安装最新版powershell，把PWSH-Admin添加进shift右键文件夹的菜单里","date":"2018-08-17T12:27:31.000Z","updated":"2018-12-31T13:36:37.700Z","comments":true,"path":"2018/08/17/安装最新版powershell，把PWSH-Admin添加进shift右键文件夹的菜单里/","link":"","permalink":"https://re0gamer.com/2018/08/17/安装最新版powershell，把PWSH-Admin添加进shift右键文件夹的菜单里/","excerpt":"","text":"安装最新版powershell微软把powershell开源了很久了，最新版要在github上面下载https://github.com/PowerShell/PowerShell/releases 把以admin启动最新版powershell添加进注册表 win+R 输入regedit打开注册表。 来到路径 HKEY_CLASSES_ROOT\\Directory\\Background\\shell 里面。 右键shell新建项，取名叫“PWSHAsAdmin”，名字随便取的。 给右侧的的（默认）赋值为“PWSH Admin”。 在右侧新建字符串Extended，类型为REG_SZ。 在右侧新建字符串HasLUAShield，类型为REG_SZ。 在右侧新建字符串Icon,类型为REG_SZ, 值为pwsh.exe。如图所示： 图片描述 右键点击“PWSHAsAdmin”,新建项“command”。 在右侧把默认值改为pwsh -windowstyle hidden -Command “Start-Process cmd -ArgumentList ‘/s,/k,pushd,%V &amp;&amp; start pwsh &amp;&amp; exit’ -Verb RunAs”如图所示： 图片描述 试试成果 以管理员权限打开powershell","categories":[],"tags":[{"name":"powershell","slug":"powershell","permalink":"https://re0gamer.com/tags/powershell/"}]},{"title":"eggjs+typescript+mysql","slug":"尝试使用eggjs-typescript-mysql","date":"2018-06-13T09:44:52.000Z","updated":"2018-12-31T13:36:37.700Z","comments":true,"path":"2018/06/13/尝试使用eggjs-typescript-mysql/","link":"","permalink":"https://re0gamer.com/2018/06/13/尝试使用eggjs-typescript-mysql/","excerpt":"","text":"安装egg命令行工具1npm i egg-init -g 使用命令行工具新建项目12egg-init 项目名称选择项目的类型为typescript 安装mysql的插件1yarn add egg-mysql 插件的配置1234567891011121314151617181920212223242526272829303132333435363738// config/plugin.tsconst plugin: EggPlugin = &#123; static: true, nunjucks: &#123; enable: true, package: &apos;egg-view-nunjucks&apos; &#125;, mysql: &#123; enable: true, package: &apos;egg-mysql&apos; &#125;&#125;// config/config.local.tsexport default () =&gt; &#123; const config: DefaultConfig = &#123; mysql: &#123; // 单数据库信息配置 client: &#123; // host host: &apos;127.0.0.1&apos;, // 端口号 port: &apos;3306&apos;, // 用户名 user: &apos;creanme&apos;, // 密码 password: &apos;pwd123&apos;, // 数据库名 database: &apos;test&apos; &#125;, // 是否加载到 app 上，默认开启 app: true, // 是否加载到 agent 上，默认关闭 agent: false &#125; &#125; return config&#125; 未完待续","categories":[],"tags":[{"name":"eggjs","slug":"eggjs","permalink":"https://re0gamer.com/tags/eggjs/"},{"name":"typescript","slug":"typescript","permalink":"https://re0gamer.com/tags/typescript/"},{"name":"mysql","slug":"mysql","permalink":"https://re0gamer.com/tags/mysql/"},{"name":"nodejs","slug":"nodejs","permalink":"https://re0gamer.com/tags/nodejs/"}]},{"title":"博客的更新与脚本","slug":"博客的更新与脚本","date":"2018-06-07T16:27:31.000Z","updated":"2018-12-31T13:36:37.700Z","comments":true,"path":"2018/06/08/博客的更新与脚本/","link":"","permalink":"https://re0gamer.com/2018/06/08/博客的更新与脚本/","excerpt":"","text":"使用creanme.github.io与hexo阶段由于github.io速度太慢，而且电脑重装过一次系统，以前写的博文都丢失了，只剩下github上生成的静态文件，.md文件都没了。 把hexo生成的文件部署在国内服务器上之前买的vps都是国外的，访问速度太慢，不好用来搭建国内访问的网站，于是买了几年某良心云。 首先在github上面建个仓库blog，hexo与master分支，hexo分支用来保存整个项目，方便以后本地电脑上的项目丢失了，直接clone下来就可以继续更新；master分支主要用来展示.md。 写博客就在本地上写，写完hexo g生成静态文件。然后把整个项目push到hexo分支，把source/_post文件夹里面的文件push到master。 脚本123456789101112hexo ggit add -Agit commit -m &quot;update blog&quot;git push origin hexocd .\\source\\_postsgit add -Agit commit -m &quot;update blog&quot;git push origin masterssh -i &quot;密钥文件绝对路径&quot; name@address &gt; /dev/null 2&gt;&amp;1 &lt;&lt; eeooffcd /var/www/bloggit pull origin hexoecho done!","categories":[],"tags":[{"name":"ps1","slug":"ps1","permalink":"https://re0gamer.com/tags/ps1/"},{"name":"powershell","slug":"powershell","permalink":"https://re0gamer.com/tags/powershell/"},{"name":"脚本","slug":"脚本","permalink":"https://re0gamer.com/tags/脚本/"}]},{"title":"子域名配置","slug":"子域名配置","date":"2018-06-07T15:12:48.000Z","updated":"2018-12-31T13:36:37.700Z","comments":true,"path":"2018/06/07/子域名配置/","link":"","permalink":"https://re0gamer.com/2018/06/07/子域名配置/","excerpt":"","text":"域名管理处的配置我是把在namesilo处买的域名，然后把NameServers指向了 f1g1ns1.dnspod.net f1g1ns2.dnspod.net。然后在dnspod 添加了*domain.com 泛域名解析，然后要等一会儿，毕竟namesilo是国外的域名商，我开始以为没有作用，然后反复试各种方法，浪费了很多时间。 nginx 的配置server{ listen 80; server_name riyue.me; if ($scheme != &quot;https&quot;) { return 301 https://$host$request_uri; } root /var/www/riyue; index index.php index.html index.htm; location ~ \\.php$ { include /etc/nginx/fastcgi_params; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; } } server{ listen 80; server_name blog.riyue.me; # if ($scheme != &quot;https&quot;) { # return 301 https://$host$request_uri; # } root /var/www/blog/public; index index.php index.html index.htm; location ~ \\.php$ { include /etc/nginx/fastcgi_params; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; } } 重启nginxnginx -s reload","categories":[],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://re0gamer.com/tags/nginx/"},{"name":"域名","slug":"域名","permalink":"https://re0gamer.com/tags/域名/"},{"name":"dns","slug":"dns","permalink":"https://re0gamer.com/tags/dns/"}]},{"title":"letsencrypt的免费https证书申请与nginx部署","slug":"letsencrypt的免费https证书申请与nginx部署","date":"2018-06-06T10:44:52.000Z","updated":"2018-12-31T13:36:37.700Z","comments":true,"path":"2018/06/06/letsencrypt的免费https证书申请与nginx部署/","link":"","permalink":"https://re0gamer.com/2018/06/06/letsencrypt的免费https证书申请与nginx部署/","excerpt":"","text":"使用certbot获取证书 第一步 选择好使用的软件和系统，然后页面就自动滚动到了相应处。 第二步 使用下面命令安装相关工具。 yum -y install yum-utils yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional 第三步 安装python-cert-nginx $ sudo yum install python2-certbot-nginx 第四步 使用命令，获得证书 $ sudo certbot --nginx 第五步 打开nginx.conf 添加 server { listen 443 ssl; server_name blog.riyue.me; ssl_certificate /etc/letsencrypt/live/riyue.me/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/riyue.me/privkey.pem; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; ssl_dhparam /etc/ssl/certs/dhparam.pem; ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA'; ssl_session_timeout 1d; ssl_session_cache shared:SSL:50m; ssl_stapling on; ssl_stapling_verify on; add_header Strict-Transport-Security max-age=15768000; # The rest of your server block root /var/www/blog/public; index index.html index.htm; location / { try_files $uri $uri/ =404; } } 第六步 重启nginx","categories":[],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://re0gamer.com/tags/nginx/"},{"name":"https","slug":"https","permalink":"https://re0gamer.com/tags/https/"}]},{"title":"vscode vue ts项目 prettier配置","slug":"vscode-vue-ts项目-prettier配置","date":"2018-05-24T15:17:37.000Z","updated":"2018-12-31T13:36:37.700Z","comments":true,"path":"2018/05/24/vscode-vue-ts项目-prettier配置/","link":"","permalink":"https://re0gamer.com/2018/05/24/vscode-vue-ts项目-prettier配置/","excerpt":"","text":"必装插件 Prettier - Code formatter配置typescript 需要tslint和tslint-config-prettieryarn add -D tslint tslint-config-prettier 根目录添加tslint.json { &quot;defaultSeverity&quot;: &quot;warning&quot;, &quot;extend&quot;: [&quot;tslint:recommended&quot;, &quot;tslint-config-prettier&quot;], &quot;linterOptions&quot;: { &quot;exclude&quot;: [&quot;node_modules/**&quot;] }, &quot;rules&quot;: { &quot;quotemark&quot;: [true, &quot;single&quot;], &quot;indent&quot;: [true, &quot;spaces&quot;, 4], &quot;interface-name&quot;: false, &quot;ordered-imports&quot;: false, &quot;object-literal-sort-keys&quot;: false, &quot;no-consecutive-blank-lines&quot;: false } } 样式部分需要stylint和prettier-stylelintyarn add -D stylelint prettier-stylelint stylelint-config-ydj 根目录添加.stylelintrc.js module.exports = { extends: [ &apos;stylelint-config-ydj/scss&apos;, // your stylint config &apos;./node_modules/prettier-stylelint/config.js&apos; ], rules: { &apos;string-quotes&apos;: &apos;double&apos; } }; prettier配置，在根目录添加.prettierrc{ &quot;eslintIntegration&quot;: true, &quot;stylelintIntegration&quot;: true, &quot;tabWidth&quot;: 4, &quot;singleQuote&quot;: true, &quot;semi&quot;: false } 编辑器配置里面需要加入 // vetur configuration &quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;, // prettier configuration &quot;prettier.disableLanguages&quot;: [ &quot;vue&quot; ], 参考YDJFE的文章","categories":[],"tags":[{"name":"vscode","slug":"vscode","permalink":"https://re0gamer.com/tags/vscode/"},{"name":"vue","slug":"vue","permalink":"https://re0gamer.com/tags/vue/"},{"name":"ts","slug":"ts","permalink":"https://re0gamer.com/tags/ts/"},{"name":"prettier","slug":"prettier","permalink":"https://re0gamer.com/tags/prettier/"}]},{"title":"vscode常用插件","slug":"vscode常用插件","date":"2018-05-14T06:26:11.000Z","updated":"2018-12-31T13:36:37.700Z","comments":true,"path":"2018/05/14/vscode常用插件/","link":"","permalink":"https://re0gamer.com/2018/05/14/vscode常用插件/","excerpt":"","text":"1.auto import在引用某些模块后会提示你引用某个包 2.babel es6/es7babel的es6/es7增强 3.beautify非常好用，的一款格式化代码的插件，能格式化许多种代码。 4.change-case一键转换大小驼峰的风格 5.debugger for chrome用于在chrome上面的debug 6.document this主要用于代码的批注，后期文档的生成。 7.easy less自动把less编译为css 8.eslintJavaScript和JSX检查工具 9.git history增强了vscode的git功能 10.go微软官方出的go语言的插件 11.html css supporthtml里面的class提示 12.html snippetshtml的代码补全 13.javascript(es6) code snippetses6代码提示 14.node debug提示node.js代码 15.one dark pro热门的主题 16.open in browser直接在浏览器里面打开 17.output colorizeroutput，debug,extensions增强 18.path autocomplete路径提示 19.react-beautifyreact代码格式化 20.react-native/reactreact react-native代码的提示 21.reactjs code snippetsreact 代码提示 22.TODO Hightlight高亮todo 23.TSLintts代码检查工具 24.veturvue代码提示，检测，格式化工具。 25.vscode-icons文件图标","categories":[],"tags":[{"name":"vscode","slug":"vscode","permalink":"https://re0gamer.com/tags/vscode/"},{"name":"vscode插件","slug":"vscode插件","permalink":"https://re0gamer.com/tags/vscode插件/"}]},{"title":"react native小知识","slug":"react-native小知识","date":"2018-05-13T12:38:54.000Z","updated":"2018-12-31T13:36:37.700Z","comments":true,"path":"2018/05/13/react-native小知识/","link":"","permalink":"https://re0gamer.com/2018/05/13/react-native小知识/","excerpt":"","text":"执行react-native run-android命令后，开始下载gradle文件，速度非常慢。 解决办法：1. 手动使用迅雷下载，迅雷下载好后，把文件放入到一个文件夹中，最好路径不带中文。 2. 修改 项目名\\android\\gradle\\wrapper 下的gradle-wrapper.properties，把下 载的地址改为自己已经下好的地址。distributionUrl=file\\:///D:/gradle-2.14.1-all.zip 冒号要用\\转 执行react-native run-android命令后，使用的vs的模拟器，连接不上模拟器。 解决办法： 参考的 http://www.cnblogs.com/tianma3798/p/5911395.html1. 打开模拟器的“工具”菜单。 2. 选项卡切换到Network。 3. 使用命令adb connect 169.254.138.177:5555就连接上了。 4. 重新运行命令react-native run-android。","categories":[],"tags":[{"name":"react-native","slug":"react-native","permalink":"https://re0gamer.com/tags/react-native/"},{"name":"react","slug":"react","permalink":"https://re0gamer.com/tags/react/"},{"name":"开发工具","slug":"开发工具","permalink":"https://re0gamer.com/tags/开发工具/"}]},{"title":"前端推荐书籍","slug":"前端推荐书籍","date":"2018-05-13T12:28:00.000Z","updated":"2018-12-31T13:36:37.700Z","comments":true,"path":"2018/05/13/前端推荐书籍/","link":"","permalink":"https://re0gamer.com/2018/05/13/前端推荐书籍/","excerpt":"","text":"《JavaScript权威指南（第六版）》 《JavaScript高级程序设计》 《JavaScript DOM编程艺术》 《JavaScript编程精解》 《JQuery权威指南》 《编写可维护的JavaScript》 《JavaScript异步编程》 《高性能JavaScript》","categories":[],"tags":[{"name":"书","slug":"书","permalink":"https://re0gamer.com/tags/书/"}]}]}