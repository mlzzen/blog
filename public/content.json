{"meta":{"title":"阿良良的博客","subtitle":null,"description":"博客","author":"Creanme","url":"https://re0gamer.com"},"pages":[{"title":"","date":"2019-03-07T15:19:05.271Z","updated":"2019-03-07T15:19:05.271Z","comments":false,"path":"categories/index.html","permalink":"https://re0gamer.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2019-03-07T15:19:05.272Z","updated":"2019-03-07T15:19:05.272Z","comments":false,"path":"tags/index.html","permalink":"https://re0gamer.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"笔试001","slug":"笔试001","date":"2019-04-02T12:30:43.000Z","updated":"2019-04-02T12:31:23.373Z","comments":true,"path":"2019/04/02/笔试001/","link":"","permalink":"https://re0gamer.com/2019/04/02/笔试001/","excerpt":"","text":"请写出以下代码的结果： 123456789try &#123; throw new Error();&#125; catch (x) &#123; var x = 1, y = 2; console.log(x); //1 console.log(y); //2&#125;console.log(x); //undefinedconsole.log(y); //2 请用javascript实现算法，寻找以下字符串中出现次数最多的、位置最靠前的字符 123456789101112131415161718192021222324252627282930313233343536373839//给的字符串let strs = '4eqpjqpijwijsl';//解答let length = strs.length;let counter = &#123; 0: &#123; index: length, count: 0 &#125;&#125;for (let i = 48; i &lt; 58; i++) &#123; counter[String.fromCharCode(i)] = &#123; index: length, count: 0 &#125;&#125;for (let j = 97; j &lt; 121; j++) &#123; counter[String.fromCharCode(j)] = &#123; index: length, count: 0 &#125;&#125;for (let i = 0; i &lt; length; i++) &#123; counter[strs[i]].count++; if (i &lt; counter[strs[i]].index) &#123; counter[strs[i]].index = i; &#125;&#125;let index = length, count = 0, charOne = \"\";for (let key in counter) &#123; if (counter[key].count &gt; count) &#123; count = counter[key].count; index = counter[key].index; charOne = key; &#125; else if (counter[key].count === count) &#123; if (counter[key].index &lt; index) &#123; index = counter[key].index; charOne = key; &#125; &#125;&#125;","categories":[],"tags":[{"name":"笔试","slug":"笔试","permalink":"https://re0gamer.com/tags/笔试/"}]},{"title":"vue首页加载优化","slug":"vue首页加载优化","date":"2019-04-01T15:20:53.000Z","updated":"2019-04-01T15:32:53.658Z","comments":true,"path":"2019/04/01/vue首页加载优化/","link":"","permalink":"https://re0gamer.com/2019/04/01/vue首页加载优化/","excerpt":"","text":"参考自https://juejin.im/entry/5bc7ccefe51d450e543ecfac 可以使用Webpack Bundle Analyzer分析所依赖的包大小以及所生成包 引入CDN在html中使用script标签引入几个比较大的公共库，然后在webpack.conf.js里面增加配置12345externals: &#123; &apos;vue&apos;: &apos;Vue&apos;, &apos;vue-router&apos;: &apos;VueRouter&apos;, &apos;vuex&apos;: &apos;Vuex&apos;&#125; 代码分割开启gzip压缩可以使用CompressionWebpackPlugin插件提前压缩文件 使用缓存nginx默认会开启缓存，对静态文件的响应加上Etag，二次加载就会从缓存中读取。 使用SSR（服务端渲染）","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"https://re0gamer.com/tags/vue/"},{"name":"首页","slug":"首页","permalink":"https://re0gamer.com/tags/首页/"},{"name":"优化","slug":"优化","permalink":"https://re0gamer.com/tags/优化/"}]},{"title":"替换系统Calibri字体，使用onenote不难受","slug":"替换系统Calibri字体，使用onenote不难受","date":"2019-03-31T06:47:23.000Z","updated":"2019-03-31T06:47:54.372Z","comments":true,"path":"2019/03/31/替换系统Calibri字体，使用onenote不难受/","link":"","permalink":"https://re0gamer.com/2019/03/31/替换系统Calibri字体，使用onenote不难受/","excerpt":"","text":"在知乎看到一个解决Calibri字体问题的办法，把系统自带的Calibri字体换成其它字体就解决了。 打开FontCreator工具，文件-&gt;打开已安装字体-&gt;选择consola 导出字体，选择truetype，ttf格式。 打开导出的字体，字体-&gt;属性-&gt;标识符，然后将字系改成“Calibri” 导出字体 安装字体","categories":[],"tags":[{"name":"onenote","slug":"onenote","permalink":"https://re0gamer.com/tags/onenote/"},{"name":"字体","slug":"字体","permalink":"https://re0gamer.com/tags/字体/"}]},{"title":"defer与async","slug":"defer与async","date":"2019-03-30T14:53:52.000Z","updated":"2019-03-30T14:54:47.654Z","comments":true,"path":"2019/03/30/defer与async/","link":"","permalink":"https://re0gamer.com/2019/03/30/defer与async/","excerpt":"","text":"defer延迟脚本并不一定会按照顺序执行，也不一定会在DOMContentLoaded事件触发前执行，因此最好只包含一个defer延迟的脚本。defer属性只适用于外部脚本文件。 script标签的async属性目的是不让页面等待两个脚本下载和执行，从而异步加载页面其他内容，建议异步脚本不要在加载期间修改DOM。异步脚本一定会在页面的load事件前执行，但可能会在DOMContentLoaded事件触发之前或之后执行。 defer与async不同：defer要页面解析完了，才执行defer的脚本，而async是按顺序加载，只是不等待。","categories":[],"tags":[{"name":"html","slug":"html","permalink":"https://re0gamer.com/tags/html/"},{"name":"defer","slug":"defer","permalink":"https://re0gamer.com/tags/defer/"},{"name":"async","slug":"async","permalink":"https://re0gamer.com/tags/async/"}]},{"title":"面试问题2","slug":"面试问题2","date":"2019-03-28T13:16:57.000Z","updated":"2019-03-28T13:17:20.443Z","comments":true,"path":"2019/03/28/面试问题2/","link":"","permalink":"https://re0gamer.com/2019/03/28/面试问题2/","excerpt":"","text":"HTML 必考：你是如何理解 HTML 语义化的？ 正确的标签做正确的事情 页面内容结构化 无CSS样子时也容易阅读，便于阅读维护和理解 便于浏览器、搜索引擎解析。 利于爬虫标记、利于SEO meta viewport 是做什么用的，怎么写？ 虚拟视口是为了让未做移动端优化的网站在窄屏设备上可以移动，缩放以查看不同区域。 但是对于用媒体查询针对窄屏做了优化的页面，这种机制不大好，比如如果虚拟视口宽 980px，那么在 640px 或 480px 或更小宽度要起作用的媒体查询就不会触发了，浪费了这些响应式设计。 12&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"&gt;&gt; width属性控制视口的宽度。可以像width=600这样设为确切的像素数，或者设为device-width 特殊值，代表缩放为 100% 时以 CSS 像素计量的屏幕宽度。（相应的也有height及device-height属性，可能对包含基于视口高度调整大小及位置的元素的页面有用。） initial-scale 属性控制页面最初加载时的缩放等级。maximum-scale、minimum-scale及user-scalable属性控制允许用户以怎样的方式放大或缩小页面。 你用过哪些 HTML 5 标签？ header，aside，nav，section，article，footer，time，address，canvas，audio，video，source H5 是什么？ 前端在移动端的应用 CSS 必考：两种盒模型分别说一下。 标准盒模型：元素的width和height属性仅仅指content area box-sizing: content-box IE盒模型：元素的width和height属性由content area + padding + border组成 box-sizing: border-box 必考：如何垂直居中？ 仅居中元素定宽高适用 absolute + 负margin 1234&gt; &lt;div class=\"wp\"&gt;&gt; &lt;div class=\"box size\"&gt;123123&lt;/div&gt;&gt; &lt;/div&gt;&gt; 1234567891011121314151617&gt; /* 公共代码 */&gt; .wp &#123;&gt; border: 1px solid red;&gt; width: 300px;&gt; height: 300px;&gt; &#125;&gt; &gt; .box &#123;&gt; background: green; &gt; &#125;&gt; &gt; .box.size&#123;&gt; width: 100px;&gt; height: 100px;&gt; &#125;&gt; /* 公共代码 */&gt; 1234567891011&gt; .wp &#123;&gt; position: relative;&gt; &#125;&gt; .box &#123;&gt; position: absolute;;&gt; top: 50%;&gt; left: 50%;&gt; margin-left: -50px;&gt; margin-top: -50px;&gt; &#125;&gt; absolute + margin auto 123456789101112&gt; .wp &#123;&gt; position: relative;&gt; &#125;&gt; .box &#123;&gt; position: absolute;;&gt; top: 0;&gt; left: 0;&gt; right: 0;&gt; bottom: 0;&gt; margin: auto;&gt; &#125;&gt; absolute + calc 123456789&gt; .wp &#123;&gt; position: relative;&gt; &#125;&gt; .box &#123;&gt; position: absolute;;&gt; top: calc(50% - 50px);&gt; left: calc(50% - 50px);&gt; &#125;&gt; 居中元素不定宽高 absolute + transform 12345678910&gt; .wp &#123;&gt; position: relative;&gt; &#125;&gt; .box &#123;&gt; position: absolute;&gt; top: 50%;&gt; left: 50%;&gt; transform: translate(-50%, -50%);&gt; &#125;&gt; lineheight 12345678910111213&gt; .wp &#123;&gt; line-height: 300px;&gt; text-align: center;&gt; font-size: 0px;&gt; &#125;&gt; .box &#123;&gt; font-size: 16px;&gt; display: inline-block;&gt; vertical-align: middle;&gt; line-height: initial;&gt; text-align: left; /* 修正文字 */&gt; &#125;&gt; writing-mode 123456&gt; &lt;div class=\"wp\"&gt;&gt; &lt;div class=\"wp-inner\"&gt;&gt; &lt;div class=\"box\"&gt;123123&lt;/div&gt;&gt; &lt;/div&gt;&gt; &lt;/div&gt;&gt; 12345678910111213141516&gt; .wp &#123;&gt; writing-mode: vertical-lr;&gt; text-align: center;&gt; &#125;&gt; .wp-inner &#123;&gt; writing-mode: horizontal-tb;&gt; display: inline-block;&gt; text-align: center;&gt; width: 100%;&gt; &#125;&gt; .box &#123;&gt; display: inline-block;&gt; margin: auto;&gt; text-align: left;&gt; &#125;&gt; table 12345678910&gt; &lt;table&gt;&gt; &lt;tbody&gt;&gt; &lt;tr&gt;&gt; &lt;td class=\"wp\"&gt;&gt; &lt;div class=\"box\"&gt;123123&lt;/div&gt;&gt; &lt;/td&gt;&gt; &lt;/tr&gt;&gt; &lt;/tbody&gt;&gt; &lt;/table&gt;&gt; 1234567&gt; .wp &#123;&gt; text-align: center;&gt; &#125;&gt; .box &#123;&gt; display: inline-block;&gt; &#125;&gt; css-table 1234&gt; &lt;div class=&quot;wp&quot;&gt;&gt; &lt;div class=&quot;box&quot;&gt;123123&lt;/div&gt;&gt; &lt;/div&gt;&gt; 123456789&gt; .wp &#123;&gt; display: table-cell;&gt; text-align: center;&gt; vertical-align: middle;&gt; &#125;&gt; .box &#123;&gt; display: inline-block;&gt; &#125;&gt; flex 123456&gt; .wp &#123;&gt; display: flex;&gt; justify-content: center;&gt; align-items: center;&gt; &#125;&gt; grid 12345678&gt; .wp &#123;&gt; display: grid;&gt; &#125;&gt; .box &#123;&gt; align-self: center;&gt; justify-self: center;&gt; &#125;&gt; | 方法 | 居中元素定宽高固定 | PC兼容性 | 移动端兼容性 | | :--------------------- | :----------------- | :--------------------------- | :---------------- | | absolute + 负margin | 是 | ie6+, chrome4+, firefox2+ | 安卓2.3+, iOS6+ | | absolute + margin auto | 是 | ie6+, chrome4+, firefox2+ | 安卓2.3+, iOS6+ | | absolute + calc | 是 | ie9+, chrome19+, firefox4+ | 安卓4.4+, iOS6+ | | absolute + transform | 否 | ie9+, chrome4+, firefox3.5+ | 安卓3+, iOS6+ | | writing-mode | 否 | ie6+, chrome4+, firefox3.5+ | 安卓2.3+, iOS5.1+ | | lineheight | 否 | ie6+, chrome4+, firefox2+ | 安卓2.3+, iOS6+ | | table | 否 | ie6+, chrome4+, firefox2+ | 安卓2.3+, iOS6+ | | css-table | 否 | ie8+, chrome4+, firefox2+ | 安卓2.3+, iOS6+ | | flex | 否 | ie10+, chrome4+, firefox2+ | 安卓2.3+, iOS6+ | | grid | 否 | ie10+, chrome57+, firefox52+ | 安卓6+, iOS10.3+ | 必考：flex 怎么用，常用属性有哪些？ 必考：BFC 是什么？ CSS 选择器优先级 清除浮动说一下 原生 JS 必考：ES 6 语法知道哪些，分别怎么用？ 必考 Promise、Promise.all、Promise.race 分别怎么用？ 必考：手写函数防抖和函数节流 必考：手写AJAX 必考：这段代码里的 this 是什么？ 必考：闭包/立即执行函数是什么？ 必考：什么是 JSONP，什么是 CORS，什么是跨域？ 常考：async/await 怎么用，如何捕获异常？ 常考：如何实现深拷贝？ 常考：如何用正则实现 trim()？ 常考：不用 class 如何实现继承？用 class 又如何实现？ 常考：如何实现数组去重？ 放弃：== 相关题目（反着答） 送命题：手写一个 Promise DOM 必考：事件委托 曾考：用 mouse 事件写一个可拖曳的 div HTTP 必考：HTTP 状态码知道哪些？分别什么意思？ 大公司必考：HTTP 缓存有哪几种？ 必考：GET 和 POST 的区别 Cookie V.S. LocalStorage V.S. SessionStorage V.S. Session 框架Vue 必考：watch 和 computed 和 methods 区别是什么？ 必考：Vue 有哪些生命周期钩子函数？分别有什么用？ 必考：Vue 如何实现组件间通信？ 必考：Vue 数据响应式怎么做到的？ 必考：Vue.set 是做什么用的？ Vuex 你怎么用的？ VueRouter 你怎么用的？ 路由守卫是什么？ React 必考：受控组件 V.S. 非受控组件 必考：React 有哪些生命周期函数？分别有什么用？（Ajax 请求放在哪个阶段？） 必考：React 如何实现组件间通信？ 必考：shouldComponentUpdate 有什么用？ 必考：虚拟 DOM 是什么？ 必考：什么是高阶组件？ React diff 的原理是什么？ 必考 Redux 是什么？ connect 的原理是什么？ TypeScript never 类型是什么？ TypeScript 比起 JavaScript 有什么优点？ Webpack 必考：有哪些常见 loader 和 plugin，你用过哪些？ 英语题：loader 和 plugin 的区别是什么？ 必考：如何按需加载代码？ 必考：如何提高构建速度？ 转义出的文件过大怎么办？ 安全 必考：什么是 XSS？如何预防？ 必考：什么是 CSRF？如何预防？ 开发题目 必考：你遇到最难的问题是怎样的？ 你在团队的突出贡献是什么？ 最近在关注什么新技术 有没有看什么源码，看了后有什么记忆深刻的地方，有什么收获 超纲题目 JS 垃圾回收机制 Eventloop 说一下 个性化题目 PWA echarts.js / d3.js three.js flutter SSR","categories":[],"tags":[{"name":"面试","slug":"面试","permalink":"https://re0gamer.com/tags/面试/"}]},{"title":"vue的生命周期","slug":"vue的生命周期","date":"2019-03-27T15:19:07.000Z","updated":"2019-03-27T15:21:53.183Z","comments":true,"path":"2019/03/27/vue的生命周期/","link":"","permalink":"https://re0gamer.com/2019/03/27/vue的生命周期/","excerpt":"","text":"创建前/后在beforeCreated阶段，vue实例的挂载元素el和数据对象data都为undefined，还未初始化。在created阶段，vue实例的数据对象data有了，el还没有。 载入前/后在beforeMount阶段，vue实例的$el和data都初始化了，但还是挂载之前为虚拟的dom节点，data.message还未替换。在mounted阶段，vue实例挂载完成，data.message成功渲染。 更新前/后当data变化时，会触发beforeUpdate和updated方法。 销毁前/后在执行destroy方法后，对data的改变不会再触发周期函数，说明此时vue实例已经解除了事件监听以及和dom的绑定，但是dom结构依然存在。","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"https://re0gamer.com/tags/vue/"}]},{"title":"前端性能优化","slug":"前端性能优化","date":"2019-03-26T14:42:48.000Z","updated":"2019-03-26T14:47:03.869Z","comments":true,"path":"2019/03/26/前端性能优化/","link":"","permalink":"https://re0gamer.com/2019/03/26/前端性能优化/","excerpt":"","text":"页面内容 减少HTTP请求数 合并javascript、css文件。 使用css sprite(逐步被Icon，svg sprite取代) 减少DNS查询 避免重定向 HTTP重定向通过301/302状态码实现 缓存ajax请求 延迟加载 非首屏使用的数据、样式、脚本、图片等。 用户交互时才会显示的内容。 预先加载 减少DOM元素数量 划分内容到不同域名 尽量减少iframe使用 优点： 可以用来加载速度较慢的第三方资源，如广告、徽章。 可以作安全沙箱。 可以并行下载脚本。 缺点： 加载代价昂贵，即使是空的页面。 阻塞页面load事件触发； 内存问题。 避免404错误 服务器 使用CDN 添加Expires或者Cache-Control响应头 启用Gzip 配置Etag 尽早输出缓冲 Ajax请求使用GET方法 避免图片src为空 cookie 减少cookie大小 静态资源使用无cookie域名 css 把样式表表放在中 不要使用css表达式 使用代替@import 不要使用filter javascript 把脚本放在页面底部 使用外部js和css 压缩js和css 移除重复脚本 减少DOM操作 使用高效的事件处理 图片 优化图片 优化CSS Sprite 不要在HTML中缩放图片 使用体积小、可缓存的favicon.ico 移动端 保持单个文件小于25kb 打包内容为分段文档","categories":[],"tags":[{"name":"优化","slug":"优化","permalink":"https://re0gamer.com/tags/优化/"},{"name":"前端","slug":"前端","permalink":"https://re0gamer.com/tags/前端/"},{"name":"性能","slug":"性能","permalink":"https://re0gamer.com/tags/性能/"}]},{"title":"浏览器的构成","slug":"浏览器的构成","date":"2019-03-25T13:07:34.000Z","updated":"2019-03-25T13:12:37.755Z","comments":true,"path":"2019/03/25/浏览器的构成/","link":"","permalink":"https://re0gamer.com/2019/03/25/浏览器的构成/","excerpt":"","text":"浏览器的组成浏览器大致由shell和内核组成，shell包括外壳，菜单，用户操作界面等等；内核一般分为渲染引擎和javascript引擎。 javascript引擎开发中 SpiderMonkey用于Mozilla Firefox V8用于Chrome JavaScriptCore用于Safari Chakra(JScript引擎)-用于Internet Explorer Chakra(JavaScript引擎)-用于Microsoft Edge 停止开发 Linear A，用于Opera 4.0至6.1版本。 Linear B，用于Opera 7.0至9.2版本。 Futhark，用于Opera 9.5至10.2版本。 Carakan，用于Opera 10.5至12.1版本。 Narcissus，开放源代码，由布兰登·艾克编写（他也编写了SpiderMonkey）。 Tamarin，由Adobe Labs编写。 排版引擎活跃 Blink-Chrome EdgeHTML-Microsfot EDGE Gecko-Mozilla Firefox Webkit-Safari 停止开发 Presto-老Opera，新Opera用的Blink Trident-IE","categories":[],"tags":[{"name":"浏览器","slug":"浏览器","permalink":"https://re0gamer.com/tags/浏览器/"},{"name":"引擎","slug":"引擎","permalink":"https://re0gamer.com/tags/引擎/"}]},{"title":"yarn global安装的包在windows下无法运行","slug":"yarn-global安装的包在windows下无法运行","date":"2019-03-24T14:10:26.000Z","updated":"2019-03-24T14:19:39.422Z","comments":true,"path":"2019/03/24/yarn-global安装的包在windows下无法运行/","link":"","permalink":"https://re0gamer.com/2019/03/24/yarn-global安装的包在windows下无法运行/","excerpt":"","text":"起因大概在2019年1月的时候，就遇到了使用yarn global安装包后运行报错的问题，看了一下大概是powershell相关的错误提示。然后去github上面看yarn的源码，yarn使用了cmd-shim来生成脚本，其中生成的powershell脚本有些问题，造成了此次yarn global安装包的问题。yarn的issues也有相关的bug反馈。 解决这段时间一直没有关注这件事，暂时使用npm的全局包代替。今天偶然间用yarn global安装了一个包然后又遇到了这个问题，然后再去yarn的issues看，最新的1.15.2版本已经修复了这个问题。然后我赶紧安装了最新的yarn，并使用yarn global upgrade升级所有全局安装的包，然后就正常了。","categories":[],"tags":[{"name":"yarn","slug":"yarn","permalink":"https://re0gamer.com/tags/yarn/"}]},{"title":"关于盆骨前倾与睡眠","slug":"关于盆骨前倾与睡眠","date":"2019-03-19T13:34:18.000Z","updated":"2019-03-24T13:56:17.399Z","comments":true,"path":"2019/03/19/关于盆骨前倾与睡眠/","link":"","permalink":"https://re0gamer.com/2019/03/19/关于盆骨前倾与睡眠/","excerpt":"","text":"前因由于长期久坐以及缺少运动，腰部一直有不适感。以及长期睡眠质量差。 盆骨前倾之前一直别人说我屁股翘，屁股大，我都没太在意，大概在今年的时候才意识到这原来是盆骨前倾。因为长期的久坐造成的盆骨前倾与腰疼。 因为长期的腰疼，我一直在寻找解决的办法，前些天在某keep上看到有个关于盆骨前倾恢复的教程，便照着做了两天，有一些效果。 睡眠我一直睡眠都不怎么好，因为经常晚睡，不运动。近段时间开始了夜跑，发现躺床上没多久就睡着了，完美解决了失眠的问题。建议失眠小伙伴们可以试试。不过主要还是因为这段时间离职，没事干，如果上班了估计很难坚持了吧。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"https://re0gamer.com/tags/生活/"}]},{"title":"组件之间的传值","slug":"组件之间的传值","date":"2019-03-16T12:59:52.000Z","updated":"2019-03-16T13:04:56.334Z","comments":true,"path":"2019/03/16/组件之间的传值/","link":"","permalink":"https://re0gamer.com/2019/03/16/组件之间的传值/","excerpt":"","text":"父向子，通过props123456789101112131415161718192021222324252627282930313233&lt;template&gt; &lt;div&gt; &lt;h2&gt;父组件&lt;/h2&gt; &lt;br&gt; &lt;Child-one :parentMessage=\"parentMessage\"&gt;&lt;/Child-one&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import ChildOne from '../components/Son' export default &#123; components: &#123; ChildOne &#125;, data() &#123; return &#123; parentMessage: '我是来自父组件的消息' &#125; &#125;&#125;&lt;/script&gt; &lt;template&gt; &lt;div&gt; &lt;h3&gt;我是子组件一&lt;/h3&gt; &lt;span&gt;&#123;&#123;parentMessage&#125;&#125;&lt;/span&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123; props: ['parentMessage']&#125;&lt;/script&gt; 子向父通过emitEvent事件1234567891011121314151617181920212223242526272829303132333435363738 &lt;template&gt; &lt;div&gt; &lt;h2&gt;父组件&lt;/h2&gt; &lt;br&gt; &lt;Child-one @childEvent=\"parentMethod\"&gt;&lt;/Child-one&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import ChildOne from '../components/Son' export default &#123; components: &#123; ChildOne &#125;, data() &#123; return &#123; parentMessage: '我是来自父组件的消息' &#125; &#125;, methods: &#123; parentMethod() &#123; alert(this.parentMessage) &#125; &#125;&#125;&lt;/script&gt; &lt;!--子组件--&gt;&lt;template&gt; &lt;div&gt; &lt;h3 v-on=\"$emit('childEvent')\"&gt;我是子组件一&lt;/h3&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123;&#125;&lt;/script&gt;","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://re0gamer.com/tags/javascript/"},{"name":"vue","slug":"vue","permalink":"https://re0gamer.com/tags/vue/"}]},{"title":"new和字面量的区别","slug":"new和字面量的区别","date":"2019-03-15T13:48:48.000Z","updated":"2019-03-15T13:59:02.437Z","comments":true,"path":"2019/03/15/new和字面量的区别/","link":"","permalink":"https://re0gamer.com/2019/03/15/new和字面量的区别/","excerpt":"","text":"在调用new的过程会发生4件事情： 新生成一个对象 链接到原型 绑定this 返回新对象 试着自己实现一个new 1234567function create() &#123; let obj = &#123;&#125;; let Con = [].shift.call(arguments); obj.__proto__ = Con.apply(obj, arguments); let result = Con.apply(obj, arguments); return result instanceof Object ? result : obj;&#125; 对于对象来说，其实都是通过new产生的，无论是function Foo()还是let a = {}。 对于创建一个对象来说，更推荐实用字面量的方式创建对象，无论是性能上，还是可读性上。因为使用new Object()的方式创建对象需要通过作用域链一层层找到Object，但是字面量方式没有这个问题。 function Foo(){} function就是个语法糖，内部等同于new Function()；let a = {a:1}这个字面量内部也是使用了new Object()。","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://re0gamer.com/tags/javascript/"}]},{"title":"GET与POST的区别","slug":"GET与POST的区别","date":"2019-03-14T14:07:40.000Z","updated":"2019-03-14T14:19:08.693Z","comments":true,"path":"2019/03/14/GET与POST的区别/","link":"","permalink":"https://re0gamer.com/2019/03/14/GET与POST的区别/","excerpt":"","text":"分类 GET POST 后退按钮/刷新 无害 数据会被重新提交 书签 可收藏为书签 不可收藏为书签 缓存 能被缓存 不能被缓存 编码类型 application/x-www-form-urlencoded application/x-www-form-urlencoded或multipart/form-data。为二进制数据使用多重编码 历史 参数保留在浏览器中 c参数不会保留在浏览器历史中 对数据长度的限制 当发送数据时，GET方法向URL添加数据；URL的长度是受限的，2048个字符。 无限制 对数据类型的限制 只允许ASCII字符 没有限制。也允许二进制数据。 安全性 与POST相比，GET的安全性较差，因为发送的数据是URL的一部分。在发送密码或其他敏感信息时绝不要使用GET POST比GET更安全，因为参数不会被保存在浏览器历史或web服务器日志中 可见性 数据在URL中对所有人都是可见的 u数据不会显示在URL中","categories":[],"tags":[{"name":"HTTP","slug":"HTTP","permalink":"https://re0gamer.com/tags/HTTP/"},{"name":"GET","slug":"GET","permalink":"https://re0gamer.com/tags/GET/"},{"name":"POST","slug":"POST","permalink":"https://re0gamer.com/tags/POST/"},{"name":"网络通信","slug":"网络通信","permalink":"https://re0gamer.com/tags/网络通信/"}]},{"title":"win10系统UWP应用自启动设置","slug":"win10系统UWP应用自启动设置","date":"2019-03-13T13:18:41.000Z","updated":"2019-03-13T13:21:24.455Z","comments":true,"path":"2019/03/13/win10系统UWP应用自启动设置/","link":"","permalink":"https://re0gamer.com/2019/03/13/win10系统UWP应用自启动设置/","excerpt":"","text":"win+R输入“shell:appsfolder” 找到“邮件”这个应用 右键“邮件”并创建快捷方式，会提示无法在当前目录创建，会创建到桌面 win+E打开资源管理器进入到“C:\\Users\\用户名\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup” 把桌面的快捷方式放入到“启动”这个目录","categories":[],"tags":[{"name":"win10","slug":"win10","permalink":"https://re0gamer.com/tags/win10/"},{"name":"自启动","slug":"自启动","permalink":"https://re0gamer.com/tags/自启动/"},{"name":"UWP","slug":"UWP","permalink":"https://re0gamer.com/tags/UWP/"}]},{"title":"遇到的部分面试问题","slug":"遇到的部分面试问题","date":"2019-03-09T15:28:22.000Z","updated":"2019-03-21T15:54:58.320Z","comments":true,"path":"2019/03/09/遇到的部分面试问题/","link":"","permalink":"https://re0gamer.com/2019/03/09/遇到的部分面试问题/","excerpt":"","text":"说说es6新增内容 扩展运算符扩展数组与对象 箭头函数与bind有何不同 node跨域的方法 自适应不同分辨率 前端优化 link与import不同 link属于XHTML标签，而@import是css提供的一种方式。 link标签除了可以加载css外，还可以做很多其他的事情，比如定义RSS，定义rel连接属性等，而 @import只能加载css。 加载顺序也不同。当一个页面被加载的时候，link引用的css会同时被加载，而@import引用的css 会等到页面全部被下载完再加载。 兼容性的差别。@import ie5以上才能被支持。 使用dom控制样式时的差别。link标签可用dom控制，@import不可。 @import可以在css中再次引入其他样式表，这样做有个缺点，会对服务器产生过多http请求。 vue与react有何不同 react性能优于vue vue用的模板，react用的jsx。 react是在js里面写css 闭包，可能产生的问题以及解决方案 vue组件通信 不同大小设备适配 基础类型与引用类型有哪些 cookie与localstorage有什么区别 上下左右居中 h5 ‘cover’了解多少 transform与transition有什么区别 用transform写旋转怎么写 上传文件如何不刷新页面，ajax能上传文件吗？ 如何做多人聊天，不使用websocket如何做实现长连接，使用定时器做长连接有什么问题（不考虑服务器资源方面）。 h5中有什么能用于上传的新东西 XMLHttpRequest对象的第二版，从此ajax能够上传文件了，主要用的是FormData对象 XMLHttpRequest第二版还定义了一个progress事件，可以用来制作进度条。 如果上传的是图片文件，利用File API可以做一个图片预览，主要用到FileReader对象。 有哪些新建对象的方式。 父子组件通信，非父子组件通信。 Vue-router事件 http状态码 vuex的action和mutation有什么不同 Vue router登录验证 异步组件 ios，android有哪些兼容q问题 开发过哪些插件 overflow hidden 去塌陷原理 如果没有明确设定容器高情况下，它要计算内容全部高度才能确定在什么位置hidden，浮动的高度就要被计算进去，顺带达成了清理浮动的目标。独立的块级上下文可以包裹浮动流，全部浮动子元素也不会引起容器高度塌陷，也就是说包含块会把浮动元素的高度也计算在内，所以不用清除浮动来撑起高度。 哪个期间能访问到vue实例里面的data 创建后与销毁前 computed与watch应用场景，与不同 computed有缓存，依赖项的值没变化时，结果调用不会变化 computed是计算属性，用起来就像data一样，watch是监听机制+事件机制，监听项发生变化的时候，然后执行对应事件的方法。 watch擅长处理的场景：一个数据影响多个数据；computed擅长处理的场景：一个数据受多个数据影响。 get请求如何将#3发送到后台 url转码，#转为%23 jquery on,bind，delegate，live不同 Live与delegate非常相似，实际上live内部使用的delegate来实现的，它们都监听事件的冒泡。delegate性能更高。 新版本bind，delegate，live底层都是用on实现的。 get post不同 get产生一个TCP数据包，post产生两个TCP数据包 get会把header和data一并发送出去，服务器响应200；而post浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200。 get参数受限于url长度，具体数值取决于浏览器和服务器的限制，而post无限制。 浏览器内核 Trident –IE Gecko – Firefox Webkit – Safari Chromium – Chrome Presto – Opera json在堆栈里面的存储 基本类型存在栈上面的 引用类型存的值存在堆上面的，栈上面有引用地址 Jquery的eq() Vue生命周期created和mounted的区别 闭包 数组，里面是对象，存的类似name,id等字段，如果根据价格排序。​ ​ dt- sort((a, b) =&gt; {​ ​ return - price &gt; - price ? 1 : -1​ ​ }) es6的新增的数组的方法。 Array的内置方法 From Of 实例的内置方法 copyWithin find和findIndex Fill Entries,keys,values Includes Flat,flatMap 数组的sum()方法（数组没有sum方法，所以这问题是错误的） axios与ajax的区别（估计问的是jquery的ajax和axios的区别） 从 nod- js 创建 http 请求 支持 Promise API 客户端支持防止CSRF 提供了一些并发请求的接口 tcp的实现 首先，采用三次握手来建立TCP连接，四次握手来释放TCP连接，从而保证建立的传输信道是可靠的。 其次，TCP采用了连续ARQ协议（回退N，Go-back-N；超时自动重传）来保证数据传输的正确性，使用滑动窗口协议来保证接方能够及时处理所接收到的数据，进行流量控制。 最后，TCP使用慢开始、拥塞避免、快重传和快恢复来进行拥塞控制，避免网络拥塞。 vue与jquery的有什么不同 jQuery是使用选择器（$）选取DOM对象，对其进行赋值、取值、事件绑定等操作，其实和原生的HTML的区别只在于可以更方便的选取和操作DOM对象，而数据和界面是在一起的。比如需要获取label标签的内容：$(“lable”).val();,它还是依赖DOM元素的值。 Vue则是通过Vue对象将数据和View完全分离开来了。对数据进行操作不再需要引用相应的DOM对象，可以说数据和View是分离的，他们通过Vue对象这个vm实现相互的绑定。这就是传说中的MVVM。 vue适用的场景：复杂数据操作的后台页面，表单填写页面 jquery适用的场景：比如说一些html5的动画页面，一些需要js来操作页面样式的页面 面向对象与面向过程的区别 面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个依次调用就可以了。 面向对象是把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描叙某个事物在整个解决问题的步骤中的行为。 TCP与UDP的区别 TCP(传输控制协议 Transmission Control Protocol) 提供IP环境下的数据可靠传输(一台计算机发出的字节流会无差错的发往网络上的其他计算机，而且计算机A接收数据包的时候，也会向计算机B回发数据包，这也会产生部分通信量)，有效流控，全双工操作(数据在两个方向上能同时传递)，多路复用服务，是面向连接，端到端的传输; 面向连接：正式通信前必须要与对方建立连接。事先为所发送的数据开辟出连接好的通道，然后再进行数据发送，像打电话。 TCP支持的应用协议：Telnet(远程登录)、FTP(文件传输协议)、SMTP(简单邮件传输协议)。TCP用于传输数据量大，可靠性要求高的应用。 UDP(用户数据报协议，User Data Protocol) 面向非连接的(正式通信前不必与对方建立连接，不管对方状态就直接发送，像短信，QQ)，不能提供可靠性、流控、差错恢复功能。UDP用于一次只传送少量数据，可靠性要求低、传输经济等应用。 UDP支持的应用协议：NFS(网络文件系统)、SNMP(简单网络管理系统)、DNS(主域名称系统)、TFTP(通用文件传输协议)等。 TCP：面向连接、传输可靠(保证数据正确性,保证数据顺序)、用于传输大量数据(流模式)、速度慢，建立连接需要开销较多(时间，系统资源)。 UDP：面向非连接、传输不可靠、用于传输少量数据(数据包模式)、速度快。 设计模式有哪些 工厂模式——工厂模式是为了解决多个类似对象声明的问题;也就是为了解决实列化对象产生重复的问题。 优点：能解决多个相似的问题。 缺点：不能知道对象识别的问题(对象的类型不知道)。 单体模式——单体模式是一个用来划分命名空间并将一批属性和方法组织在一起的对象，如果它可以被实例化，那么它只能被实例化一次。 可以用来划分命名空间，减少全局变量的数量。 使用单体模式可以使代码组织的更为一致，使代码容易阅读和维护。 可以被实例化，且实例化一次。 模块模式 代理模式 职责链模式 命令模式 模板方法模式 策略模式 发布订阅模式 中介者模式​ ​ ​ ​ ​ 工厂模式有哪些好处 能解决多个相似的问题。 vue.use()原理 require 与import区别 防抖动 prototype继承原理 实例.__proto===构造函数.prototype 查找实例的属性时，先判断自身有没有这个属性，如果有，那么直接获取； 否则，查找它的proto有没有这个属性，如果有，就是它； 否则，查找它的proto.proto有没有这个属性… 如果一直找不到，就是undefined。","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://re0gamer.com/tags/前端/"},{"name":"面试","slug":"面试","permalink":"https://re0gamer.com/tags/面试/"},{"name":"面试题","slug":"面试题","permalink":"https://re0gamer.com/tags/面试题/"}]},{"title":"深夜排查小飞机故障","slug":"深夜排查小飞机故障","date":"2019-03-08T14:29:53.000Z","updated":"2019-03-08T14:49:48.397Z","comments":true,"path":"2019/03/08/深夜排查小飞机故障/","link":"","permalink":"https://re0gamer.com/2019/03/08/深夜排查小飞机故障/","excerpt":"","text":"起因大概晚上8点左右，突然不能访问谷歌了，这已经是今年差不多第五次出现问题了。 排查故障之前基本是端口被封，或者是IP被封，换个端口或者是IP就好了。 先是打开powershell准备SSH登录到搬瓦工服务器，然鹅访问超时。然后只好打开搬瓦工官网，官网bwh8.net也打不开了，大概率被和谐了，尝试打开bwh9.net这个网址，然后看到 官网 登录新的官网，在base shell里面重启了小飞机服务，换了几个端口号，然鹅还是不能用小飞机。用官网测试IP是否被封的工具测试，也看到没有被封。看到官网有个QQ群，不得不加群求助了，然鹅在群里几位热心群友的指点下，用nc命令测试得出结论TCP没有被封，本地电脑ping搬瓦工服务器ping不通，但是用腾讯云服务器ping搬瓦工服务器能ping通，大概猜测到是因为自身网络原因。 果然第二天早上小飞机就能正常使用了，我也是给这广电网络跪了。","categories":[],"tags":[{"name":"小飞机","slug":"小飞机","permalink":"https://re0gamer.com/tags/小飞机/"},{"name":"搬瓦工","slug":"搬瓦工","permalink":"https://re0gamer.com/tags/搬瓦工/"},{"name":"VPN","slug":"VPN","permalink":"https://re0gamer.com/tags/VPN/"}]},{"title":"2019计划","slug":"2019计划","date":"2019-01-01T15:19:02.000Z","updated":"2019-03-07T15:19:05.263Z","comments":true,"path":"2019/01/01/2019计划/","link":"","permalink":"https://re0gamer.com/2019/01/01/2019计划/","excerpt":"","text":"在这立一个flag，希望今年能把这些坚持下去 把vuepress的那个主题做完 坚持算法练习，与开源社区共享 坚持写博客 健身减肥 背单词 坚持练字","categories":[],"tags":[{"name":"年初计划","slug":"年初计划","permalink":"https://re0gamer.com/tags/年初计划/"}]},{"title":"2018年总结","slug":"2018年总结","date":"2018-12-31T14:07:26.000Z","updated":"2019-03-07T15:19:05.262Z","comments":true,"path":"2018/12/31/2018年总结/","link":"","permalink":"https://re0gamer.com/2018/12/31/2018年总结/","excerpt":"","text":"一年又快结束了，回想这一年却并无太多成长。想做的几个小东西也因为后面觉得太过复杂而弃坑删了项目。 作为一个伪软粉，还是很喜欢 typescript 的，今年在更多的项目使用了 ts，尝试了一下 uwp，.net core，flutter。还尝试学习了一下 java web 相关的之类的。个人还是更喜欢 uwp 和 flutter，不过 uwp 看情形是很难火的了，flutter 势头还不错。 也在学习中思考了一下自己学习的的方向，是学习java web相关的还是学习更多客户端相关的。java虽然大学学过，不过几年没用，确实也基本忘了。 react native这两年热度不低，不过个人始终认为是一条歪路，就没怎么去学习过，也不打算去学习了，就算学也去学习flutter。","categories":[],"tags":[{"name":"年末总结","slug":"年末总结","permalink":"https://re0gamer.com/tags/年末总结/"}]},{"title":"安装最新版powershell，把PWSH Admin添加进shift右键文件夹的菜单里","slug":"安装最新版powershell，把PWSH-Admin添加进shift右键文件夹的菜单里","date":"2018-08-17T12:27:31.000Z","updated":"2019-03-07T15:19:05.269Z","comments":true,"path":"2018/08/17/安装最新版powershell，把PWSH-Admin添加进shift右键文件夹的菜单里/","link":"","permalink":"https://re0gamer.com/2018/08/17/安装最新版powershell，把PWSH-Admin添加进shift右键文件夹的菜单里/","excerpt":"","text":"安装最新版powershell微软把powershell开源了很久了，最新版要在github上面下载https://github.com/PowerShell/PowerShell/releases 把以admin启动最新版powershell添加进注册表 win+R 输入regedit打开注册表。 来到路径 HKEY_CLASSES_ROOT\\Directory\\Background\\shell 里面。 右键shell新建项，取名叫“PWSHAsAdmin”，名字随便取的。 给右侧的的（默认）赋值为“PWSH Admin”。 在右侧新建字符串Extended，类型为REG_SZ。 在右侧新建字符串HasLUAShield，类型为REG_SZ。 在右侧新建字符串Icon,类型为REG_SZ, 值为pwsh.exe。如图所示： 图片描述 右键点击“PWSHAsAdmin”,新建项“command”。 在右侧把默认值改为pwsh -windowstyle hidden -Command “Start-Process cmd -ArgumentList ‘/s,/k,pushd,%V &amp;&amp; start pwsh &amp;&amp; exit’ -Verb RunAs”如图所示： 图片描述 试试成果 以管理员权限打开powershell","categories":[],"tags":[{"name":"powershell","slug":"powershell","permalink":"https://re0gamer.com/tags/powershell/"}]},{"title":"eggjs+typescript+mysql","slug":"尝试使用eggjs-typescript-mysql","date":"2018-06-13T09:44:52.000Z","updated":"2019-03-07T15:19:05.270Z","comments":true,"path":"2018/06/13/尝试使用eggjs-typescript-mysql/","link":"","permalink":"https://re0gamer.com/2018/06/13/尝试使用eggjs-typescript-mysql/","excerpt":"","text":"安装egg命令行工具1npm i egg-init -g 使用命令行工具新建项目12egg-init 项目名称选择项目的类型为typescript 安装mysql的插件1yarn add egg-mysql 插件的配置1234567891011121314151617181920212223242526272829303132333435363738// config/plugin.tsconst plugin: EggPlugin = &#123; static: true, nunjucks: &#123; enable: true, package: &apos;egg-view-nunjucks&apos; &#125;, mysql: &#123; enable: true, package: &apos;egg-mysql&apos; &#125;&#125;// config/config.local.tsexport default () =&gt; &#123; const config: DefaultConfig = &#123; mysql: &#123; // 单数据库信息配置 client: &#123; // host host: &apos;127.0.0.1&apos;, // 端口号 port: &apos;3306&apos;, // 用户名 user: &apos;creanme&apos;, // 密码 password: &apos;pwd123&apos;, // 数据库名 database: &apos;test&apos; &#125;, // 是否加载到 app 上，默认开启 app: true, // 是否加载到 agent 上，默认关闭 agent: false &#125; &#125; return config&#125; 未完待续","categories":[],"tags":[{"name":"eggjs","slug":"eggjs","permalink":"https://re0gamer.com/tags/eggjs/"},{"name":"typescript","slug":"typescript","permalink":"https://re0gamer.com/tags/typescript/"},{"name":"mysql","slug":"mysql","permalink":"https://re0gamer.com/tags/mysql/"},{"name":"nodejs","slug":"nodejs","permalink":"https://re0gamer.com/tags/nodejs/"}]},{"title":"博客的更新与脚本","slug":"博客的更新与脚本","date":"2018-06-07T16:27:31.000Z","updated":"2019-03-07T15:19:05.268Z","comments":true,"path":"2018/06/08/博客的更新与脚本/","link":"","permalink":"https://re0gamer.com/2018/06/08/博客的更新与脚本/","excerpt":"","text":"使用creanme.github.io与hexo阶段由于github.io速度太慢，而且电脑重装过一次系统，以前写的博文都丢失了，只剩下github上生成的静态文件，.md文件都没了。 把hexo生成的文件部署在国内服务器上之前买的vps都是国外的，访问速度太慢，不好用来搭建国内访问的网站，于是买了几年某良心云。 首先在github上面建个仓库blog，hexo与master分支，hexo分支用来保存整个项目，方便以后本地电脑上的项目丢失了，直接clone下来就可以继续更新；master分支主要用来展示.md。 写博客就在本地上写，写完hexo g生成静态文件。然后把整个项目push到hexo分支，把source/_post文件夹里面的文件push到master。 脚本123456789101112hexo ggit add -Agit commit -m &quot;update blog&quot;git push origin hexocd .\\source\\_postsgit add -Agit commit -m &quot;update blog&quot;git push origin masterssh -i &quot;密钥文件绝对路径&quot; name@address &gt; /dev/null 2&gt;&amp;1 &lt;&lt; eeooffcd /var/www/bloggit pull origin hexoecho done!","categories":[],"tags":[{"name":"ps1","slug":"ps1","permalink":"https://re0gamer.com/tags/ps1/"},{"name":"powershell","slug":"powershell","permalink":"https://re0gamer.com/tags/powershell/"},{"name":"脚本","slug":"脚本","permalink":"https://re0gamer.com/tags/脚本/"}]},{"title":"子域名配置","slug":"子域名配置","date":"2018-06-07T15:12:48.000Z","updated":"2019-03-07T15:19:05.269Z","comments":true,"path":"2018/06/07/子域名配置/","link":"","permalink":"https://re0gamer.com/2018/06/07/子域名配置/","excerpt":"","text":"域名管理处的配置我是把在namesilo处买的域名，然后把NameServers指向了 f1g1ns1.dnspod.net f1g1ns2.dnspod.net。然后在dnspod 添加了*domain.com 泛域名解析，然后要等一会儿，毕竟namesilo是国外的域名商，我开始以为没有作用，然后反复试各种方法，浪费了很多时间。 nginx 的配置server{ listen 80; server_name riyue.me; if ($scheme != &quot;https&quot;) { return 301 https://$host$request_uri; } root /var/www/riyue; index index.php index.html index.htm; location ~ \\.php$ { include /etc/nginx/fastcgi_params; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; } } server{ listen 80; server_name blog.riyue.me; # if ($scheme != &quot;https&quot;) { # return 301 https://$host$request_uri; # } root /var/www/blog/public; index index.php index.html index.htm; location ~ \\.php$ { include /etc/nginx/fastcgi_params; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; } } 重启nginxnginx -s reload","categories":[],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://re0gamer.com/tags/nginx/"},{"name":"域名","slug":"域名","permalink":"https://re0gamer.com/tags/域名/"},{"name":"dns","slug":"dns","permalink":"https://re0gamer.com/tags/dns/"}]},{"title":"letsencrypt的免费https证书申请与nginx部署","slug":"letsencrypt的免费https证书申请与nginx部署","date":"2018-06-06T10:44:52.000Z","updated":"2019-03-09T14:58:18.755Z","comments":true,"path":"2018/06/06/letsencrypt的免费https证书申请与nginx部署/","link":"","permalink":"https://re0gamer.com/2018/06/06/letsencrypt的免费https证书申请与nginx部署/","excerpt":"","text":"使用certbot获取证书 第一步 选择好使用的软件和系统，然后页面就自动滚动到了相应处。 第二步 使用下面命令安装相关工具。 yum -y install yum-utils yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional 第三步 安装python-cert-nginx $ sudo yum install python2-certbot-nginx 第四步 使用命令，获得证书 $ sudo certbot --nginx 第五步 打开nginx.conf 添加 server { listen 443 ssl; server_name blog.riyue.me; ssl_certificate /etc/letsencrypt/live/riyue.me/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/riyue.me/privkey.pem; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; ssl_dhparam /etc/ssl/certs/dhparam.pem; ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA'; ssl_session_timeout 1d; ssl_session_cache shared:SSL:50m; ssl_stapling on; ssl_stapling_verify on; add_header Strict-Transport-Security max-age=15768000; # The rest of your server block root /var/www/blog/public; index index.html index.htm; location / { try_files $uri $uri/ =404; } } 第六步 重启nginx","categories":[],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://re0gamer.com/tags/nginx/"},{"name":"https","slug":"https","permalink":"https://re0gamer.com/tags/https/"}]},{"title":"vscode vue ts项目 prettier配置","slug":"vscode-vue-ts项目-prettier配置","date":"2018-05-24T15:17:37.000Z","updated":"2019-03-09T15:27:18.997Z","comments":true,"path":"2018/05/24/vscode-vue-ts项目-prettier配置/","link":"","permalink":"https://re0gamer.com/2018/05/24/vscode-vue-ts项目-prettier配置/","excerpt":"","text":"必装插件 Prettier - Code formatter配置typescript 需要tslint和tslint-config-prettier1yarn add -D tslint tslint-config-prettier 根目录添加tslint.json 123456789101112131415&#123; &quot;defaultSeverity&quot;: &quot;warning&quot;, &quot;extend&quot;: [&quot;tslint:recommended&quot;, &quot;tslint-config-prettier&quot;], &quot;linterOptions&quot;: &#123; &quot;exclude&quot;: [&quot;node_modules/**&quot;] &#125;, &quot;rules&quot;: &#123; &quot;quotemark&quot;: [true, &quot;single&quot;], &quot;indent&quot;: [true, &quot;spaces&quot;, 4], &quot;interface-name&quot;: false, &quot;ordered-imports&quot;: false, &quot;object-literal-sort-keys&quot;: false, &quot;no-consecutive-blank-lines&quot;: false &#125;&#125; 样式部分需要stylint和prettier-stylelintyarn add -D stylelint prettier-stylelint stylelint-config-ydj 根目录添加.stylelintrc.js 123456789module.exports = &#123; extends: [ &apos;stylelint-config-ydj/scss&apos;, // your stylint config &apos;./node_modules/prettier-stylelint/config.js&apos; ], rules: &#123; &apos;string-quotes&apos;: &apos;double&apos; &#125;&#125;; prettier配置，在根目录添加.prettierrc{ &quot;eslintIntegration&quot;: true, &quot;stylelintIntegration&quot;: true, &quot;tabWidth&quot;: 4, &quot;singleQuote&quot;: true, &quot;semi&quot;: false } 编辑器配置里面需要加入 1234567// vetur configuration&quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;,// prettier configuration&quot;prettier.disableLanguages&quot;: [ &quot;vue&quot;],","categories":[],"tags":[{"name":"vscode","slug":"vscode","permalink":"https://re0gamer.com/tags/vscode/"},{"name":"vue","slug":"vue","permalink":"https://re0gamer.com/tags/vue/"},{"name":"ts","slug":"ts","permalink":"https://re0gamer.com/tags/ts/"},{"name":"prettier","slug":"prettier","permalink":"https://re0gamer.com/tags/prettier/"}]},{"title":"vscode常用插件","slug":"vscode常用插件","date":"2018-05-14T06:26:11.000Z","updated":"2019-03-07T15:19:05.267Z","comments":true,"path":"2018/05/14/vscode常用插件/","link":"","permalink":"https://re0gamer.com/2018/05/14/vscode常用插件/","excerpt":"","text":"1.auto import在引用某些模块后会提示你引用某个包 2.babel es6/es7babel的es6/es7增强 3.beautify非常好用，的一款格式化代码的插件，能格式化许多种代码。 4.change-case一键转换大小驼峰的风格 5.debugger for chrome用于在chrome上面的debug 6.document this主要用于代码的批注，后期文档的生成。 7.easy less自动把less编译为css 8.eslintJavaScript和JSX检查工具 9.git history增强了vscode的git功能 10.go微软官方出的go语言的插件 11.html css supporthtml里面的class提示 12.html snippetshtml的代码补全 13.javascript(es6) code snippetses6代码提示 14.node debug提示node.js代码 15.one dark pro热门的主题 16.open in browser直接在浏览器里面打开 17.output colorizeroutput，debug,extensions增强 18.path autocomplete路径提示 19.react-beautifyreact代码格式化 20.react-native/reactreact react-native代码的提示 21.reactjs code snippetsreact 代码提示 22.TODO Hightlight高亮todo 23.TSLintts代码检查工具 24.veturvue代码提示，检测，格式化工具。 25.vscode-icons文件图标","categories":[],"tags":[{"name":"vscode","slug":"vscode","permalink":"https://re0gamer.com/tags/vscode/"},{"name":"vscode插件","slug":"vscode插件","permalink":"https://re0gamer.com/tags/vscode插件/"}]},{"title":"react native小知识","slug":"react-native小知识","date":"2018-05-13T12:38:54.000Z","updated":"2019-03-07T15:19:05.265Z","comments":true,"path":"2018/05/13/react-native小知识/","link":"","permalink":"https://re0gamer.com/2018/05/13/react-native小知识/","excerpt":"","text":"执行react-native run-android命令后，开始下载gradle文件，速度非常慢。 解决办法：1. 手动使用迅雷下载，迅雷下载好后，把文件放入到一个文件夹中，最好路径不带中文。 2. 修改 项目名\\android\\gradle\\wrapper 下的gradle-wrapper.properties，把下 载的地址改为自己已经下好的地址。distributionUrl=file\\:///D:/gradle-2.14.1-all.zip 冒号要用\\转 执行react-native run-android命令后，使用的vs的模拟器，连接不上模拟器。 解决办法： 参考的 http://www.cnblogs.com/tianma3798/p/5911395.html1. 打开模拟器的“工具”菜单。 2. 选项卡切换到Network。 3. 使用命令adb connect 169.254.138.177:5555就连接上了。 4. 重新运行命令react-native run-android。","categories":[],"tags":[{"name":"react-native","slug":"react-native","permalink":"https://re0gamer.com/tags/react-native/"},{"name":"react","slug":"react","permalink":"https://re0gamer.com/tags/react/"},{"name":"开发工具","slug":"开发工具","permalink":"https://re0gamer.com/tags/开发工具/"}]},{"title":"前端推荐书籍","slug":"前端推荐书籍","date":"2018-05-13T12:28:00.000Z","updated":"2019-03-07T15:19:05.267Z","comments":true,"path":"2018/05/13/前端推荐书籍/","link":"","permalink":"https://re0gamer.com/2018/05/13/前端推荐书籍/","excerpt":"","text":"《JavaScript权威指南（第六版）》 《JavaScript高级程序设计》 《JavaScript DOM编程艺术》 《JavaScript编程精解》 《JQuery权威指南》 《编写可维护的JavaScript》 《JavaScript异步编程》 《高性能JavaScript》","categories":[],"tags":[{"name":"书","slug":"书","permalink":"https://re0gamer.com/tags/书/"}]}]}